{"version":3,"sources":["component/InformContainer/InformContainer.module.css","containers/ChordsPageRouter/ChordList/ChordList.module.scss","component/NavItemRoute/NavItem.module.scss","component/DotsLoader/DotsLoader.module.css","static/svgs/expand-fullscreen.svg","static/svgs/exit-fullscreen.svg","component/AuthorsAlphabetPanel/AuthorsAlphabetPanel.module.scss","pages/MainPage/MainPage.module.scss","App.module.scss","component/Navbar/Navbar.module.css","static/svgs/moon.svg","static/svgs/sun.svg","static/svgs/arrow-up.svg","containers/SongsPageRouter/Song/Song.module.scss","component/Button/Button.module.scss","constants/cssVarsConfig.ts","utils/helper.ts","serviceWorker.js","constants/Themes.ts","api/settingService.ts","component/ThemeContext/ThemeContext.ts","hooks/useTheme.ts","constants/route.ts","utils/navigation/navigation.ts","component/Navigation/NavigationProvider.tsx","component/Navigation/NavigationContext.ts","constants/ModalTypes.ts","reducer/modal.ts","containers/ContextContainer.tsx","containers/ThemeContextContainer.tsx","component/DotsLoader/DotsLoader.tsx","component/Button/Button.tsx","component/InformContainer/InformContainer.tsx","containers/Errors/Page404/Page404.tsx","containers/Errors/CommonError/CommonError.tsx","pages/ErrorPage/ErrorPage.tsx","constants/chords.ts","utils/stringHelper.ts","containers/ChordsPageRouter/ChordList/ChordList.tsx","component/FullScreenButton/FullScreenButton.tsx","containers/ChordsPageRouter/Chord/Chord.tsx","containers/ChordsPageRouter/ChordProvider/ChordProvider.tsx","containers/ChordsPageRouter/ChordsPageRouter.tsx","component/Header/Header.tsx","component/NavItemRoute/NavItem.tsx","component/NavItemRoute/NavItemRoute.tsx","component/Navbar/Navbar.tsx","containers/MainHeader/MainHeader.tsx","constants/SongsData.ts","component/AuthorsAlphabetPanel/AuthorsAlphabetPanel.tsx","containers/SongsPageRouter/SongList/SongList.tsx","api/songService.ts","utils/canvasHelper.ts","component/ChordItem/ChordItem.tsx","component/ChordsRowPopUp/ChordsRowPopUp.tsx","containers/SongsPageRouter/Song/Song.tsx","hooks/useInterval.ts","containers/SongsPageRouter/SongProvider/SongProvider.tsx","containers/SongsPageRouter/SongsPageRouter.tsx","pages/MainPage/MainPage.tsx","App.tsx","index.tsx","containers/ChordsPageRouter/Chord/Chord.module.scss","containers/Errors/Errors.module.css","component/Header/Header.module.scss","component/ChordsRowPopUp/ChordsRowPopUp.module.scss","containers/SongsPageRouter/SongList/SongList.module.scss"],"names":["module","exports","config","rootElement","document","shadowDOM","include","exclude","variables","scrollToTop","smooth","window","scrollTo","top","behavior","noop","Boolean","location","hostname","match","Themes","getTheme","theme","localStorage","getItem","LIGHT","ThemeContext","React","createContext","state","useTheme","useContext","ROUTE","ERROR","ERROR_ROUTE","_404","concat","_500","_403","COMMON","goTo404","history","push","getNavFunc","path","NavigationProvider","_ref","children","useHistory","goBack","useCallback","goRoot","goToSongs","goToChords","goTo500","goToCommonError","navigation","useMemo","createElement","AppNavigationCtx","Provider","value","undefined","useAppNavigation","appNavigation","Error","ModalTypes","ModalCtx","initialState","modalType","NONE","isModalOpen","modalTitle","modalMessage","chordsRow","userReducer","action","type","_objectSpread","payload","ContextContainer","_useReducer","useReducer","_useReducer2","_slicedToArray","contextValue","dispatch","themeReducer","ThemeContextContainer","DotsLoader","_ref$color","color","className","cn","styles","dotLoader","_defineProperty","Button","_React$PureComponent","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","_this$props","this","props","_this$props$label","label","_this$props$color","icon","_this$props$iconPosit","iconPosition","_this$props$type","_this$props$htmlType","htmlType","_this$props$size","size","_this$props$skeuomorp","skeuomorph","_this$props$justify","justify","_this$props$disabled","disabled","_this$props$dataTestI","dataTestId","_this$props$loading","loading","restProps","_objectWithoutProperties","_excluded","buttonClasses","classNames","btn","btnIconOnly","btnJustify","btnSkeuomorph","iconNode","btnIcon","src","alt","labelNode","Fragment","buttonLabel","_extends","data-test-id","PureComponent","InformContainer","header","headerClassName","message","messageClassName","buttonCancelLabel","_ref$onMount","onMount","onClick","onCancelClick","contentClassName","buttonClassName","buttonCancelClassName","buttonCancelProps","buttonProps","useEffect","content","buttonBlock","Page404","page","button","CommonError","ErrorPage","Switch","Route","component","render","Redirect","to","CHORD_REGEX_PATTERN","ChordsList","A","chord","name","C","D","E","F","G","H","Chords","Object","keys","reduce","chords","note","charAt","forEach","elem","ChordsKeys","getChordsFromString","line","Array","from","Set","split","filter","word","includes","encodeChord","replaceAll","decodeChord","isChordsRow","length","pattern","RegExp","ChordList","_useParams$note","useParams","_useState","useState","_useState2","list","setList","hasNote","withThemeClassName","dark","DARK","map","index","text","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","FullScreenButton","fullscreenElement","exitFullscreen","expandFullscreen","fullScreenBtnIcon","setFullScreenBtnIcon","_toggleFullScreen","_asyncToGenerator","_callee","_context","documentElement","requestFullscreen","Chord","_ref$chord","chordsSameNote","setChordsSameNote","onChordClick","onNoteClick","description","chordImage","chordsSameNoteBlock","buttonsBlock","ChordProvider","_useParams$chordName","chordName","setChord","ChordsPageRouter","exact","Header","renderLeft","renderCenter","renderRight","_ref$position","position","_ref$backgroundColor","backgroundColor","id","slots","slot","NavItem","_ref$active","active","_ref$dataTestId","navItem","NavItemRoute","rest","useRouteMatch","onNavClick","Navbar","block","MainHeader","_useContext","toggleTheme","changeTheme","setItem","saveTheme","moon","sun","SongsData","AuthorsAlphabetPanel","alphabet","author","panel","sign","SongList","_useParams$author","hasAuthor","filteredAuthors","setFilteredAuthors","onSongClick","startsWith","onAuthorClick","getSong","_x","_x2","_getSong","_SongsData$author","file","lines","fetch","lyrics","_toConsumableArray","printChord","_document$getElementB","cnv","width","height","ctx","getContext","strokeStyle","w","h","x","strokeRect","y","getElementById","setAttribute","toDataURL","ChordItem","ChordsRowPopUp","_ref$isOpen","isOpen","_ref$chords","_ref$onClose","onClose","Modal","onRequestClose","overlayClassName","overlay","bodyOpenClassName","body","ariaHideApp","title","Song","_ref$song","song","_ref$song$speed","speed","defaultSpeed","setSpeed","_useState3","_useState4","scrollBtnLabel","setScrollBtnLabel","_useState5","_useState6","scrollable","setScrollable","_useState7","_useState8","_useState8$","activeRowChords","setIsModalState","_useState9","_useState10","time","setTime","_useState11","_useState12","setChords","allChords","_ref2","_ref3","timeout","setTimeout","String","prevState","clearTimeout","autoscroll","scrollBy","onScrollToTopClick","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","toggleScrollable","_ref4","onCloseModal","_ref5","_ref6","row","buttonsBlockWrapper","buttonsBlockContent","prevValue","arrowUp","SongProvider","_useParams","songName","setSong","res","t0","SongsPageRouter","MainPage","App","app","navigator","userAgent","cssVars","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","cacheTime","staleTime","retry","ReactDOM","StrictMode","QueryClientProvider","client","BrowserRouter","serviceWorker","ready","registration","unregister"],"mappings":";yFACAA,EAAOC,QAAU,CAAC,QAAU,iCAAiC,eAAe,sCAAsC,YAAc,sCAAsC,KAAO,8BAA8B,OAAS,gCAAgC,QAAU,iCAAiC,eAAe,sCAAsC,YAAc,wC,oBCAlWD,EAAOC,QAAU,CAAC,OAAS,0BAA0B,KAAO,wBAAwB,QAAU,2BAA2B,KAAO,0B,oBCAhID,EAAOC,QAAU,CAAC,WAAW,0BAA0B,QAAU,0BAA0B,eAAe,8BAA8B,YAAc,8BAA8B,KAAO,sBAAsB,MAAQ,uBAAuB,OAAS,0B,oBCAzPD,EAAOC,QAAU,CAAC,aAAa,+BAA+B,UAAY,+BAA+B,MAAQ,0BAA0B,MAAQ,0BAA0B,MAAQ,4B,oBCDrLD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCC3CD,EAAOC,QAAU,CAAC,MAAQ,oCAAoC,KAAO,qC,oBCArED,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,yB,oBCAvDD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,oB,oBCAhDD,EAAOC,QAAU,CAAC,MAAQ,wB,oBCD1BD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,82pCCA3CD,EAAOC,QAAU,IAA0B,sC,yDCC3CD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,OAAS,qBAAqB,KAAO,mBAAmB,OAAS,qBAAqB,OAAS,qBAAqB,IAAM,kBAAkB,MAAQ,oBAAoB,gBAAgB,4BAA4B,aAAe,4BAA4B,wBAAwB,oCAAoC,oBAAsB,oCAAoC,wBAAwB,oCAAoC,oBAAsB,oCAAoC,OAAS,qBAAqB,MAAQ,sB,mBCAnkBD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,cAAc,4BAA4B,WAAa,4BAA4B,YAAY,0BAA0B,SAAW,0BAA0B,gBAAgB,8BAA8B,YAAc,8BAA8B,YAAc,6BAA6B,iBAAiB,+BAA+B,aAAe,+BAA+B,gBAAgB,8BAA8B,YAAc,8BAA8B,aAAa,2BAA2B,UAAY,2BAA2B,YAAY,0BAA0B,SAAW,0BAA0B,cAAc,4BAA4B,UAAY,4BAA4B,WAAW,yBAAyB,QAAU,yBAAyB,WAAW,yBAAyB,QAAU,yBAAyB,gBAAgB,8BAA8B,aAAe,8BAA8B,eAAe,6BAA6B,YAAc,6BAA6B,cAAc,4BAA4B,WAAa,4BAA4B,YAAY,0BAA0B,SAAW,0BAA0B,MAAQ,sBAAsB,iBAAiB,+BAA+B,cAAgB,+BAA+B,eAAe,+B,qJCDh1CC,EAAS,CAClBC,YAAaC,SACbC,WAAW,EACXC,QAAS,6BACTC,QAAS,GACTC,UAAW,ICLR,SAASC,EAAYC,GACxBC,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAUJ,EAAS,SAAW,SAKrD,SAASK,KCMIC,QACa,cAA7BL,OAAOM,SAASC,UAEiB,UAA7BP,OAAOM,SAASC,UAEhBP,OAAOM,SAASC,SAASC,MAAM,2D,6BCjB3BC,EAAM,SAANA,GAAM,OAANA,EAAM,cAANA,EAAM,YAANA,EAAM,KCOX,SAASC,IACZ,IAAMC,EAAQX,OAAOY,aAAaC,QANpB,kBAOd,OAAOF,GAAgBF,EAAOK,MCJ3B,IAkBMC,EAAeC,IAAMC,cAA4B,CAC1DC,MAAO,CAAEP,MAAOD,OCnBPS,EAAW,WAKpB,MAAO,CAAER,MAFLS,qBAAWL,GADXG,MAASP,OAGYD,M,QCVhBW,EAEF,SAFEA,EAGD,UAHCA,EAIF,SAGHC,EAAUD,EAELE,EAAc,CACvBC,KAAK,GAADC,OAAKH,EAAK,QACdI,KAAK,GAADD,OAAKH,EAAK,QACdK,KAAK,GAADF,OAAKH,EAAK,QACdM,OAAO,GAADH,OAAKH,EAAK,UCTPO,EAAU,SAACC,GACpBA,EAAQC,KAAKR,EAAYC,OAWhBQ,EAAa,SAACF,EAAkBG,GAAY,OAAK,kBAAMH,EAAQC,KAAKE,KC0BlEC,EAnCgB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACxBN,EAAUO,cAEVC,EAASC,uBAAY,WACvBT,EAAQQ,WACT,IAEGE,EAASD,sBAAYP,EAAWF,EAAST,GAAc,IAEvDoB,EAAYF,sBAAYP,EAAWF,EAAST,GAAc,IAE1DqB,EAAaH,sBAAYP,EAAWF,EAAST,GAAe,IAE5DQ,EAAUU,sBAAYP,EAAWF,EAASP,EAAYC,MAAO,IAE7DmB,EAAUJ,sBAAYP,EAAWF,EAASP,EAAYG,MAAO,IAE7DkB,EAAkBL,sBAAYP,EAAWF,EAASP,EAAYK,QAAS,IAEvEiB,EAAaC,mBACf,iBAAO,CACHR,SACAE,SACAC,YACAC,aACAb,UACAc,UACAC,qBAEJ,IAGJ,OAAO5B,IAAA+B,cAACC,EAAiBC,SAAQ,CAACC,MAAOL,GAAaT,IChC7CY,EAAmBhC,IAAMC,mBAAuCkC,GAY9DC,EAVU,WACrB,IAAMC,EAAgBjC,qBAAW4B,GAEjC,GAA6B,qBAAlBK,EACP,MAAMC,MAAM,sDAGhB,OAAOD,G,gBChBNE,EAAU,SAAVA,GAAU,OAAVA,IAAU,eAAVA,IAAU,uCAAVA,EAAU,CAAVA,GAAU,IAKAA,ICKFC,EAAWxC,gBAAkC,IAE7CyC,EAA2B,CACpCC,UAAWH,EAAWI,KACtBC,aAAa,EACbC,WAAY,GACZC,aAAc,GACdC,UAAW,IAGR,SAASC,EAAY9C,EAAmB+C,GAC3C,OAAQA,EAAOC,MACX,IAhByB,oBAiBzB,IAfoC,+BAgBhC,OAAAC,oCAAA,GAAYjD,GAAU+C,EAAOG,SAAO,IAAER,aAAa,IACvD,IAlB0B,qBAmBtB,OAAAO,wBAAA,GACOjD,GACAuC,GAEX,QACI,OAAOvC,GC5BnB,IAOemD,EAPc,SAAHlC,GAAsB,IAAhBC,EAAQD,EAARC,SAC5BkC,EAA0BC,qBAAWP,EAAaP,GAAae,EAAAC,YAAAH,EAAA,GACzDI,EAAe,CAAExD,MADXsD,EAAA,GACkBG,SADRH,EAAA,IAGtB,OAAOxD,IAAA+B,cAACS,EAASP,SAAQ,CAACC,MAAOwB,GAAetC,ICG7C,SAASwC,EAAa1D,EAAmB+C,GAC5C,MTN+B,wBSM3BA,EAAOC,KACPC,wBAAA,GAAYjD,GAAU+C,EAAOG,SAEtBlD,EAIf,IAOe2D,EAPmB,SAAH1C,GAAsB,IAAhBC,EAAQD,EAARC,SACjCkC,EAA0BC,qBAAWK,EAAc,CAAEjE,MAAOD,MAAa8D,EAAAC,YAAAH,EAAA,GACnEI,EAAe,CAAExD,MADXsD,EAAA,GACkBG,SADRH,EAAA,IAGtB,OAAOxD,IAAA+B,cAAChC,EAAakC,SAAQ,CAACC,MAAOwB,GAAetC,I,uECLzC0C,EARqB,SAAH3C,GAAA,IAAA4C,EAAA5C,EAAM6C,aAAK,IAAAD,EAAG,QAAOA,EAAA,OAClD/D,IAAA+B,cAAA,OAAKkC,UAAWC,IAAGC,IAAOC,UAASC,YAAA,GAAKF,IAAOH,IAAS,KACpDhE,IAAA+B,cAAA,YACA/B,IAAA+B,cAAA,YACA/B,IAAA+B,cAAA,c,oKCgEOuC,EAnEH,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,OAAAK,YAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,WAgEP,OAhEOC,YAAAR,EAAA,EAAAS,IAAA,SAAA7C,MACR,WAAU,IAADf,EACL6D,EAgBIC,KAAKC,MAAKC,EAAAH,EAfVI,aAAK,IAAAD,EAAG,GAAEA,EAAAE,EAAAL,EACVhB,aAAK,IAAAqB,EAAG,QAAOA,EACfC,EAAIN,EAAJM,KAAIC,EAAAP,EACJQ,oBAAY,IAAAD,EAAG,OAAMA,EAAAE,EAAAT,EACrB9B,YAAI,IAAAuC,EAAG,UAASA,EAAAC,EAAAV,EAChBW,gBAAQ,IAAAD,EAAG,SAAQA,EAAAE,EAAAZ,EACnBa,YAAI,IAAAD,EAAG,SAAQA,EACf3B,EAASe,EAATf,UACA7C,EAAQ4D,EAAR5D,SAAQ0E,EAAAd,EACRe,kBAAU,IAAAD,GAAQA,EAAAE,EAAAhB,EAClBiB,eAAO,IAAAD,GAAQA,EAAAE,EAAAlB,EACfmB,gBAAQ,IAAAD,GAAQA,EAAAE,EAAApB,EAChBqB,kBAAU,IAAAD,EAAG,SAAQA,EAAAE,EAAAtB,EACrBuB,eAAO,IAAAD,GAAQA,EACZE,EAASC,YAAAzB,EAAA0B,GAEVC,EAAgBC,IAAW,CAC7BzC,IAAO0C,KAAG1F,EAAA,GAAAkD,YAAAlD,EAELgD,IAAO,OAAD1D,OAAQuD,IAAoB,cAATd,GAAoBmB,YAAAlD,EAC7CgD,IAAO2C,eAAiB1F,IAAagE,MAAYE,GAAIjB,YAAAlD,EACrDgD,IAAO,YAAD1D,OAAa+E,OAAqBpE,KAAcgE,MAAYE,GAAIjB,YAAAlD,EACtEgD,IAAO,OAAD1D,OAAQyC,IAAUA,GAAImB,YAAAlD,EAC5BgD,IAAO,OAAD1D,OAAQoF,IAAUA,GAAIxB,YAAAlD,EAC5BgD,IAAO4C,WAAad,GAAO5B,YAAAlD,EAC3BgD,IAAO6C,cAAyB,cAAT9D,GAAwB6C,GAAU5E,GAE9D8C,IAGEgD,EACF3B,IACiB,kBAATA,EACJtF,IAAA+B,cAAA,OAAKkC,UAAWE,IAAO+C,QAASC,IAAK7B,EAAM8B,IAAI,KAE/CpH,IAAA+B,cAAA,QAAMkC,UAAWE,IAAO+C,SAAU5B,IAGpC+B,EACFrH,IAAA+B,cAAA/B,IAAAsH,SAAA,KACsB,SAAjB9B,GAA2ByB,EAC3B7B,GAASpF,IAAA+B,cAAA,QAAMkC,UAAWE,IAAOoD,aAAcnC,GAC9B,UAAjBI,GAA4ByB,GAIrC,OACIjH,IAAA+B,cAAA,SAAAyF,YAAA,GACQhB,EAAS,CACbtD,KAAMyC,EACN1B,UAAW0C,EACXc,eAAcpB,EACdF,SAAUA,GAAYI,IAErBA,EACGvG,IAAA+B,cAAC+B,EAAU,CAACE,MAAgB,cAATd,EAAuB,QAAU,UAEpD9B,GAAYiG,OAI3B/C,EAhEO,CAAStE,IAAM0H,e,qBCoDZC,GApDqC,SAAHxG,GAgB1C,IAfHyG,EAAMzG,EAANyG,OACAC,EAAe1G,EAAf0G,gBACAC,EAAO3G,EAAP2G,QACAC,EAAgB5G,EAAhB4G,iBACAR,EAAWpG,EAAXoG,YACAS,EAAiB7G,EAAjB6G,kBAAiBC,EAAA9G,EACjB+G,eAAO,IAAAD,EAAG7I,EAAI6I,EACdE,EAAOhH,EAAPgH,QACAC,EAAajH,EAAbiH,cACAC,EAAgBlH,EAAhBkH,iBACAC,EAAenH,EAAfmH,gBACAC,EAAqBpH,EAArBoH,sBACAC,EAAiBrH,EAAjBqH,kBACAC,EAAWtH,EAAXsH,YACAlC,EAAOpF,EAAPoF,QAIA,OAFAmC,oBAAUR,EAAS,IAGflI,IAAA+B,cAAA,OAAKkC,UAAWC,IAAGC,KAAOwE,QAASN,IAC/BrI,IAAA+B,cAAA,OAAKkC,UAAWC,IAAGC,KAAOyD,OAAQC,IAAmBD,GACpDE,GAAW9H,IAAA+B,cAAA,OAAKkC,UAAWC,IAAGC,KAAO2D,QAASC,IAAoBD,GACnE9H,IAAA+B,cAAA,OAAKkC,UAAWE,KAAOyE,aAClBR,GAAiBJ,GACdhI,IAAA+B,cAACuC,EAAMkD,YAAA,GACCgB,EAAiB,CACrBtF,KAAK,UACLkC,MAAO4C,EACPG,QAASC,EACTnE,UAAgC,OAArBsE,QAAqB,IAArBA,IAAyBD,EACpCjC,WAAW,gBACXE,QAASA,KAGhB4B,GAAWZ,GACRvH,IAAA+B,cAACuC,EAAMkD,YAAA,GACCiB,EAAW,CACfrD,MAAOmC,EACPrE,KAAK,YACL6C,YAAU,EACVoC,QAASA,EACTlE,UAAWqE,EACXjC,WAAW,gBACXE,QAASA,Q,oBC1BlBsC,GApBW,WACtB,IAAQpH,EAAcW,IAAdX,UAIR,OACIzB,IAAA+B,cAAA,OAAKkC,UAAWE,KAAO2E,MACnB9I,IAAA+B,cAAC4F,GAAe,CACZC,OAAO,2GACPE,QAAQ,kKACRP,YAAY,0DACZY,QAAS1G,EACT4G,iBAAkBlE,KAAOwE,QACzBL,gBAAiBnE,KAAO4E,OACxBN,YAXiB,CAAE5C,KAAM,eCe1BmD,GAlBe,WAC1B,IAAQ1H,EAAWc,IAAXd,OAGR,OACItB,IAAA+B,cAAA,OAAKkC,UAAWE,KAAO2E,MACnB9I,IAAA+B,cAAC4F,GAAe,CACZC,OAAO,iGACPL,YAAY,yDACZY,QAAS,kBAAM7G,KACf+G,iBAAkBlE,KAAOwE,QACzBL,gBAAiBnE,KAAO4E,OACxBN,YAViB,CAAE5C,KAAM,eCK1BoD,GARO,WAAH,OACfjJ,IAAA+B,cAACmH,IAAM,KACHlJ,IAAA+B,cAACoH,IAAK,CAAClI,KAAMV,EAAYC,KAAM4I,UAAWP,KAC1C7I,IAAA+B,cAACoH,IAAK,CAAClI,KAAMV,EAAYK,OAAQwI,UAAWJ,KAC5ChJ,IAAA+B,cAACoH,IAAK,CAAClI,KAAMZ,EAAagJ,OAAQ,kBAAMrJ,IAAA+B,cAACuH,IAAQ,CAACC,GAAIhJ,EAAYC,YCL7DgJ,GACT,0EAeSC,GAA0B,CACnCC,EAAG,CACC,CAAEC,MAAO,IAAKC,KAAM,8CAAYzC,IAAK,SACrC,CAAEwC,MAAO,KAAMC,KAAM,8CAAYzC,IAAK,UACtC,CAAEwC,MAAO,KAAMC,KAAM,iHAAwBzC,IAAK,UAClD,CAAEwC,MAAO,KAAMC,KAAM,uEAAiBzC,IAAK,UAC3C,CACIwC,MAAO,QACPC,KAAM,8MACNzC,IAAK,aAET,CACIwC,MAAO,QACPC,KAAM,0KACNzC,IAAK,aAET,CACIwC,MAAO,KACPC,KAAM,yKACNzC,IAAK,UAET,CACIwC,MAAO,MACPC,KAAM,yKACNzC,IAAK,WAET,CACIwC,MAAO,KACPC,KAAM,kRACNzC,IAAK,UAET,CACIwC,MAAO,MACPC,KAAM,mKACNzC,IAAK,WAET,CACIwC,MAAO,MACPC,KAAM,2SACNzC,IAAK,WAET,CACIwC,MAAO,QACPC,KAAM,qLACNzC,IAAK,aAET,CACIwC,MAAO,SACPC,KAAM,qNACNzC,IAAK,cAET,CACIwC,MAAO,OACPC,KAAM,qNACNzC,IAAK,YAET,CACIwC,MAAO,KACPC,KAAM,6JACNzC,IAAK,UAET,CACIwC,MAAO,MACPC,KAAM,6JACNzC,IAAK,YAGb0C,EAAG,CACC,CAAEF,MAAO,IAAKC,KAAM,8CAAYzC,IAAK,SACrC,CAAEwC,MAAO,KAAMC,KAAM,iHAAwBzC,IAAK,UAClD,CAAEwC,MAAO,KAAMC,KAAM,8CAAYzC,IAAK,UACtC,CAAEwC,MAAO,KAAMC,KAAM,uEAAiBzC,IAAK,UAC3C,CAAEwC,MAAO,MAAOC,KAAM,uEAAiBzC,IAAK,WAC5C,CAAEwC,MAAO,MAAOC,KAAM,0IAA6BzC,IAAK,WACxD,CAAEwC,MAAO,QAASC,KAAM,8MAA0CzC,IAAK,aACvE,CAAEwC,MAAO,SAAUC,KAAM,uOAA+CzC,IAAK,cAC7E,CAAEwC,MAAO,QAASC,KAAM,0KAAoCzC,IAAK,aACjE,CAAEwC,MAAO,SAAUC,KAAM,mMAAyCzC,IAAK,cACvE,CAAEwC,MAAO,KAAMC,KAAM,yKAAmCzC,IAAK,UAC7D,CAAEwC,MAAO,MAAOC,KAAM,yKAAmCzC,IAAK,WAC9D,CAAEwC,MAAO,MAAOC,KAAM,kMAAwCzC,IAAK,WACnE,CAAEwC,MAAO,OAAQC,KAAM,kMAAwCzC,IAAK,YACpE,CAAEwC,MAAO,KAAMC,KAAM,kRAAuDzC,IAAK,UACjF,CAAEwC,MAAO,MAAOC,KAAM,mKAAkCzC,IAAK,WAC7D,CACIwC,MAAO,MACPC,KAAM,2SACNzC,IAAK,WAET,CAAEwC,MAAO,OAAQC,KAAM,4LAAuCzC,IAAK,YACnE,CAAEwC,MAAO,QAASC,KAAM,qLAAqCzC,IAAK,aAClE,CAAEwC,MAAO,SAAUC,KAAM,8MAA0CzC,IAAK,cACxE,CAAEwC,MAAO,SAAUC,KAAM,qNAA4CzC,IAAK,cAC1E,CACIwC,MAAO,UACPC,KAAM,8OACNzC,IAAK,eAET,CAAEwC,MAAO,OAAQC,KAAM,qNAA4CzC,IAAK,YACxE,CAAEwC,MAAO,QAASC,KAAM,8OAAiDzC,IAAK,aAC9E,CAAEwC,MAAO,KAAMC,KAAM,6JAAiCzC,IAAK,UAC3D,CAAEwC,MAAO,MAAOC,KAAM,6JAAiCzC,IAAK,WAC5D,CAAEwC,MAAO,MAAOC,KAAM,sLAAsCzC,IAAK,WACjE,CAAEwC,MAAO,OAAQC,KAAM,sLAAsCzC,IAAK,aAEtE2C,EAAG,CACC,CAAEH,MAAO,IAAKC,KAAM,8CAAYzC,IAAK,SACrC,CAAEwC,MAAO,KAAMC,KAAM,8CAAYzC,IAAK,UACtC,CAAEwC,MAAO,KAAMC,KAAM,iHAAwBzC,IAAK,UAClD,CAAEwC,MAAO,KAAMC,KAAM,uEAAiBzC,IAAK,UAC3C,CAAEwC,MAAO,MAAOC,KAAM,uEAAiBzC,IAAK,WAC5C,CAAEwC,MAAO,MAAOC,KAAM,0IAA6BzC,IAAK,WACxD,CAAEwC,MAAO,QAASC,KAAM,8MAA0CzC,IAAK,aACvE,CAAEwC,MAAO,SAAUC,KAAM,uOAA+CzC,IAAK,cAC7E,CAAEwC,MAAO,OAAQC,KAAM,6JAAiCzC,IAAK,YAC7D,CAAEwC,MAAO,QAASC,KAAM,sLAAsCzC,IAAK,aACnE,CAAEwC,MAAO,QAASC,KAAM,0KAAoCzC,IAAK,aACjE,CAAEwC,MAAO,SAAUC,KAAM,mMAAyCzC,IAAK,cACvE,CAAEwC,MAAO,KAAMC,KAAM,yKAAmCzC,IAAK,UAC7D,CAAEwC,MAAO,MAAOC,KAAM,yKAAmCzC,IAAK,WAC9D,CAAEwC,MAAO,MAAOC,KAAM,kMAAwCzC,IAAK,WACnE,CAAEwC,MAAO,OAAQC,KAAM,kMAAwCzC,IAAK,YACpE,CAAEwC,MAAO,KAAMC,KAAM,kRAAuDzC,IAAK,UACjF,CAAEwC,MAAO,MAAOC,KAAM,mKAAkCzC,IAAK,WAC7D,CACIwC,MAAO,MACPC,KAAM,2SACNzC,IAAK,WAET,CAAEwC,MAAO,OAAQC,KAAM,4LAAuCzC,IAAK,YACnE,CAAEwC,MAAO,QAASC,KAAM,qLAAqCzC,IAAK,aAClE,CAAEwC,MAAO,SAAUC,KAAM,8MAA0CzC,IAAK,cACxE,CAAEwC,MAAO,SAAUC,KAAM,qNAA4CzC,IAAK,cAC1E,CACIwC,MAAO,UACPC,KAAM,8OACNzC,IAAK,eAET,CAAEwC,MAAO,OAAQC,KAAM,qNAA4CzC,IAAK,YACxE,CAAEwC,MAAO,QAASC,KAAM,8OAAiDzC,IAAK,aAC9E,CAAEwC,MAAO,KAAMC,KAAM,6JAAiCzC,IAAK,UAC3D,CAAEwC,MAAO,MAAOC,KAAM,6JAAiCzC,IAAK,WAC5D,CAAEwC,MAAO,MAAOC,KAAM,sLAAsCzC,IAAK,WACjE,CAAEwC,MAAO,OAAQC,KAAM,sLAAsCzC,IAAK,aAEtE4C,EAAG,CACC,CAAEJ,MAAO,IAAKC,KAAM,8CAAYzC,IAAK,SACrC,CAAEwC,MAAO,KAAMC,KAAM,8CAAYzC,IAAK,UACtC,CAAEwC,MAAO,KAAMC,KAAM,iHAAwBzC,IAAK,UAClD,CAAEwC,MAAO,QAASC,KAAM,8MAA0CzC,IAAK,aACvE,CAAEwC,MAAO,OAAQC,KAAM,6JAAiCzC,IAAK,YAC7D,CAAEwC,MAAO,QAASC,KAAM,0KAAoCzC,IAAK,aACjE,CAAEwC,MAAO,KAAMC,KAAM,yKAAmCzC,IAAK,UAC7D,CAAEwC,MAAO,MAAOC,KAAM,yKAAmCzC,IAAK,WAC9D,CAAEwC,MAAO,KAAMC,KAAM,kRAAuDzC,IAAK,UACjF,CAAEwC,MAAO,MAAOC,KAAM,mKAAkCzC,IAAK,WAC7D,CAAEwC,MAAO,QAASC,KAAM,qLAAqCzC,IAAK,aAClE,CAAEwC,MAAO,SAAUC,KAAM,qNAA4CzC,IAAK,eAE9E6C,EAAG,CAAC,CAAEL,MAAO,IAAKC,KAAM,8CAAYzC,IAAK,UACzC8C,EAAG,CACC,CAAEN,MAAO,KAAMC,KAAM,0DAAczC,IAAK,UACxC,CAAEwC,MAAO,KAAMC,KAAM,mFAAmBzC,IAAK,WAEjD+C,EAAG,IAGMC,GAAiCC,OAAOC,KAAKZ,IAAYa,QAClE,SAACC,EAAQC,GAIL,OAHAf,GAAWe,EAAKC,OAAO,IAAIC,SAAQ,SAACC,GAChCJ,EAAOI,EAAKhB,OAASgB,KAElBJ,IAEX,IAGSK,GAAaR,OAAOC,KAAKF,IC9L/B,SAASU,GAAoBC,GAChC,OAAOC,MAAMC,KACT,IAAIC,IAAIH,EAAKI,MAAM,MAAMC,QAAO,SAACC,GAAI,OAAKA,EAAK5L,MAAMgK,SACvD2B,QAAO,SAACxB,GAAK,OAAKiB,GAAWS,SAAS1B,MAGrC,SAAS2B,GAAY3B,GACxB,OAAOA,EAAM4B,WAAW,IAAK,KAAKA,WAAW,IAAK,KAG/C,SAASC,GAAY7B,GACxB,OAAOA,EAAM4B,WAAW,IAAK,KAAKA,WAAW,IAAK,KAG/C,SAASE,GAAYX,GACxB,GAAIA,EAAKY,OAAQ,CACb,IAAMC,EAAU,IAAIC,OAAOpC,IAC3B,OAAOsB,EAAKtL,MAAMmM,GAAW,CAAC,cAAgB,GAElD,MAAO,G,yBCqCIE,GA/CO,WAClB,IAAM/K,EAAUO,cACR1B,EAAUQ,IAAVR,MACiCmM,EAAnBC,cAAdvB,YAAI,IAAAsB,EAAG,GAAEA,EACTpK,EAAeU,IAAfV,WACRsK,EAAwBC,mBAAmB,IAAGC,EAAAzI,YAAAuI,EAAA,GAAvCG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,IAAYlC,GAAOK,EAAKC,OAAO,IAerC,SAAS6B,EAAmB1F,GACxB,OAAO1C,IAAG0C,EAAUvC,YAAA,GAAKF,KAAOoI,KAAO5M,IAAUF,EAAO+M,OAO5D,OArBIhC,EAAKkB,SAAWW,GAChB3K,IAGJgH,qBAAU,WACN5J,IACAsN,EACIC,EACMjC,OAAOC,KAAKF,IAAQgB,QAAO,SAACjJ,GAAK,OAAKA,EAAMuI,OAAO,KAAOD,EAAKC,OAAO,MACtEL,OAAOC,KAAKF,OAEvB,CAACK,EAAM6B,IAWNrM,IAAA+B,cAAA/B,IAAAsH,SAAA,KACK+E,GAAWrM,IAAA+B,cAAA,KAAGkC,UAAWqI,EAAmBnI,KAAOyD,SAAU4C,EAAKC,OAAO,IAC1EzK,IAAA+B,cAAA,OAAKkC,UAAWE,KAAOwE,SAClBwD,EAAKM,KAAI,SAAC7C,EAAM8C,GAAK,OAClB1M,IAAA+B,cAAA,OACIgD,IAAG,SAAAtE,OAAWiM,GACdvE,QAAS,kBAXPjG,EAW0B0H,OAV5C9I,EAAQC,KAAK,GAADN,OAAIJ,EAAY,KAAAI,OAAI6K,GAAYpJ,KADhD,IAAsBA,GAYF+B,UAAWqI,EAAmBnI,KAAOwI,OAEpC/C,S,iECxDzBgD,GAAA,kBAAAtO,GAAA,IAAAA,EAAA,GAAAuO,EAAAzC,OAAA0C,UAAAC,EAAAF,EAAAG,eAAAC,EAAA7C,OAAA6C,gBAAA,SAAAC,EAAAnI,EAAAoI,GAAAD,EAAAnI,GAAAoI,EAAAjL,OAAAkL,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAV,EAAAnI,EAAA7C,GAAA,OAAAkI,OAAA6C,eAAAC,EAAAnI,EAAA,CAAA7C,QAAA2L,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAAnI,GAAA,IAAA6I,EAAA,aAAAI,GAAAJ,EAAA,SAAAV,EAAAnI,EAAA7C,GAAA,OAAAgL,EAAAnI,GAAA7C,GAAA,SAAA+L,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAApE,OAAAqE,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAApB,EAAAuB,EAAA,WAAAtM,MAAA0M,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA5B,EAAA6B,GAAA,WAAA7L,KAAA,SAAA6L,IAAAD,EAAAE,KAAA9B,EAAA6B,IAAA,MAAAf,GAAA,OAAA9K,KAAA,QAAA6L,IAAAf,IAAA1P,EAAA2P,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAjF,OAAAkF,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA1C,GAAAE,EAAAiC,KAAAO,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAArC,UAAAyB,EAAAzB,UAAA1C,OAAAqE,OAAAW,GAAA,SAAAM,EAAA5C,GAAA,0BAAApC,SAAA,SAAAiF,GAAA/B,EAAAd,EAAA6C,GAAA,SAAAZ,GAAA,YAAAa,QAAAD,EAAAZ,SAAA,SAAAc,EAAArB,EAAAsB,GAAA,IAAAC,EAAA9C,EAAA,gBAAA/K,MAAA,SAAAyN,EAAAZ,GAAA,SAAAiB,IAAA,WAAAF,GAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAZ,EAAAkB,EAAAC,GAAA,IAAAE,EAAAvB,EAAAL,EAAAmB,GAAAnB,EAAAO,GAAA,aAAAqB,EAAAlN,KAAA,KAAAmN,EAAAD,EAAArB,IAAA7M,EAAAmO,EAAAnO,MAAA,OAAAA,GAAA,iBAAAA,GAAA6K,EAAAiC,KAAA9M,EAAA,WAAA4N,EAAAG,QAAA/N,EAAAoO,SAAAC,MAAA,SAAArO,GAAAiO,EAAA,OAAAjO,EAAA+N,EAAAC,MAAA,SAAAlC,GAAAmC,EAAA,QAAAnC,EAAAiC,EAAAC,MAAAJ,EAAAG,QAAA/N,GAAAqO,MAAA,SAAAC,GAAAH,EAAAnO,MAAAsO,EAAAP,EAAAI,MAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,QAAAE,EAAArB,KAAAoB,CAAAR,EAAAZ,EAAAkB,EAAAC,MAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAApB,EAAAV,EAAAE,EAAAM,GAAA,IAAAxO,EAAA,iCAAAyP,EAAAZ,GAAA,iBAAA7O,EAAA,UAAAoC,MAAA,iDAAApC,EAAA,cAAAyP,EAAA,MAAAZ,EAAA,OAAA2B,IAAA,IAAAhC,EAAAiB,SAAAjB,EAAAK,QAAA,KAAA4B,EAAAjC,EAAAiC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAjC,GAAA,GAAAkC,EAAA,IAAAA,IAAA3B,EAAA,gBAAA2B,GAAA,YAAAlC,EAAAiB,OAAAjB,EAAAoC,KAAApC,EAAAqC,MAAArC,EAAAK,SAAA,aAAAL,EAAAiB,OAAA,uBAAAzP,EAAA,MAAAA,EAAA,YAAAwO,EAAAK,IAAAL,EAAAsC,kBAAAtC,EAAAK,SAAA,WAAAL,EAAAiB,QAAAjB,EAAAuC,OAAA,SAAAvC,EAAAK,KAAA7O,EAAA,gBAAAkQ,EAAAvB,EAAAX,EAAAE,EAAAM,GAAA,cAAA0B,EAAAlN,KAAA,IAAAhD,EAAAwO,EAAAwC,KAAA,6BAAAd,EAAArB,MAAAE,EAAA,gBAAA/M,MAAAkO,EAAArB,IAAAmC,KAAAxC,EAAAwC,MAAA,UAAAd,EAAAlN,OAAAhD,EAAA,YAAAwO,EAAAiB,OAAA,QAAAjB,EAAAK,IAAAqB,EAAArB,OAAA,SAAA8B,EAAAF,EAAAjC,GAAA,IAAAyC,EAAAzC,EAAAiB,SAAAgB,EAAApD,SAAA4D,GAAA,QAAAhP,IAAAwN,EAAA,OAAAjB,EAAAiC,SAAA,eAAAQ,GAAAR,EAAApD,SAAA6D,SAAA1C,EAAAiB,OAAA,SAAAjB,EAAAK,SAAA5M,EAAA0O,EAAAF,EAAAjC,GAAA,UAAAA,EAAAiB,SAAA,WAAAwB,IAAAzC,EAAAiB,OAAA,QAAAjB,EAAAK,IAAA,IAAAsC,UAAA,oCAAAF,EAAA,aAAAlC,EAAA,IAAAmB,EAAAvB,EAAAc,EAAAgB,EAAApD,SAAAmB,EAAAK,KAAA,aAAAqB,EAAAlN,KAAA,OAAAwL,EAAAiB,OAAA,QAAAjB,EAAAK,IAAAqB,EAAArB,IAAAL,EAAAiC,SAAA,KAAA1B,EAAA,IAAAqC,EAAAlB,EAAArB,IAAA,OAAAuC,IAAAJ,MAAAxC,EAAAiC,EAAAY,YAAAD,EAAApP,MAAAwM,EAAA8C,KAAAb,EAAAc,QAAA,WAAA/C,EAAAiB,SAAAjB,EAAAiB,OAAA,OAAAjB,EAAAK,SAAA5M,GAAAuM,EAAAiC,SAAA,KAAA1B,GAAAqC,GAAA5C,EAAAiB,OAAA,QAAAjB,EAAAK,IAAA,IAAAsC,UAAA,oCAAA3C,EAAAiC,SAAA,KAAA1B,GAAA,SAAAyC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAlR,KAAA6Q,GAAA,SAAAM,EAAAN,GAAA,IAAAxB,EAAAwB,EAAAO,YAAA,GAAA/B,EAAAlN,KAAA,gBAAAkN,EAAArB,IAAA6C,EAAAO,WAAA/B,EAAA,SAAAzB,EAAAN,GAAA,KAAA4D,WAAA,EAAAJ,OAAA,SAAAxD,EAAA3D,QAAAgH,EAAA,WAAAU,OAAA,YAAA5C,EAAA6C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAA/E,GAAA,GAAAgF,EAAA,OAAAA,EAAAtD,KAAAqD,GAAA,sBAAAA,EAAAb,KAAA,OAAAa,EAAA,IAAAE,MAAAF,EAAA3G,QAAA,KAAA8G,GAAA,EAAAhB,EAAA,SAAAA,IAAA,OAAAgB,EAAAH,EAAA3G,QAAA,GAAAqB,EAAAiC,KAAAqD,EAAAG,GAAA,OAAAhB,EAAAtP,MAAAmQ,EAAAG,GAAAhB,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAtP,WAAAC,EAAAqP,EAAAN,MAAA,EAAAM,GAAA,OAAAA,UAAA,OAAAA,KAAAd,GAAA,SAAAA,IAAA,OAAAxO,WAAAC,EAAA+O,MAAA,UAAAhC,EAAApC,UAAAqC,EAAAlC,EAAAwC,EAAA,eAAAvN,MAAAiN,EAAArB,cAAA,IAAAb,EAAAkC,EAAA,eAAAjN,MAAAgN,EAAApB,cAAA,IAAAoB,EAAAuD,YAAA7E,EAAAuB,EAAAzB,EAAA,qBAAApP,EAAAoU,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA1D,GAAA,uBAAA0D,EAAAH,aAAAG,EAAAhJ,QAAAtL,EAAAwU,KAAA,SAAAH,GAAA,OAAAvI,OAAA2I,eAAA3I,OAAA2I,eAAAJ,EAAAxD,IAAAwD,EAAAK,UAAA7D,EAAAvB,EAAA+E,EAAAjF,EAAA,sBAAAiF,EAAA7F,UAAA1C,OAAAqE,OAAAgB,GAAAkD,GAAArU,EAAA2U,MAAA,SAAAlE,GAAA,OAAAuB,QAAAvB,IAAAW,EAAAG,EAAA/C,WAAAc,EAAAiC,EAAA/C,UAAAU,GAAA,0BAAAlP,EAAAuR,gBAAAvR,EAAA4U,MAAA,SAAAhF,EAAAC,EAAAC,EAAAC,EAAAyB,QAAA,IAAAA,MAAAqD,SAAA,IAAAC,EAAA,IAAAvD,EAAA5B,EAAAC,EAAAC,EAAAC,EAAAC,GAAAyB,GAAA,OAAAxR,EAAAoU,oBAAAvE,GAAAiF,IAAA5B,OAAAjB,MAAA,SAAAF,GAAA,OAAAA,EAAAa,KAAAb,EAAAnO,MAAAkR,EAAA5B,WAAA9B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAAnR,EAAA+L,KAAA,SAAAgJ,GAAA,IAAAC,EAAAlJ,OAAAiJ,GAAAhJ,EAAA,WAAAtF,KAAAuO,EAAAjJ,EAAAtJ,KAAAgE,GAAA,OAAAsF,EAAAkJ,UAAA,SAAA/B,IAAA,KAAAnH,EAAAqB,QAAA,KAAA3G,EAAAsF,EAAAmJ,MAAA,GAAAzO,KAAAuO,EAAA,OAAA9B,EAAAtP,MAAA6C,EAAAyM,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAN,MAAA,EAAAM,IAAAlT,EAAAkR,SAAAb,EAAA7B,UAAA,CAAA+F,YAAAlE,EAAAyD,MAAA,SAAAqB,GAAA,QAAAC,KAAA,OAAAlC,KAAA,OAAAV,KAAA,KAAAC,WAAA5O,EAAA,KAAA+O,MAAA,OAAAP,SAAA,UAAAhB,OAAA,YAAAZ,SAAA5M,EAAA,KAAA8P,WAAAvH,QAAAwH,IAAAuB,EAAA,QAAA7J,KAAA,WAAAA,EAAAa,OAAA,IAAAsC,EAAAiC,KAAA,KAAApF,KAAA2I,OAAA3I,EAAA+J,MAAA,WAAA/J,QAAAzH,IAAAyR,KAAA,gBAAA1C,MAAA,MAAA2C,EAAA,KAAA5B,WAAA,GAAAE,WAAA,aAAA0B,EAAA3Q,KAAA,MAAA2Q,EAAA9E,IAAA,YAAA+E,MAAA9C,kBAAA,SAAA+C,GAAA,QAAA7C,KAAA,MAAA6C,EAAA,IAAArF,EAAA,cAAAsF,EAAAC,EAAAC,GAAA,OAAA9D,EAAAlN,KAAA,QAAAkN,EAAArB,IAAAgF,EAAArF,EAAA8C,KAAAyC,EAAAC,IAAAxF,EAAAiB,OAAA,OAAAjB,EAAAK,SAAA5M,KAAA+R,EAAA,QAAA1B,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAApC,EAAAwB,EAAAO,WAAA,YAAAP,EAAAC,OAAA,OAAAmC,EAAA,UAAApC,EAAAC,QAAA,KAAA6B,KAAA,KAAAS,EAAApH,EAAAiC,KAAA4C,EAAA,YAAAwC,EAAArH,EAAAiC,KAAA4C,EAAA,iBAAAuC,GAAAC,EAAA,SAAAV,KAAA9B,EAAAE,SAAA,OAAAkC,EAAApC,EAAAE,UAAA,WAAA4B,KAAA9B,EAAAG,WAAA,OAAAiC,EAAApC,EAAAG,iBAAA,GAAAoC,GAAA,QAAAT,KAAA9B,EAAAE,SAAA,OAAAkC,EAAApC,EAAAE,UAAA,YAAAsC,EAAA,UAAA9R,MAAA,kDAAAoR,KAAA9B,EAAAG,WAAA,OAAAiC,EAAApC,EAAAG,gBAAAd,OAAA,SAAA/N,EAAA6L,GAAA,QAAAyD,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAC,QAAA,KAAA6B,MAAA3G,EAAAiC,KAAA4C,EAAA,oBAAA8B,KAAA9B,EAAAG,WAAA,KAAAsC,EAAAzC,EAAA,OAAAyC,IAAA,UAAAnR,GAAA,aAAAA,IAAAmR,EAAAxC,QAAA9C,MAAAsF,EAAAtC,aAAAsC,EAAA,UAAAjE,EAAAiE,IAAAlC,WAAA,UAAA/B,EAAAlN,OAAAkN,EAAArB,MAAAsF,GAAA,KAAA1E,OAAA,YAAA6B,KAAA6C,EAAAtC,WAAA9C,GAAA,KAAAqF,SAAAlE,IAAAkE,SAAA,SAAAlE,EAAA4B,GAAA,aAAA5B,EAAAlN,KAAA,MAAAkN,EAAArB,IAAA,gBAAAqB,EAAAlN,MAAA,aAAAkN,EAAAlN,KAAA,KAAAsO,KAAApB,EAAArB,IAAA,WAAAqB,EAAAlN,MAAA,KAAA4Q,KAAA,KAAA/E,IAAAqB,EAAArB,IAAA,KAAAY,OAAA,cAAA6B,KAAA,kBAAApB,EAAAlN,MAAA8O,IAAA,KAAAR,KAAAQ,GAAA/C,GAAAsF,OAAA,SAAAxC,GAAA,QAAAS,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAG,eAAA,YAAAuC,SAAA1C,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAA3C,IAAAuF,MAAA,SAAA3C,GAAA,QAAAW,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAC,WAAA,KAAAzB,EAAAwB,EAAAO,WAAA,aAAA/B,EAAAlN,KAAA,KAAAuR,EAAArE,EAAArB,IAAAmD,EAAAN,GAAA,OAAA6C,GAAA,UAAAnS,MAAA,0BAAAoS,cAAA,SAAArC,EAAAd,EAAAE,GAAA,YAAAd,SAAA,CAAApD,SAAAiC,EAAA6C,GAAAd,aAAAE,WAAA,cAAA9B,SAAA,KAAAZ,SAAA5M,GAAA8M,IAAA3Q,EAKA,IA6BeqW,GA3Bc,WACzB,IAAA3I,EAAkDC,oBAAiB,kBAC9DxN,SAASmW,kBAAuCC,KAAnBC,QACjC5I,EAAAzI,YAAAuI,EAAA,GAFM+I,EAAiB7I,EAAA,GAAE8I,EAAoB9I,EAAA,GAIf,SAAA+I,IAU9B,OAV8BA,EAAAC,aAAAtI,KAAAkG,MAA/B,SAAAqC,IAAA,OAAAvI,KAAAqB,MAAA,SAAAmH,GAAA,cAAAA,EAAA1B,KAAA0B,EAAA5D,MAAA,UACS/S,SAASmW,kBAAkB,CAADQ,EAAA5D,KAAA,eAAA4D,EAAA5D,KAAA,EACrB/S,SAAS4W,gBAAgBC,oBAAoB,KAAD,EAClDN,EAAqBH,MAAgBO,EAAA5D,KAAA,oBAEjC/S,SAASoW,eAAe,CAADO,EAAA5D,KAAA,gBAAA4D,EAAA5D,KAAA,EACjB/S,SAASoW,iBAAiB,KAAD,EAC/BG,EAAqBF,MAAkB,yBAAAM,EAAAxB,UAAAuB,QAGlDvQ,MAAA,KAAAC,WAED,OACI7E,IAAA+B,cAACuC,EAAM,CACHgB,KAAMyP,EACN5M,QAjBN,WAE6B,OAAA8M,EAAArQ,MAAC,KAADC,YAgBvBgB,KAAK,QACLQ,WAxB4B,wB,oBCYhCmG,GAAS/M,EAAT+M,KAoDO+I,GAlDe,SAAHpU,GAAyC,IAADqU,EAAArU,EAAlCwI,MAASA,EAAK6L,EAAL7L,MAAOC,EAAI4L,EAAJ5L,KAAMzC,EAAGqO,EAAHrO,IAC7CrG,EAAUO,cACR1B,EAAUQ,IAAVR,MACRqM,EAA4CC,mBAAmB,IAAGC,EAAAzI,YAAAuI,EAAA,GAA3DyJ,EAAcvJ,EAAA,GAAEwJ,EAAiBxJ,EAAA,GAClC1B,EAAOb,EAAMc,OAAO,GAO1B,SAAS6B,EAAmBrI,GACxB,OAAOC,IAAGD,EAASI,YAAA,GAAKF,KAAOoI,KAAO5M,IAAU6M,KANpD9D,qBAAU,WACN5J,IACA4W,EAAkBtL,OAAOC,KAAKF,IAAQgB,QAAO,SAACjJ,GAAK,OAAKA,EAAMuI,OAAO,KAAOD,QAC7E,IAMH,IAAMmL,EAAepU,uBACjB,SAACW,GAAa,OAAKpB,EAAQC,KAAK,GAADN,OAAIJ,EAAY,KAAAI,OAAI6K,GAAYpJ,OAC/D,IAGE0T,EAAcrU,uBAAY,kBAAMoU,EAAanL,KAAO,CAACA,IAE3D,OACIxK,IAAA+B,cAAA/B,IAAAsH,SAAA,KACItH,IAAA+B,cAAA,OAAKkC,UAAWE,KAAOwE,SACnB3I,IAAA+B,cAAA,KAAGkC,UAAWqI,EAAmBnI,KAAOyD,SAAU+B,GAClD3J,IAAA+B,cAAA,KAAGkC,UAAWqI,EAAmBnI,KAAO0R,cAAejM,GACvD5J,IAAA+B,cAAA,OAAKkC,UAAWE,KAAO2R,WAAY3O,IAAG,WAAA1G,OAAa+J,EAAI,KAAA/J,OAAI0G,GAAOC,IAAKwC,IACvE5J,IAAA+B,cAAA,OAAKkC,UAAWE,KAAOqG,KAAMrC,QAASyN,GACjCpL,GAELxK,IAAA+B,cAAA,OAAKkC,UAAWE,KAAO4R,qBAClBN,EAAehJ,KAAI,SAACvK,EAAOwK,GAAK,OAC7B1M,IAAA+B,cAAA,OACIgD,IAAG,mBAAAtE,OAAqBiM,GACxBzI,UAAWE,KAAOwF,MAClBxB,QAAS,kBAAMwN,EAAazT,KAE3BA,QAKjBlC,IAAA+B,cAAA,OAAKkC,UAAWE,KAAO6R,cACnBhW,IAAA+B,cAAC4S,GAAgB,S,cC/DjC/H,GAAA,kBAAAtO,GAAA,IAAAA,EAAA,GAAAuO,EAAAzC,OAAA0C,UAAAC,EAAAF,EAAAG,eAAAC,EAAA7C,OAAA6C,gBAAA,SAAAC,EAAAnI,EAAAoI,GAAAD,EAAAnI,GAAAoI,EAAAjL,OAAAkL,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAV,EAAAnI,EAAA7C,GAAA,OAAAkI,OAAA6C,eAAAC,EAAAnI,EAAA,CAAA7C,QAAA2L,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAAnI,GAAA,IAAA6I,EAAA,aAAAI,GAAAJ,EAAA,SAAAV,EAAAnI,EAAA7C,GAAA,OAAAgL,EAAAnI,GAAA7C,GAAA,SAAA+L,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAApE,OAAAqE,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAApB,EAAAuB,EAAA,WAAAtM,MAAA0M,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA5B,EAAA6B,GAAA,WAAA7L,KAAA,SAAA6L,IAAAD,EAAAE,KAAA9B,EAAA6B,IAAA,MAAAf,GAAA,OAAA9K,KAAA,QAAA6L,IAAAf,IAAA1P,EAAA2P,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAjF,OAAAkF,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA1C,GAAAE,EAAAiC,KAAAO,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAArC,UAAAyB,EAAAzB,UAAA1C,OAAAqE,OAAAW,GAAA,SAAAM,EAAA5C,GAAA,0BAAApC,SAAA,SAAAiF,GAAA/B,EAAAd,EAAA6C,GAAA,SAAAZ,GAAA,YAAAa,QAAAD,EAAAZ,SAAA,SAAAc,EAAArB,EAAAsB,GAAA,IAAAC,EAAA9C,EAAA,gBAAA/K,MAAA,SAAAyN,EAAAZ,GAAA,SAAAiB,IAAA,WAAAF,GAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAZ,EAAAkB,EAAAC,GAAA,IAAAE,EAAAvB,EAAAL,EAAAmB,GAAAnB,EAAAO,GAAA,aAAAqB,EAAAlN,KAAA,KAAAmN,EAAAD,EAAArB,IAAA7M,EAAAmO,EAAAnO,MAAA,OAAAA,GAAA,iBAAAA,GAAA6K,EAAAiC,KAAA9M,EAAA,WAAA4N,EAAAG,QAAA/N,EAAAoO,SAAAC,MAAA,SAAArO,GAAAiO,EAAA,OAAAjO,EAAA+N,EAAAC,MAAA,SAAAlC,GAAAmC,EAAA,QAAAnC,EAAAiC,EAAAC,MAAAJ,EAAAG,QAAA/N,GAAAqO,MAAA,SAAAC,GAAAH,EAAAnO,MAAAsO,EAAAP,EAAAI,MAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,QAAAE,EAAArB,KAAAoB,CAAAR,EAAAZ,EAAAkB,EAAAC,MAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAApB,EAAAV,EAAAE,EAAAM,GAAA,IAAAxO,EAAA,iCAAAyP,EAAAZ,GAAA,iBAAA7O,EAAA,UAAAoC,MAAA,iDAAApC,EAAA,cAAAyP,EAAA,MAAAZ,EAAA,OAAA2B,IAAA,IAAAhC,EAAAiB,SAAAjB,EAAAK,QAAA,KAAA4B,EAAAjC,EAAAiC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAjC,GAAA,GAAAkC,EAAA,IAAAA,IAAA3B,EAAA,gBAAA2B,GAAA,YAAAlC,EAAAiB,OAAAjB,EAAAoC,KAAApC,EAAAqC,MAAArC,EAAAK,SAAA,aAAAL,EAAAiB,OAAA,uBAAAzP,EAAA,MAAAA,EAAA,YAAAwO,EAAAK,IAAAL,EAAAsC,kBAAAtC,EAAAK,SAAA,WAAAL,EAAAiB,QAAAjB,EAAAuC,OAAA,SAAAvC,EAAAK,KAAA7O,EAAA,gBAAAkQ,EAAAvB,EAAAX,EAAAE,EAAAM,GAAA,cAAA0B,EAAAlN,KAAA,IAAAhD,EAAAwO,EAAAwC,KAAA,6BAAAd,EAAArB,MAAAE,EAAA,gBAAA/M,MAAAkO,EAAArB,IAAAmC,KAAAxC,EAAAwC,MAAA,UAAAd,EAAAlN,OAAAhD,EAAA,YAAAwO,EAAAiB,OAAA,QAAAjB,EAAAK,IAAAqB,EAAArB,OAAA,SAAA8B,EAAAF,EAAAjC,GAAA,IAAAyC,EAAAzC,EAAAiB,SAAAgB,EAAApD,SAAA4D,GAAA,QAAAhP,IAAAwN,EAAA,OAAAjB,EAAAiC,SAAA,eAAAQ,GAAAR,EAAApD,SAAA6D,SAAA1C,EAAAiB,OAAA,SAAAjB,EAAAK,SAAA5M,EAAA0O,EAAAF,EAAAjC,GAAA,UAAAA,EAAAiB,SAAA,WAAAwB,IAAAzC,EAAAiB,OAAA,QAAAjB,EAAAK,IAAA,IAAAsC,UAAA,oCAAAF,EAAA,aAAAlC,EAAA,IAAAmB,EAAAvB,EAAAc,EAAAgB,EAAApD,SAAAmB,EAAAK,KAAA,aAAAqB,EAAAlN,KAAA,OAAAwL,EAAAiB,OAAA,QAAAjB,EAAAK,IAAAqB,EAAArB,IAAAL,EAAAiC,SAAA,KAAA1B,EAAA,IAAAqC,EAAAlB,EAAArB,IAAA,OAAAuC,IAAAJ,MAAAxC,EAAAiC,EAAAY,YAAAD,EAAApP,MAAAwM,EAAA8C,KAAAb,EAAAc,QAAA,WAAA/C,EAAAiB,SAAAjB,EAAAiB,OAAA,OAAAjB,EAAAK,SAAA5M,GAAAuM,EAAAiC,SAAA,KAAA1B,GAAAqC,GAAA5C,EAAAiB,OAAA,QAAAjB,EAAAK,IAAA,IAAAsC,UAAA,oCAAA3C,EAAAiC,SAAA,KAAA1B,GAAA,SAAAyC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAlR,KAAA6Q,GAAA,SAAAM,EAAAN,GAAA,IAAAxB,EAAAwB,EAAAO,YAAA,GAAA/B,EAAAlN,KAAA,gBAAAkN,EAAArB,IAAA6C,EAAAO,WAAA/B,EAAA,SAAAzB,EAAAN,GAAA,KAAA4D,WAAA,EAAAJ,OAAA,SAAAxD,EAAA3D,QAAAgH,EAAA,WAAAU,OAAA,YAAA5C,EAAA6C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAA/E,GAAA,GAAAgF,EAAA,OAAAA,EAAAtD,KAAAqD,GAAA,sBAAAA,EAAAb,KAAA,OAAAa,EAAA,IAAAE,MAAAF,EAAA3G,QAAA,KAAA8G,GAAA,EAAAhB,EAAA,SAAAA,IAAA,OAAAgB,EAAAH,EAAA3G,QAAA,GAAAqB,EAAAiC,KAAAqD,EAAAG,GAAA,OAAAhB,EAAAtP,MAAAmQ,EAAAG,GAAAhB,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAtP,WAAAC,EAAAqP,EAAAN,MAAA,EAAAM,GAAA,OAAAA,UAAA,OAAAA,KAAAd,GAAA,SAAAA,IAAA,OAAAxO,WAAAC,EAAA+O,MAAA,UAAAhC,EAAApC,UAAAqC,EAAAlC,EAAAwC,EAAA,eAAAvN,MAAAiN,EAAArB,cAAA,IAAAb,EAAAkC,EAAA,eAAAjN,MAAAgN,EAAApB,cAAA,IAAAoB,EAAAuD,YAAA7E,EAAAuB,EAAAzB,EAAA,qBAAApP,EAAAoU,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA1D,GAAA,uBAAA0D,EAAAH,aAAAG,EAAAhJ,QAAAtL,EAAAwU,KAAA,SAAAH,GAAA,OAAAvI,OAAA2I,eAAA3I,OAAA2I,eAAAJ,EAAAxD,IAAAwD,EAAAK,UAAA7D,EAAAvB,EAAA+E,EAAAjF,EAAA,sBAAAiF,EAAA7F,UAAA1C,OAAAqE,OAAAgB,GAAAkD,GAAArU,EAAA2U,MAAA,SAAAlE,GAAA,OAAAuB,QAAAvB,IAAAW,EAAAG,EAAA/C,WAAAc,EAAAiC,EAAA/C,UAAAU,GAAA,0BAAAlP,EAAAuR,gBAAAvR,EAAA4U,MAAA,SAAAhF,EAAAC,EAAAC,EAAAC,EAAAyB,QAAA,IAAAA,MAAAqD,SAAA,IAAAC,EAAA,IAAAvD,EAAA5B,EAAAC,EAAAC,EAAAC,EAAAC,GAAAyB,GAAA,OAAAxR,EAAAoU,oBAAAvE,GAAAiF,IAAA5B,OAAAjB,MAAA,SAAAF,GAAA,OAAAA,EAAAa,KAAAb,EAAAnO,MAAAkR,EAAA5B,WAAA9B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAAnR,EAAA+L,KAAA,SAAAgJ,GAAA,IAAAC,EAAAlJ,OAAAiJ,GAAAhJ,EAAA,WAAAtF,KAAAuO,EAAAjJ,EAAAtJ,KAAAgE,GAAA,OAAAsF,EAAAkJ,UAAA,SAAA/B,IAAA,KAAAnH,EAAAqB,QAAA,KAAA3G,EAAAsF,EAAAmJ,MAAA,GAAAzO,KAAAuO,EAAA,OAAA9B,EAAAtP,MAAA6C,EAAAyM,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAN,MAAA,EAAAM,IAAAlT,EAAAkR,SAAAb,EAAA7B,UAAA,CAAA+F,YAAAlE,EAAAyD,MAAA,SAAAqB,GAAA,QAAAC,KAAA,OAAAlC,KAAA,OAAAV,KAAA,KAAAC,WAAA5O,EAAA,KAAA+O,MAAA,OAAAP,SAAA,UAAAhB,OAAA,YAAAZ,SAAA5M,EAAA,KAAA8P,WAAAvH,QAAAwH,IAAAuB,EAAA,QAAA7J,KAAA,WAAAA,EAAAa,OAAA,IAAAsC,EAAAiC,KAAA,KAAApF,KAAA2I,OAAA3I,EAAA+J,MAAA,WAAA/J,QAAAzH,IAAAyR,KAAA,gBAAA1C,MAAA,MAAA2C,EAAA,KAAA5B,WAAA,GAAAE,WAAA,aAAA0B,EAAA3Q,KAAA,MAAA2Q,EAAA9E,IAAA,YAAA+E,MAAA9C,kBAAA,SAAA+C,GAAA,QAAA7C,KAAA,MAAA6C,EAAA,IAAArF,EAAA,cAAAsF,EAAAC,EAAAC,GAAA,OAAA9D,EAAAlN,KAAA,QAAAkN,EAAArB,IAAAgF,EAAArF,EAAA8C,KAAAyC,EAAAC,IAAAxF,EAAAiB,OAAA,OAAAjB,EAAAK,SAAA5M,KAAA+R,EAAA,QAAA1B,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAApC,EAAAwB,EAAAO,WAAA,YAAAP,EAAAC,OAAA,OAAAmC,EAAA,UAAApC,EAAAC,QAAA,KAAA6B,KAAA,KAAAS,EAAApH,EAAAiC,KAAA4C,EAAA,YAAAwC,EAAArH,EAAAiC,KAAA4C,EAAA,iBAAAuC,GAAAC,EAAA,SAAAV,KAAA9B,EAAAE,SAAA,OAAAkC,EAAApC,EAAAE,UAAA,WAAA4B,KAAA9B,EAAAG,WAAA,OAAAiC,EAAApC,EAAAG,iBAAA,GAAAoC,GAAA,QAAAT,KAAA9B,EAAAE,SAAA,OAAAkC,EAAApC,EAAAE,UAAA,YAAAsC,EAAA,UAAA9R,MAAA,kDAAAoR,KAAA9B,EAAAG,WAAA,OAAAiC,EAAApC,EAAAG,gBAAAd,OAAA,SAAA/N,EAAA6L,GAAA,QAAAyD,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAC,QAAA,KAAA6B,MAAA3G,EAAAiC,KAAA4C,EAAA,oBAAA8B,KAAA9B,EAAAG,WAAA,KAAAsC,EAAAzC,EAAA,OAAAyC,IAAA,UAAAnR,GAAA,aAAAA,IAAAmR,EAAAxC,QAAA9C,MAAAsF,EAAAtC,aAAAsC,EAAA,UAAAjE,EAAAiE,IAAAlC,WAAA,UAAA/B,EAAAlN,OAAAkN,EAAArB,MAAAsF,GAAA,KAAA1E,OAAA,YAAA6B,KAAA6C,EAAAtC,WAAA9C,GAAA,KAAAqF,SAAAlE,IAAAkE,SAAA,SAAAlE,EAAA4B,GAAA,aAAA5B,EAAAlN,KAAA,MAAAkN,EAAArB,IAAA,gBAAAqB,EAAAlN,MAAA,aAAAkN,EAAAlN,KAAA,KAAAsO,KAAApB,EAAArB,IAAA,WAAAqB,EAAAlN,MAAA,KAAA4Q,KAAA,KAAA/E,IAAAqB,EAAArB,IAAA,KAAAY,OAAA,cAAA6B,KAAA,kBAAApB,EAAAlN,MAAA8O,IAAA,KAAAR,KAAAQ,GAAA/C,GAAAsF,OAAA,SAAAxC,GAAA,QAAAS,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAG,eAAA,YAAAuC,SAAA1C,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAA3C,IAAAuF,MAAA,SAAA3C,GAAA,QAAAW,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAC,WAAA,KAAAzB,EAAAwB,EAAAO,WAAA,aAAA/B,EAAAlN,KAAA,KAAAuR,EAAArE,EAAArB,IAAAmD,EAAAN,GAAA,OAAA6C,GAAA,UAAAnS,MAAA,0BAAAoS,cAAA,SAAArC,EAAAd,EAAAE,GAAA,YAAAd,SAAA,CAAApD,SAAAiC,EAAA6C,GAAAd,aAAAE,WAAA,cAAA9B,SAAA,KAAAZ,SAAA5M,GAAA8M,IAAA3Q,EAWA,IAmBe2X,GAnBW,WACtB,IAAMnV,EAAUO,cAC8B6U,EAAnBnK,cAAnBoK,iBAAS,IAAAD,EAAG,GAAEA,EACtBlK,EAA0BC,mBAAwB,MAAKC,EAAAzI,YAAAuI,EAAA,GAAhDrC,EAAKuC,EAAA,GAAEkK,EAAQlK,EAAA,GAatB,OAXAxD,qBAAU,WACNwM,aAAAtI,KAAAkG,MAAC,SAAAqC,IAAA,IAAAxL,EAAA,OAAAiD,KAAAqB,MAAA,SAAAmH,GAAA,cAAAA,EAAA1B,KAAA0B,EAAA5D,MAAA,OACS7H,EAAQ6B,GAAY2K,GACtB/L,OAAOC,KAAKF,IAAQkB,SAAS1B,GAC7ByM,EAASjM,GAAOR,IAEhB9I,EAAQC,GACX,wBAAAsU,EAAAxB,UAAAuB,MANLD,KAQD,CAACiB,IAEGxM,EAAQ3J,IAAA+B,cAACwT,GAAK,CAAC5L,MAAOA,IAAY,MCb9B0M,GARc,WAAH,OACtBrW,IAAA+B,cAACmH,IAAM,KACHlJ,IAAA+B,cAACoH,IAAK,CAACmN,OAAK,EAACrV,KAAI,GAAAR,OAAKJ,EAAY,eAAegJ,OAAQ,kBAAMrJ,IAAA+B,cAACkU,GAAa,SAC7EjW,IAAA+B,cAACoH,IAAK,CAACmN,OAAK,EAACrV,KAAMZ,EAAcgJ,OAAQ,kBAAMrJ,IAAA+B,cAAC8J,GAAS,SACzD7L,IAAA+B,cAACuH,IAAQ,CAACC,GAAIlJ,M,oBCgBPkW,GApBuB,SAAHpV,GAAA,IAC/BqV,EAAUrV,EAAVqV,WACAC,EAAYtV,EAAZsV,aACAC,EAAWvV,EAAXuV,YAAWC,EAAAxV,EACXyV,gBAAQ,IAAAD,EAAG,WAAUA,EAAAE,EAAA1V,EACrB2V,uBAAe,IAAAD,EAAG,cAAaA,EAC/B5S,EAAS9C,EAAT8C,UAAS,OAETjE,IAAA+B,cAAA,OACIgV,GAAG,SACH9S,UAAWC,IAAGC,KAAOyD,OAAQzD,KAAOyS,GAAWzS,KAAO2S,GAAkB7S,IAExEjE,IAAA+B,cAAA,OAAKkC,UAAWE,KAAO6S,OACnBhX,IAAA+B,cAAA,OAAKkC,UAAWE,KAAO8S,MAAOT,GAAcA,KAC5CxW,IAAA+B,cAAA,OAAKkC,UAAWE,KAAO8S,MAAOR,GAAgBA,KAC9CzW,IAAA+B,cAAA,OAAKkC,UAAWE,KAAO8S,MAAOP,GAAeA,Q,qBCO1CQ,GArBmB,SAAH/V,GAKxB,IAADgW,EAAAhW,EAJFiW,cAAM,IAAAD,GAAQA,EACdhP,EAAOhH,EAAPgH,QAAOkP,EAAAlW,EACPkF,kBAAU,IAAAgR,EAAG,WAAUA,EACvBjW,EAAQD,EAARC,SAEQzB,EAAUQ,IAAVR,MAER,OACIK,IAAA+B,cAAA,OACIkC,UAAWC,IAAGC,KAAOmT,QAASnT,KAAOxE,GAAM0E,YAAA,GACtCF,KAAOiT,OAASA,IAErBjP,QAASA,EACTV,eAAcpB,GAEbjF,I,+BCEEmW,GAnB6B,SAAHpW,GAA4C,IAAtCoI,EAAEpI,EAAFoI,GAAInI,EAAQD,EAARC,SAAU+G,EAAOhH,EAAPgH,QAAYqP,EAAI/Q,YAAAtF,EAAAuF,IACnE5F,EAAUO,cACV7B,EAAQiY,YAAclO,GAEtBmO,EAAanW,uBAAY,WACvB4G,GACAA,IAGJrH,EAAQC,KAAKwI,KACd,CAACA,EAAIpB,IAER,OACInI,IAAA+B,cAACmV,GAAO1P,YAAA,GAAKgQ,EAAI,CAAEJ,SAAU5X,EAAO2I,QAASuP,IACxCtW,I,qBCHEuW,GAXI,WAAH,OACZ3X,IAAA+B,cAAA,OAAKkC,UAAWE,KAAOyT,OACnB5X,IAAA+B,cAACwV,GAAY,CAAChO,GAAIlJ,EAAagG,WAAW,kBAAiB,UAG3DrG,IAAA+B,cAACwV,GAAY,CAAChO,GAAIlJ,EAAcgG,WAAW,mBAAkB,Y,0CCF7DmG,GAAgB/M,EAAhB+M,KAAM1M,GAAUL,EAAVK,MAkCC+X,GAhCQ,WACnB,IAAAC,EAGI1X,qBAAWL,GAFFJ,EAAKmY,EAAd5X,MAASP,MACTgE,EAAQmU,EAARnU,SAGJ,SAASoU,IAEDC,EADArY,IAAUG,GACE0M,GAEA1M,IAIpB,IAAMkY,EAAc,SAACrY,I5BtBlB,SAAmBA,GACtBX,OAAOY,aAAaqY,QAHN,iBAGyBtY,G4BsBnCuY,CAAUvY,GACVgE,EAAS,CACLT,K3BxBuB,sB2ByBvBE,QAAS,CAAEzD,YAInB,OACIK,IAAA+B,cAACwU,GAAM,CACHE,aAAc,kBAAMzW,IAAA+B,cAAC4V,GAAM,OAC3BjB,YAAa,kBACT1W,IAAA+B,cAACuC,EAAM,CAACgB,KAAM3F,IAAUG,GAAQqY,KAAOC,KAAKjQ,QAAS4P,EAAalS,KAAK,cCnB1EwS,G,gDCIEC,GAbyB,SAAHnX,GAAqB,IAAfgH,EAAOhH,EAAPgH,QACjCoQ,EAAWxN,MAAMC,KAAK,IAAIC,IAAIb,OAAOC,KAAKgO,IAAW5L,KAAI,SAAC+L,GAAM,OAAKA,EAAO/N,OAAO,QACzF,OACIzK,IAAA+B,cAAA,OAAKkC,UAAWE,KAAOsU,OAClBF,EAAS9L,KAAI,SAACiM,GAAI,OACf1Y,IAAA+B,cAAA,OAAKgD,IAAG,QAAAtE,OAAUiY,GAAQzU,UAAWE,KAAOuU,KAAMvQ,QAAS,kBAAMA,EAAQuQ,KACpEA,QCiENC,GA/DM,WACjB,IAAM7X,EAAUO,cACR1B,EAAUQ,IAAVR,MACmCiZ,EAAnB7M,cAAhByM,cAAM,IAAAI,EAAG,GAAEA,EACXnX,EAAcW,IAAdX,UACFoX,IAAcR,GAAUG,GAC9BxM,EAA8CC,mBAAmB7B,OAAOC,KAAKgO,KAAWnM,EAAAzI,YAAAuI,EAAA,GAAjF8M,EAAe5M,EAAA,GAAE6M,EAAkB7M,EAAA,GAY1C,SAASI,EAAmB1F,GACxB,OAAO1C,IAAG0C,EAAUvC,YAAA,GAAKF,KAAOoI,KAAO5M,IAAUF,EAAO+M,OAG5D,SAASwM,EAAYpP,GACjB9I,EAAQC,KAAK,GAADN,OAAIJ,EAAW,KAAAI,OAAI+X,EAAM,KAAA/X,OAAImJ,IAW7C,OA1BI4O,EAAO9M,SAAWmN,GAClBpX,IAGA+W,EAAO9M,QAAUmN,GAAuD,IAA1CzO,OAAOC,KAAKgO,GAAUG,IAAS9M,QAC7DsN,EAAY5O,OAAOC,KAAKgO,GAAUG,IAAS,IAG/C9P,oBAAU5J,EAAa,IAmBnBkB,IAAA+B,cAAA/B,IAAAsH,SAAA,KACItH,IAAA+B,cAACuW,GAAoB,CAACnQ,QAV9B,SAAqBuQ,GACjBK,EAAmB3O,OAAOC,KAAKgO,IAAWlN,QAAO,SAACqN,GAAM,OAAKA,EAAOS,WAAWP,UAU1EG,GAAa7Y,IAAA+B,cAAA,KAAGkC,UAAWqI,EAAmBnI,KAAOyD,SAAU4Q,GAChExY,IAAA+B,cAAA,OAAKkC,UAAWE,KAAOwE,SAClBkQ,EACKzO,OAAOC,KAAKgO,GAAUG,IAAS/L,KAAI,SAAC7C,EAAM8C,GAAK,OAC3C1M,IAAA+B,cAAA,OACIgD,IAAG,QAAAtE,OAAUiM,GACbvE,QAAS,kBAAM6Q,EAAYpP,IAC3B3F,UAAWqI,EAAmBnI,KAAOwI,OAEpC/C,MAGTkP,EAAgBrM,KAAI,SAACvK,EAAOwK,GAAK,OAC7B1M,IAAA+B,cAAA,OACIgD,IAAG,QAAAtE,OAAUiM,GACbvE,QAAS,kBAtBnC,SAAuBjG,GACnBpB,EAAQC,KAAK,GAADN,OAAIJ,EAAW,KAAAI,OAAIyB,IAqBMgX,CAAchX,IAC7B+B,UAAWqI,EAAmBnI,KAAOwI,OAEpCzK,S,wBCxE/B0K,GAAA,kBAAAtO,GAAA,IAAAA,EAAA,GAAAuO,EAAAzC,OAAA0C,UAAAC,EAAAF,EAAAG,eAAAC,EAAA7C,OAAA6C,gBAAA,SAAAC,EAAAnI,EAAAoI,GAAAD,EAAAnI,GAAAoI,EAAAjL,OAAAkL,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAV,EAAAnI,EAAA7C,GAAA,OAAAkI,OAAA6C,eAAAC,EAAAnI,EAAA,CAAA7C,QAAA2L,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAAnI,GAAA,IAAA6I,EAAA,aAAAI,GAAAJ,EAAA,SAAAV,EAAAnI,EAAA7C,GAAA,OAAAgL,EAAAnI,GAAA7C,GAAA,SAAA+L,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAApE,OAAAqE,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAApB,EAAAuB,EAAA,WAAAtM,MAAA0M,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA5B,EAAA6B,GAAA,WAAA7L,KAAA,SAAA6L,IAAAD,EAAAE,KAAA9B,EAAA6B,IAAA,MAAAf,GAAA,OAAA9K,KAAA,QAAA6L,IAAAf,IAAA1P,EAAA2P,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAjF,OAAAkF,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA1C,GAAAE,EAAAiC,KAAAO,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAArC,UAAAyB,EAAAzB,UAAA1C,OAAAqE,OAAAW,GAAA,SAAAM,EAAA5C,GAAA,0BAAApC,SAAA,SAAAiF,GAAA/B,EAAAd,EAAA6C,GAAA,SAAAZ,GAAA,YAAAa,QAAAD,EAAAZ,SAAA,SAAAc,EAAArB,EAAAsB,GAAA,IAAAC,EAAA9C,EAAA,gBAAA/K,MAAA,SAAAyN,EAAAZ,GAAA,SAAAiB,IAAA,WAAAF,GAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAZ,EAAAkB,EAAAC,GAAA,IAAAE,EAAAvB,EAAAL,EAAAmB,GAAAnB,EAAAO,GAAA,aAAAqB,EAAAlN,KAAA,KAAAmN,EAAAD,EAAArB,IAAA7M,EAAAmO,EAAAnO,MAAA,OAAAA,GAAA,iBAAAA,GAAA6K,EAAAiC,KAAA9M,EAAA,WAAA4N,EAAAG,QAAA/N,EAAAoO,SAAAC,MAAA,SAAArO,GAAAiO,EAAA,OAAAjO,EAAA+N,EAAAC,MAAA,SAAAlC,GAAAmC,EAAA,QAAAnC,EAAAiC,EAAAC,MAAAJ,EAAAG,QAAA/N,GAAAqO,MAAA,SAAAC,GAAAH,EAAAnO,MAAAsO,EAAAP,EAAAI,MAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,QAAAE,EAAArB,KAAAoB,CAAAR,EAAAZ,EAAAkB,EAAAC,MAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAApB,EAAAV,EAAAE,EAAAM,GAAA,IAAAxO,EAAA,iCAAAyP,EAAAZ,GAAA,iBAAA7O,EAAA,UAAAoC,MAAA,iDAAApC,EAAA,cAAAyP,EAAA,MAAAZ,EAAA,OAAA2B,IAAA,IAAAhC,EAAAiB,SAAAjB,EAAAK,QAAA,KAAA4B,EAAAjC,EAAAiC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAjC,GAAA,GAAAkC,EAAA,IAAAA,IAAA3B,EAAA,gBAAA2B,GAAA,YAAAlC,EAAAiB,OAAAjB,EAAAoC,KAAApC,EAAAqC,MAAArC,EAAAK,SAAA,aAAAL,EAAAiB,OAAA,uBAAAzP,EAAA,MAAAA,EAAA,YAAAwO,EAAAK,IAAAL,EAAAsC,kBAAAtC,EAAAK,SAAA,WAAAL,EAAAiB,QAAAjB,EAAAuC,OAAA,SAAAvC,EAAAK,KAAA7O,EAAA,gBAAAkQ,EAAAvB,EAAAX,EAAAE,EAAAM,GAAA,cAAA0B,EAAAlN,KAAA,IAAAhD,EAAAwO,EAAAwC,KAAA,6BAAAd,EAAArB,MAAAE,EAAA,gBAAA/M,MAAAkO,EAAArB,IAAAmC,KAAAxC,EAAAwC,MAAA,UAAAd,EAAAlN,OAAAhD,EAAA,YAAAwO,EAAAiB,OAAA,QAAAjB,EAAAK,IAAAqB,EAAArB,OAAA,SAAA8B,EAAAF,EAAAjC,GAAA,IAAAyC,EAAAzC,EAAAiB,SAAAgB,EAAApD,SAAA4D,GAAA,QAAAhP,IAAAwN,EAAA,OAAAjB,EAAAiC,SAAA,eAAAQ,GAAAR,EAAApD,SAAA6D,SAAA1C,EAAAiB,OAAA,SAAAjB,EAAAK,SAAA5M,EAAA0O,EAAAF,EAAAjC,GAAA,UAAAA,EAAAiB,SAAA,WAAAwB,IAAAzC,EAAAiB,OAAA,QAAAjB,EAAAK,IAAA,IAAAsC,UAAA,oCAAAF,EAAA,aAAAlC,EAAA,IAAAmB,EAAAvB,EAAAc,EAAAgB,EAAApD,SAAAmB,EAAAK,KAAA,aAAAqB,EAAAlN,KAAA,OAAAwL,EAAAiB,OAAA,QAAAjB,EAAAK,IAAAqB,EAAArB,IAAAL,EAAAiC,SAAA,KAAA1B,EAAA,IAAAqC,EAAAlB,EAAArB,IAAA,OAAAuC,IAAAJ,MAAAxC,EAAAiC,EAAAY,YAAAD,EAAApP,MAAAwM,EAAA8C,KAAAb,EAAAc,QAAA,WAAA/C,EAAAiB,SAAAjB,EAAAiB,OAAA,OAAAjB,EAAAK,SAAA5M,GAAAuM,EAAAiC,SAAA,KAAA1B,GAAAqC,GAAA5C,EAAAiB,OAAA,QAAAjB,EAAAK,IAAA,IAAAsC,UAAA,oCAAA3C,EAAAiC,SAAA,KAAA1B,GAAA,SAAAyC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAlR,KAAA6Q,GAAA,SAAAM,EAAAN,GAAA,IAAAxB,EAAAwB,EAAAO,YAAA,GAAA/B,EAAAlN,KAAA,gBAAAkN,EAAArB,IAAA6C,EAAAO,WAAA/B,EAAA,SAAAzB,EAAAN,GAAA,KAAA4D,WAAA,EAAAJ,OAAA,SAAAxD,EAAA3D,QAAAgH,EAAA,WAAAU,OAAA,YAAA5C,EAAA6C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAA/E,GAAA,GAAAgF,EAAA,OAAAA,EAAAtD,KAAAqD,GAAA,sBAAAA,EAAAb,KAAA,OAAAa,EAAA,IAAAE,MAAAF,EAAA3G,QAAA,KAAA8G,GAAA,EAAAhB,EAAA,SAAAA,IAAA,OAAAgB,EAAAH,EAAA3G,QAAA,GAAAqB,EAAAiC,KAAAqD,EAAAG,GAAA,OAAAhB,EAAAtP,MAAAmQ,EAAAG,GAAAhB,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAtP,WAAAC,EAAAqP,EAAAN,MAAA,EAAAM,GAAA,OAAAA,UAAA,OAAAA,KAAAd,GAAA,SAAAA,IAAA,OAAAxO,WAAAC,EAAA+O,MAAA,UAAAhC,EAAApC,UAAAqC,EAAAlC,EAAAwC,EAAA,eAAAvN,MAAAiN,EAAArB,cAAA,IAAAb,EAAAkC,EAAA,eAAAjN,MAAAgN,EAAApB,cAAA,IAAAoB,EAAAuD,YAAA7E,EAAAuB,EAAAzB,EAAA,qBAAApP,EAAAoU,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA1D,GAAA,uBAAA0D,EAAAH,aAAAG,EAAAhJ,QAAAtL,EAAAwU,KAAA,SAAAH,GAAA,OAAAvI,OAAA2I,eAAA3I,OAAA2I,eAAAJ,EAAAxD,IAAAwD,EAAAK,UAAA7D,EAAAvB,EAAA+E,EAAAjF,EAAA,sBAAAiF,EAAA7F,UAAA1C,OAAAqE,OAAAgB,GAAAkD,GAAArU,EAAA2U,MAAA,SAAAlE,GAAA,OAAAuB,QAAAvB,IAAAW,EAAAG,EAAA/C,WAAAc,EAAAiC,EAAA/C,UAAAU,GAAA,0BAAAlP,EAAAuR,gBAAAvR,EAAA4U,MAAA,SAAAhF,EAAAC,EAAAC,EAAAC,EAAAyB,QAAA,IAAAA,MAAAqD,SAAA,IAAAC,EAAA,IAAAvD,EAAA5B,EAAAC,EAAAC,EAAAC,EAAAC,GAAAyB,GAAA,OAAAxR,EAAAoU,oBAAAvE,GAAAiF,IAAA5B,OAAAjB,MAAA,SAAAF,GAAA,OAAAA,EAAAa,KAAAb,EAAAnO,MAAAkR,EAAA5B,WAAA9B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAAnR,EAAA+L,KAAA,SAAAgJ,GAAA,IAAAC,EAAAlJ,OAAAiJ,GAAAhJ,EAAA,WAAAtF,KAAAuO,EAAAjJ,EAAAtJ,KAAAgE,GAAA,OAAAsF,EAAAkJ,UAAA,SAAA/B,IAAA,KAAAnH,EAAAqB,QAAA,KAAA3G,EAAAsF,EAAAmJ,MAAA,GAAAzO,KAAAuO,EAAA,OAAA9B,EAAAtP,MAAA6C,EAAAyM,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAN,MAAA,EAAAM,IAAAlT,EAAAkR,SAAAb,EAAA7B,UAAA,CAAA+F,YAAAlE,EAAAyD,MAAA,SAAAqB,GAAA,QAAAC,KAAA,OAAAlC,KAAA,OAAAV,KAAA,KAAAC,WAAA5O,EAAA,KAAA+O,MAAA,OAAAP,SAAA,UAAAhB,OAAA,YAAAZ,SAAA5M,EAAA,KAAA8P,WAAAvH,QAAAwH,IAAAuB,EAAA,QAAA7J,KAAA,WAAAA,EAAAa,OAAA,IAAAsC,EAAAiC,KAAA,KAAApF,KAAA2I,OAAA3I,EAAA+J,MAAA,WAAA/J,QAAAzH,IAAAyR,KAAA,gBAAA1C,MAAA,MAAA2C,EAAA,KAAA5B,WAAA,GAAAE,WAAA,aAAA0B,EAAA3Q,KAAA,MAAA2Q,EAAA9E,IAAA,YAAA+E,MAAA9C,kBAAA,SAAA+C,GAAA,QAAA7C,KAAA,MAAA6C,EAAA,IAAArF,EAAA,cAAAsF,EAAAC,EAAAC,GAAA,OAAA9D,EAAAlN,KAAA,QAAAkN,EAAArB,IAAAgF,EAAArF,EAAA8C,KAAAyC,EAAAC,IAAAxF,EAAAiB,OAAA,OAAAjB,EAAAK,SAAA5M,KAAA+R,EAAA,QAAA1B,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAApC,EAAAwB,EAAAO,WAAA,YAAAP,EAAAC,OAAA,OAAAmC,EAAA,UAAApC,EAAAC,QAAA,KAAA6B,KAAA,KAAAS,EAAApH,EAAAiC,KAAA4C,EAAA,YAAAwC,EAAArH,EAAAiC,KAAA4C,EAAA,iBAAAuC,GAAAC,EAAA,SAAAV,KAAA9B,EAAAE,SAAA,OAAAkC,EAAApC,EAAAE,UAAA,WAAA4B,KAAA9B,EAAAG,WAAA,OAAAiC,EAAApC,EAAAG,iBAAA,GAAAoC,GAAA,QAAAT,KAAA9B,EAAAE,SAAA,OAAAkC,EAAApC,EAAAE,UAAA,YAAAsC,EAAA,UAAA9R,MAAA,kDAAAoR,KAAA9B,EAAAG,WAAA,OAAAiC,EAAApC,EAAAG,gBAAAd,OAAA,SAAA/N,EAAA6L,GAAA,QAAAyD,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAC,QAAA,KAAA6B,MAAA3G,EAAAiC,KAAA4C,EAAA,oBAAA8B,KAAA9B,EAAAG,WAAA,KAAAsC,EAAAzC,EAAA,OAAAyC,IAAA,UAAAnR,GAAA,aAAAA,IAAAmR,EAAAxC,QAAA9C,MAAAsF,EAAAtC,aAAAsC,EAAA,UAAAjE,EAAAiE,IAAAlC,WAAA,UAAA/B,EAAAlN,OAAAkN,EAAArB,MAAAsF,GAAA,KAAA1E,OAAA,YAAA6B,KAAA6C,EAAAtC,WAAA9C,GAAA,KAAAqF,SAAAlE,IAAAkE,SAAA,SAAAlE,EAAA4B,GAAA,aAAA5B,EAAAlN,KAAA,MAAAkN,EAAArB,IAAA,gBAAAqB,EAAAlN,MAAA,aAAAkN,EAAAlN,KAAA,KAAAsO,KAAApB,EAAArB,IAAA,WAAAqB,EAAAlN,MAAA,KAAA4Q,KAAA,KAAA/E,IAAAqB,EAAArB,IAAA,KAAAY,OAAA,cAAA6B,KAAA,kBAAApB,EAAAlN,MAAA8O,IAAA,KAAAR,KAAAQ,GAAA/C,GAAAsF,OAAA,SAAAxC,GAAA,QAAAS,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAG,eAAA,YAAAuC,SAAA1C,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAA3C,IAAAuF,MAAA,SAAA3C,GAAA,QAAAW,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAC,WAAA,KAAAzB,EAAAwB,EAAAO,WAAA,aAAA/B,EAAAlN,KAAA,KAAAuR,EAAArE,EAAArB,IAAAmD,EAAAN,GAAA,OAAA6C,GAAA,UAAAnS,MAAA,0BAAAoS,cAAA,SAAArC,EAAAd,EAAAE,GAAA,YAAAd,SAAA,CAAApD,SAAAiC,EAAA6C,GAAAd,aAAAE,WAAA,cAAA9B,SAAA,KAAAZ,SAAA5M,GAAA8M,IAAA3Q,EAEO,SAAe6a,GAAOC,EAAAC,GAAA,OAAAC,GAAA1U,MAAC,KAADC,WAoB5B,SAAAyU,KAAA,OAAAA,GAAApE,aAAAtI,KAAAkG,MApBM,SAAAqC,EAAuBqD,EAAgB5O,GAAY,IAAA2P,EAAAtY,EAAAuY,EAAA7M,EAAA8M,EAAA,OAAA7M,KAAAqB,MAAA,SAAAmH,GAAA,cAAAA,EAAA1B,KAAA0B,EAAA5D,MAAA,UAChC,QADgC+H,EACjDlB,GAAUG,UAAO,IAAAe,OAAA,EAAjBA,EAAoB3P,GAAM,CAADwL,EAAA5D,KAAA,eAAA4D,EAAAnE,OAAA,SACnBkC,QAAQjD,UAAQ,OAGwB,OAA7CjP,EAAI,UAAAR,OAAa4X,GAAUG,GAAQ5O,GAAM3I,MAAImU,EAAA5D,KAAA,EAEhCkI,MAAMzY,GAAM,KAAD,EAApB,OAAJuY,EAAIpE,EAAAtE,KAAAsE,EAAA5D,KAAA,EACSgI,EAAK7M,OAAO,KAAD,EACC,OADzBA,EAAIyI,EAAAtE,KACJ2I,EAAQ9M,EAAKzB,MAAM,MAAKkK,EAAAnE,OAAA,SAEvB,CACHrH,OACA+P,OAAQF,EAAMhN,KAAI,SAAC3B,GACf,OAAIA,IAAI,GAAArK,OAAQ+X,EAAM,OAAA/X,OAAMmJ,GACjB,GAEL,CAAGkB,EAAKY,OAAgBZ,EAAP,MAAWrK,OAAAmZ,aAAKnO,GAAYX,UAE1D,yBAAAsK,EAAAxB,UAAAuB,QACJvQ,MAAA,KAAAC,W,yBCIM,SAASgV,KAAc,IAADC,EACnBC,EAAMtb,SAASsD,cAAc,UACnCgY,EAAIC,MAAQ,IACZD,EAAIE,OAAS,IACb,IAAMC,EAAMH,EAAII,WAAW,MAC3B,GAAKD,EAAL,CAGAA,EAAIE,YAAc,MAKlB,IAJA,IAAMC,EAAIN,EAAIC,MAAQ,EAChBM,EAAIP,EAAIE,OAAS,EAGdM,GAAK,GAAKA,EAAIF,EAAGE,GAFX,GAGXL,EAAIM,WAAWD,EAAG,EAAG,GAAKD,GAE9B,IAAK,IAAIG,GAAK,GAAKA,EAAIH,EAAGG,GAJX,GAKXP,EAAIM,WAAW,EAAGC,EAAGJ,EAAG,IAEG,QAA/BP,EAAArb,SAASic,eAAe,eAAO,IAAAZ,GAA/BA,EAAiCa,aAAa,MAAOZ,EAAIa,cCvC7D,IAmFeC,GAnFuB,SAAH1Z,GAAmB,IAAbwI,EAAKxI,EAALwI,MAGrC,OAFAjB,oBAAUmR,GAAY,IAEf7Z,IAAA+B,cAAA,OAAKgV,GAAG,OAAO3P,IAAKuC,K,oBCsChBmR,GAhCkC,SAAH3Z,GAAA,IAAA4Z,EAAA5Z,EAC1C6Z,cAAM,IAAAD,GAAQA,EAAAE,EAAA9Z,EACdoJ,cAAM,IAAA0Q,EAAG,GAAEA,EAAAC,EAAA/Z,EACXga,eAAO,IAAAD,EAAG9b,EAAI8b,EAAA,OAEdlb,IAAA+B,cAAA/B,IAAAsH,SAAA,KACK0T,KAAYzQ,EAAOmB,QAChB1L,IAAA+B,cAACqZ,KAAK,CACFC,eAAgBF,EAChBH,OAAQA,EACR/W,UAAWE,KAAOwE,QAClB2S,iBAAkBpX,IAAGC,KAAOoX,SAC5BC,kBAAmBrX,KAAOsX,KAC1BC,aAAa,GAEb1b,IAAA+B,cAAA,OAAKkC,UAAWE,KAAOwE,QAASR,QAASgT,GACpC5Q,EAAOkC,KAAI,SAACvK,EAAOwK,GAAK,OACrB1M,IAAA+B,cAAA,OAAKkC,UAAWE,KAAOyT,MAAO7S,IAAG,SAAAtE,OAAWiM,IACxC1M,IAAA+B,cAAA,KAAGkC,UAAWE,KAAOwX,OAAQzZ,GAC7BlC,IAAA+B,cAAA,OACIoF,IAAG,WAAA1G,OAAayB,EAAMuI,OAAO,GAAE,KAAAhK,OAAI0J,GAAOjI,GAAOiF,KACjDC,IAAKlF,IAETlC,IAAA+B,cAAC8Y,GAAS,c,uDCtCtCjO,GAAA,kBAAAtO,GAAA,IAAAA,EAAA,GAAAuO,EAAAzC,OAAA0C,UAAAC,EAAAF,EAAAG,eAAAC,EAAA7C,OAAA6C,gBAAA,SAAAC,EAAAnI,EAAAoI,GAAAD,EAAAnI,GAAAoI,EAAAjL,OAAAkL,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAV,EAAAnI,EAAA7C,GAAA,OAAAkI,OAAA6C,eAAAC,EAAAnI,EAAA,CAAA7C,QAAA2L,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAAnI,GAAA,IAAA6I,EAAA,aAAAI,GAAAJ,EAAA,SAAAV,EAAAnI,EAAA7C,GAAA,OAAAgL,EAAAnI,GAAA7C,GAAA,SAAA+L,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAApE,OAAAqE,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAApB,EAAAuB,EAAA,WAAAtM,MAAA0M,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA5B,EAAA6B,GAAA,WAAA7L,KAAA,SAAA6L,IAAAD,EAAAE,KAAA9B,EAAA6B,IAAA,MAAAf,GAAA,OAAA9K,KAAA,QAAA6L,IAAAf,IAAA1P,EAAA2P,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAjF,OAAAkF,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA1C,GAAAE,EAAAiC,KAAAO,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAArC,UAAAyB,EAAAzB,UAAA1C,OAAAqE,OAAAW,GAAA,SAAAM,EAAA5C,GAAA,0BAAApC,SAAA,SAAAiF,GAAA/B,EAAAd,EAAA6C,GAAA,SAAAZ,GAAA,YAAAa,QAAAD,EAAAZ,SAAA,SAAAc,EAAArB,EAAAsB,GAAA,IAAAC,EAAA9C,EAAA,gBAAA/K,MAAA,SAAAyN,EAAAZ,GAAA,SAAAiB,IAAA,WAAAF,GAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAZ,EAAAkB,EAAAC,GAAA,IAAAE,EAAAvB,EAAAL,EAAAmB,GAAAnB,EAAAO,GAAA,aAAAqB,EAAAlN,KAAA,KAAAmN,EAAAD,EAAArB,IAAA7M,EAAAmO,EAAAnO,MAAA,OAAAA,GAAA,iBAAAA,GAAA6K,EAAAiC,KAAA9M,EAAA,WAAA4N,EAAAG,QAAA/N,EAAAoO,SAAAC,MAAA,SAAArO,GAAAiO,EAAA,OAAAjO,EAAA+N,EAAAC,MAAA,SAAAlC,GAAAmC,EAAA,QAAAnC,EAAAiC,EAAAC,MAAAJ,EAAAG,QAAA/N,GAAAqO,MAAA,SAAAC,GAAAH,EAAAnO,MAAAsO,EAAAP,EAAAI,MAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,QAAAE,EAAArB,KAAAoB,CAAAR,EAAAZ,EAAAkB,EAAAC,MAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAApB,EAAAV,EAAAE,EAAAM,GAAA,IAAAxO,EAAA,iCAAAyP,EAAAZ,GAAA,iBAAA7O,EAAA,UAAAoC,MAAA,iDAAApC,EAAA,cAAAyP,EAAA,MAAAZ,EAAA,OAAA2B,IAAA,IAAAhC,EAAAiB,SAAAjB,EAAAK,QAAA,KAAA4B,EAAAjC,EAAAiC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAjC,GAAA,GAAAkC,EAAA,IAAAA,IAAA3B,EAAA,gBAAA2B,GAAA,YAAAlC,EAAAiB,OAAAjB,EAAAoC,KAAApC,EAAAqC,MAAArC,EAAAK,SAAA,aAAAL,EAAAiB,OAAA,uBAAAzP,EAAA,MAAAA,EAAA,YAAAwO,EAAAK,IAAAL,EAAAsC,kBAAAtC,EAAAK,SAAA,WAAAL,EAAAiB,QAAAjB,EAAAuC,OAAA,SAAAvC,EAAAK,KAAA7O,EAAA,gBAAAkQ,EAAAvB,EAAAX,EAAAE,EAAAM,GAAA,cAAA0B,EAAAlN,KAAA,IAAAhD,EAAAwO,EAAAwC,KAAA,6BAAAd,EAAArB,MAAAE,EAAA,gBAAA/M,MAAAkO,EAAArB,IAAAmC,KAAAxC,EAAAwC,MAAA,UAAAd,EAAAlN,OAAAhD,EAAA,YAAAwO,EAAAiB,OAAA,QAAAjB,EAAAK,IAAAqB,EAAArB,OAAA,SAAA8B,EAAAF,EAAAjC,GAAA,IAAAyC,EAAAzC,EAAAiB,SAAAgB,EAAApD,SAAA4D,GAAA,QAAAhP,IAAAwN,EAAA,OAAAjB,EAAAiC,SAAA,eAAAQ,GAAAR,EAAApD,SAAA6D,SAAA1C,EAAAiB,OAAA,SAAAjB,EAAAK,SAAA5M,EAAA0O,EAAAF,EAAAjC,GAAA,UAAAA,EAAAiB,SAAA,WAAAwB,IAAAzC,EAAAiB,OAAA,QAAAjB,EAAAK,IAAA,IAAAsC,UAAA,oCAAAF,EAAA,aAAAlC,EAAA,IAAAmB,EAAAvB,EAAAc,EAAAgB,EAAApD,SAAAmB,EAAAK,KAAA,aAAAqB,EAAAlN,KAAA,OAAAwL,EAAAiB,OAAA,QAAAjB,EAAAK,IAAAqB,EAAArB,IAAAL,EAAAiC,SAAA,KAAA1B,EAAA,IAAAqC,EAAAlB,EAAArB,IAAA,OAAAuC,IAAAJ,MAAAxC,EAAAiC,EAAAY,YAAAD,EAAApP,MAAAwM,EAAA8C,KAAAb,EAAAc,QAAA,WAAA/C,EAAAiB,SAAAjB,EAAAiB,OAAA,OAAAjB,EAAAK,SAAA5M,GAAAuM,EAAAiC,SAAA,KAAA1B,GAAAqC,GAAA5C,EAAAiB,OAAA,QAAAjB,EAAAK,IAAA,IAAAsC,UAAA,oCAAA3C,EAAAiC,SAAA,KAAA1B,GAAA,SAAAyC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAlR,KAAA6Q,GAAA,SAAAM,EAAAN,GAAA,IAAAxB,EAAAwB,EAAAO,YAAA,GAAA/B,EAAAlN,KAAA,gBAAAkN,EAAArB,IAAA6C,EAAAO,WAAA/B,EAAA,SAAAzB,EAAAN,GAAA,KAAA4D,WAAA,EAAAJ,OAAA,SAAAxD,EAAA3D,QAAAgH,EAAA,WAAAU,OAAA,YAAA5C,EAAA6C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAA/E,GAAA,GAAAgF,EAAA,OAAAA,EAAAtD,KAAAqD,GAAA,sBAAAA,EAAAb,KAAA,OAAAa,EAAA,IAAAE,MAAAF,EAAA3G,QAAA,KAAA8G,GAAA,EAAAhB,EAAA,SAAAA,IAAA,OAAAgB,EAAAH,EAAA3G,QAAA,GAAAqB,EAAAiC,KAAAqD,EAAAG,GAAA,OAAAhB,EAAAtP,MAAAmQ,EAAAG,GAAAhB,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAtP,WAAAC,EAAAqP,EAAAN,MAAA,EAAAM,GAAA,OAAAA,UAAA,OAAAA,KAAAd,GAAA,SAAAA,IAAA,OAAAxO,WAAAC,EAAA+O,MAAA,UAAAhC,EAAApC,UAAAqC,EAAAlC,EAAAwC,EAAA,eAAAvN,MAAAiN,EAAArB,cAAA,IAAAb,EAAAkC,EAAA,eAAAjN,MAAAgN,EAAApB,cAAA,IAAAoB,EAAAuD,YAAA7E,EAAAuB,EAAAzB,EAAA,qBAAApP,EAAAoU,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA1D,GAAA,uBAAA0D,EAAAH,aAAAG,EAAAhJ,QAAAtL,EAAAwU,KAAA,SAAAH,GAAA,OAAAvI,OAAA2I,eAAA3I,OAAA2I,eAAAJ,EAAAxD,IAAAwD,EAAAK,UAAA7D,EAAAvB,EAAA+E,EAAAjF,EAAA,sBAAAiF,EAAA7F,UAAA1C,OAAAqE,OAAAgB,GAAAkD,GAAArU,EAAA2U,MAAA,SAAAlE,GAAA,OAAAuB,QAAAvB,IAAAW,EAAAG,EAAA/C,WAAAc,EAAAiC,EAAA/C,UAAAU,GAAA,0BAAAlP,EAAAuR,gBAAAvR,EAAA4U,MAAA,SAAAhF,EAAAC,EAAAC,EAAAC,EAAAyB,QAAA,IAAAA,MAAAqD,SAAA,IAAAC,EAAA,IAAAvD,EAAA5B,EAAAC,EAAAC,EAAAC,EAAAC,GAAAyB,GAAA,OAAAxR,EAAAoU,oBAAAvE,GAAAiF,IAAA5B,OAAAjB,MAAA,SAAAF,GAAA,OAAAA,EAAAa,KAAAb,EAAAnO,MAAAkR,EAAA5B,WAAA9B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAAnR,EAAA+L,KAAA,SAAAgJ,GAAA,IAAAC,EAAAlJ,OAAAiJ,GAAAhJ,EAAA,WAAAtF,KAAAuO,EAAAjJ,EAAAtJ,KAAAgE,GAAA,OAAAsF,EAAAkJ,UAAA,SAAA/B,IAAA,KAAAnH,EAAAqB,QAAA,KAAA3G,EAAAsF,EAAAmJ,MAAA,GAAAzO,KAAAuO,EAAA,OAAA9B,EAAAtP,MAAA6C,EAAAyM,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAN,MAAA,EAAAM,IAAAlT,EAAAkR,SAAAb,EAAA7B,UAAA,CAAA+F,YAAAlE,EAAAyD,MAAA,SAAAqB,GAAA,QAAAC,KAAA,OAAAlC,KAAA,OAAAV,KAAA,KAAAC,WAAA5O,EAAA,KAAA+O,MAAA,OAAAP,SAAA,UAAAhB,OAAA,YAAAZ,SAAA5M,EAAA,KAAA8P,WAAAvH,QAAAwH,IAAAuB,EAAA,QAAA7J,KAAA,WAAAA,EAAAa,OAAA,IAAAsC,EAAAiC,KAAA,KAAApF,KAAA2I,OAAA3I,EAAA+J,MAAA,WAAA/J,QAAAzH,IAAAyR,KAAA,gBAAA1C,MAAA,MAAA2C,EAAA,KAAA5B,WAAA,GAAAE,WAAA,aAAA0B,EAAA3Q,KAAA,MAAA2Q,EAAA9E,IAAA,YAAA+E,MAAA9C,kBAAA,SAAA+C,GAAA,QAAA7C,KAAA,MAAA6C,EAAA,IAAArF,EAAA,cAAAsF,EAAAC,EAAAC,GAAA,OAAA9D,EAAAlN,KAAA,QAAAkN,EAAArB,IAAAgF,EAAArF,EAAA8C,KAAAyC,EAAAC,IAAAxF,EAAAiB,OAAA,OAAAjB,EAAAK,SAAA5M,KAAA+R,EAAA,QAAA1B,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAApC,EAAAwB,EAAAO,WAAA,YAAAP,EAAAC,OAAA,OAAAmC,EAAA,UAAApC,EAAAC,QAAA,KAAA6B,KAAA,KAAAS,EAAApH,EAAAiC,KAAA4C,EAAA,YAAAwC,EAAArH,EAAAiC,KAAA4C,EAAA,iBAAAuC,GAAAC,EAAA,SAAAV,KAAA9B,EAAAE,SAAA,OAAAkC,EAAApC,EAAAE,UAAA,WAAA4B,KAAA9B,EAAAG,WAAA,OAAAiC,EAAApC,EAAAG,iBAAA,GAAAoC,GAAA,QAAAT,KAAA9B,EAAAE,SAAA,OAAAkC,EAAApC,EAAAE,UAAA,YAAAsC,EAAA,UAAA9R,MAAA,kDAAAoR,KAAA9B,EAAAG,WAAA,OAAAiC,EAAApC,EAAAG,gBAAAd,OAAA,SAAA/N,EAAA6L,GAAA,QAAAyD,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAC,QAAA,KAAA6B,MAAA3G,EAAAiC,KAAA4C,EAAA,oBAAA8B,KAAA9B,EAAAG,WAAA,KAAAsC,EAAAzC,EAAA,OAAAyC,IAAA,UAAAnR,GAAA,aAAAA,IAAAmR,EAAAxC,QAAA9C,MAAAsF,EAAAtC,aAAAsC,EAAA,UAAAjE,EAAAiE,IAAAlC,WAAA,UAAA/B,EAAAlN,OAAAkN,EAAArB,MAAAsF,GAAA,KAAA1E,OAAA,YAAA6B,KAAA6C,EAAAtC,WAAA9C,GAAA,KAAAqF,SAAAlE,IAAAkE,SAAA,SAAAlE,EAAA4B,GAAA,aAAA5B,EAAAlN,KAAA,MAAAkN,EAAArB,IAAA,gBAAAqB,EAAAlN,MAAA,aAAAkN,EAAAlN,KAAA,KAAAsO,KAAApB,EAAArB,IAAA,WAAAqB,EAAAlN,MAAA,KAAA4Q,KAAA,KAAA/E,IAAAqB,EAAArB,IAAA,KAAAY,OAAA,cAAA6B,KAAA,kBAAApB,EAAAlN,MAAA8O,IAAA,KAAAR,KAAAQ,GAAA/C,GAAAsF,OAAA,SAAAxC,GAAA,QAAAS,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAG,eAAA,YAAAuC,SAAA1C,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAA3C,IAAAuF,MAAA,SAAA3C,GAAA,QAAAW,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAC,WAAA,KAAAzB,EAAAwB,EAAAO,WAAA,aAAA/B,EAAAlN,KAAA,KAAAuR,EAAArE,EAAArB,IAAAmD,EAAAN,GAAA,OAAA6C,GAAA,UAAAnS,MAAA,0BAAAoS,cAAA,SAAArC,EAAAd,EAAAE,GAAA,YAAAd,SAAA,CAAApD,SAAAiC,EAAA6C,GAAAd,aAAAE,WAAA,cAAA9B,SAAA,KAAAZ,SAAA5M,GAAA8M,IAAA3Q,EA2BA,IAAQkO,GAAS/M,EAAT+M,KAmJOoP,GA9Ia,SAAHza,GAAqE,IAA/DqX,EAAMrX,EAANqX,OAAMqD,EAAA1a,EAAE2a,KAAQlS,EAAIiS,EAAJjS,KAAM+P,EAAMkC,EAANlC,OAAMoC,EAAAF,EAAEG,MAAOC,OAAY,IAAAF,EAAG,EAACA,EAC1Ejb,EAAUO,cACR1B,EAAUQ,IAAVR,MACRqM,EAA0BC,mBAAiB,GAAEC,EAAAzI,YAAAuI,EAAA,GAAtCgQ,EAAK9P,EAAA,GAAEgQ,EAAQhQ,EAAA,GACtBiQ,EAA4ClQ,mBAAiB,KAAImQ,EAAA3Y,YAAA0Y,EAAA,GAA1DE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAAoCtQ,oBAAkB,GAAMuQ,EAAA/Y,YAAA8Y,EAAA,GAArDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAA4D1Q,mBAA2B,IAAG2Q,EAAAnZ,YAAAkZ,EAAA,GAAAE,EAAAD,EAAA,GAAjFha,EAAWia,EAAXja,YAAaka,EAAeD,EAAfC,gBAAmBC,EAAeH,EAAA,GACxDI,EAAwB/Q,oBAAkB,GAAEgR,EAAAxZ,YAAAuZ,EAAA,GAArCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAA4BnR,mBAAmB,IAAGoR,EAAA5Z,YAAA2Z,EAAA,GAA3C7S,EAAM8S,EAAA,GAAEC,EAASD,EAAA,GAExB3U,qBAAU,WACN5J,IACAod,EAASD,GACT,IAAIsB,EAAY,IAAItS,IACpB0O,EAAOjP,SAAQ,SAAA8S,GAA0B,IAADC,EAAAha,YAAA+Z,EAAA,GAAvB1S,EAAI2S,EAAA,GAAaA,EAAA,KAE1BF,EAAY,IAAItS,IAAI,GAADxK,OAAAmZ,aAAK7O,MAAMC,KAAKuS,IAAU3D,aAAK/O,GAAoBC,UAG9EwS,EAAUvS,MAAMC,KAAKuS,MACtB,IAEH7U,qBAAU,WACN,IAAIgV,EAUJ,OATIR,EAAO,EACPQ,EAAU1e,OAAO2e,YAAW,WACxBrB,EAAkBsB,OAAOV,EAAO,IAChCC,GAAQ,SAACU,GAAS,OAAKA,EAAY,OACpC,KACa,IAATX,IACPZ,EAAkBsB,OAAO5B,IACzBU,GAAc,IAEX,kBAAM1d,OAAO8e,aAAaJ,MAClC,CAACR,IAEJ,IAAMa,EAAaxc,uBACf,kBAAMkb,GAAczd,OAAOgf,SAAS,CAAE9e,IAAK,GAAKC,SAAU,aAC1D,CAACsd,IAGCwB,EAAqB1c,uBAAY,WACnCmb,GAAc,GACd5d,MACD,KC3EA,SAAqBof,EAAsBC,GAC9C,IAAMC,EAAgBC,iBAAOH,GAE7BxV,qBAAU,WACN0V,EAAcE,QAAUJ,IACzB,CAACA,IAEJxV,qBAAU,WAKN,GAAc,OAAVyV,EAAgB,CAChB,IAAMpH,EAAKwH,aALf,WACIH,EAAcE,YAIeH,GAE7B,OAAO,kBAAMK,cAAczH,OAEhC,CAACoH,ID4DJM,CAAYV,EAlDM,GACF,GAiDwB/B,GAExC,IAAM0C,EAAgB,eAAAC,EAAAzJ,aAAAtI,KAAAkG,MAAG,SAAAqC,IAAA,OAAAvI,KAAAqB,MAAA,SAAAmH,GAAA,cAAAA,EAAA1B,KAAA0B,EAAA5D,MAAA,OACjBiL,EACAC,GAAc,IAEdJ,EAAkBsB,OAtDd,IAuDJT,EAvDI,IAwDP,wBAAA/H,EAAAxB,UAAAuB,OACJ,kBAPqB,OAAAwJ,EAAA/Z,MAAA,KAAAC,YAAA,GAetB,SAASyH,EAAmBrI,GACxB,OAAOC,IAAGD,EAASI,YAAA,GAAKF,KAAOoI,KAAO5M,IAAU6M,KAQpD,IAAMoS,EAAerd,uBAAY,kBAAMwb,EAAgB,MAAK,IAE5D,OACI/c,IAAA+B,cAAA/B,IAAAsH,SAAA,KACItH,IAAA+B,cAAA,OAAKkC,UAAWE,KAAOwE,SACnB3I,IAAA+B,cAAA,KAAGkC,UAAWqI,EAAmBnI,KAAOyD,SACpC5H,IAAA+B,cAAA,QAAMkC,UAAWqI,EAAmBnI,KAAOqU,QAASrQ,QAjB9C,WAAH,OAASrH,EAAQC,KAAK,GAADN,OAAIJ,EAAW,KAAAI,OAAI+X,MAkBtCA,GACE,MAAA/X,OACAmJ,IAEX5J,IAAA+B,cAAA,OAAKkC,UAAWE,KAAOwV,QAClBA,EAAOlN,KAAI,SAAAoS,EAAsBnS,GAAK,IAAAoS,EAAArb,YAAAob,EAAA,GAAzBlS,EAAImS,EAAA,GAAa,OAAAA,EAAA,GAEvB9e,IAAA+B,cAAA,KACIgD,IAAG,OAAAtE,OAASiM,GACZzI,UAAWqI,EAAmBpI,IAAGC,KAAO4a,IAAK5a,KAAOwF,SAGnDgD,GAGL3M,IAAA+B,cAAA,KAAGgD,IAAG,OAAAtE,OAASiM,GAASzI,UAAWqI,EAAmBnI,KAAO4a,MACxDpS,QAMrB3M,IAAA+B,cAAA,OAAKkC,UAAWE,KAAO6a,qBACnBhf,IAAA+B,cAAA,OAAKkC,UAAWE,KAAO6R,cACnBhW,IAAA+B,cAAA,OAAKkC,UAAWE,KAAO8a,qBAClBxC,GACGzc,IAAA+B,cAAA/B,IAAAsH,SAAA,KACItH,IAAA+B,cAACuC,EAAM,CACHc,MAAM,IACN+C,QAjDV,WAAH,OAAS+T,GAAS,SAACgD,GAAS,OAAKA,EAAY,MAkDhCrZ,KAAK,QACLM,SAAU6V,IAAU,EACpB/X,UAAWE,KAAO6X,QAEtBhc,IAAA+B,cAACuC,EAAM,CACHc,MAAM,IACN+C,QA1DV,WAAH,OAAS+T,GAAS,SAACgD,GAAS,OAAKA,EAAY,MA2DhCrZ,KAAK,QACLM,SAAU6V,GAAS,EACnB/X,UAAWE,KAAO6X,SAI9Bhc,IAAA+B,cAACuC,EAAM,CACHc,MAAOqX,EAAamB,OAAO5B,GAASK,EACpClU,QAASuW,EACT7Y,KAAK,QACL5B,UAAWwY,EAAatY,KAAOiT,OAAS,KAE5CpX,IAAA+B,cAACuC,EAAM,CAAC6D,QAAS8V,EAAoBpY,KAAK,QAAQP,KAAM6Z,OACxDnf,IAAA+B,cAAC4S,GAAgB,SAI7B3U,IAAA+B,cAAC+Y,GAAc,CACXE,OAAQpY,EACR2H,OAAuB,OAAfuS,QAAe,IAAfA,IAAmBvS,EAC3B4Q,QAASyD,M,cExKzBhS,GAAA,kBAAAtO,GAAA,IAAAA,EAAA,GAAAuO,EAAAzC,OAAA0C,UAAAC,EAAAF,EAAAG,eAAAC,EAAA7C,OAAA6C,gBAAA,SAAAC,EAAAnI,EAAAoI,GAAAD,EAAAnI,GAAAoI,EAAAjL,OAAAkL,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAV,EAAAnI,EAAA7C,GAAA,OAAAkI,OAAA6C,eAAAC,EAAAnI,EAAA,CAAA7C,QAAA2L,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAAnI,GAAA,IAAA6I,EAAA,aAAAI,GAAAJ,EAAA,SAAAV,EAAAnI,EAAA7C,GAAA,OAAAgL,EAAAnI,GAAA7C,GAAA,SAAA+L,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAApE,OAAAqE,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAApB,EAAAuB,EAAA,WAAAtM,MAAA0M,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA5B,EAAA6B,GAAA,WAAA7L,KAAA,SAAA6L,IAAAD,EAAAE,KAAA9B,EAAA6B,IAAA,MAAAf,GAAA,OAAA9K,KAAA,QAAA6L,IAAAf,IAAA1P,EAAA2P,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAjF,OAAAkF,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA1C,GAAAE,EAAAiC,KAAAO,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAArC,UAAAyB,EAAAzB,UAAA1C,OAAAqE,OAAAW,GAAA,SAAAM,EAAA5C,GAAA,0BAAApC,SAAA,SAAAiF,GAAA/B,EAAAd,EAAA6C,GAAA,SAAAZ,GAAA,YAAAa,QAAAD,EAAAZ,SAAA,SAAAc,EAAArB,EAAAsB,GAAA,IAAAC,EAAA9C,EAAA,gBAAA/K,MAAA,SAAAyN,EAAAZ,GAAA,SAAAiB,IAAA,WAAAF,GAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAZ,EAAAkB,EAAAC,GAAA,IAAAE,EAAAvB,EAAAL,EAAAmB,GAAAnB,EAAAO,GAAA,aAAAqB,EAAAlN,KAAA,KAAAmN,EAAAD,EAAArB,IAAA7M,EAAAmO,EAAAnO,MAAA,OAAAA,GAAA,iBAAAA,GAAA6K,EAAAiC,KAAA9M,EAAA,WAAA4N,EAAAG,QAAA/N,EAAAoO,SAAAC,MAAA,SAAArO,GAAAiO,EAAA,OAAAjO,EAAA+N,EAAAC,MAAA,SAAAlC,GAAAmC,EAAA,QAAAnC,EAAAiC,EAAAC,MAAAJ,EAAAG,QAAA/N,GAAAqO,MAAA,SAAAC,GAAAH,EAAAnO,MAAAsO,EAAAP,EAAAI,MAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,QAAAE,EAAArB,KAAAoB,CAAAR,EAAAZ,EAAAkB,EAAAC,MAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAApB,EAAAV,EAAAE,EAAAM,GAAA,IAAAxO,EAAA,iCAAAyP,EAAAZ,GAAA,iBAAA7O,EAAA,UAAAoC,MAAA,iDAAApC,EAAA,cAAAyP,EAAA,MAAAZ,EAAA,OAAA2B,IAAA,IAAAhC,EAAAiB,SAAAjB,EAAAK,QAAA,KAAA4B,EAAAjC,EAAAiC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAjC,GAAA,GAAAkC,EAAA,IAAAA,IAAA3B,EAAA,gBAAA2B,GAAA,YAAAlC,EAAAiB,OAAAjB,EAAAoC,KAAApC,EAAAqC,MAAArC,EAAAK,SAAA,aAAAL,EAAAiB,OAAA,uBAAAzP,EAAA,MAAAA,EAAA,YAAAwO,EAAAK,IAAAL,EAAAsC,kBAAAtC,EAAAK,SAAA,WAAAL,EAAAiB,QAAAjB,EAAAuC,OAAA,SAAAvC,EAAAK,KAAA7O,EAAA,gBAAAkQ,EAAAvB,EAAAX,EAAAE,EAAAM,GAAA,cAAA0B,EAAAlN,KAAA,IAAAhD,EAAAwO,EAAAwC,KAAA,6BAAAd,EAAArB,MAAAE,EAAA,gBAAA/M,MAAAkO,EAAArB,IAAAmC,KAAAxC,EAAAwC,MAAA,UAAAd,EAAAlN,OAAAhD,EAAA,YAAAwO,EAAAiB,OAAA,QAAAjB,EAAAK,IAAAqB,EAAArB,OAAA,SAAA8B,EAAAF,EAAAjC,GAAA,IAAAyC,EAAAzC,EAAAiB,SAAAgB,EAAApD,SAAA4D,GAAA,QAAAhP,IAAAwN,EAAA,OAAAjB,EAAAiC,SAAA,eAAAQ,GAAAR,EAAApD,SAAA6D,SAAA1C,EAAAiB,OAAA,SAAAjB,EAAAK,SAAA5M,EAAA0O,EAAAF,EAAAjC,GAAA,UAAAA,EAAAiB,SAAA,WAAAwB,IAAAzC,EAAAiB,OAAA,QAAAjB,EAAAK,IAAA,IAAAsC,UAAA,oCAAAF,EAAA,aAAAlC,EAAA,IAAAmB,EAAAvB,EAAAc,EAAAgB,EAAApD,SAAAmB,EAAAK,KAAA,aAAAqB,EAAAlN,KAAA,OAAAwL,EAAAiB,OAAA,QAAAjB,EAAAK,IAAAqB,EAAArB,IAAAL,EAAAiC,SAAA,KAAA1B,EAAA,IAAAqC,EAAAlB,EAAArB,IAAA,OAAAuC,IAAAJ,MAAAxC,EAAAiC,EAAAY,YAAAD,EAAApP,MAAAwM,EAAA8C,KAAAb,EAAAc,QAAA,WAAA/C,EAAAiB,SAAAjB,EAAAiB,OAAA,OAAAjB,EAAAK,SAAA5M,GAAAuM,EAAAiC,SAAA,KAAA1B,GAAAqC,GAAA5C,EAAAiB,OAAA,QAAAjB,EAAAK,IAAA,IAAAsC,UAAA,oCAAA3C,EAAAiC,SAAA,KAAA1B,GAAA,SAAAyC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAlR,KAAA6Q,GAAA,SAAAM,EAAAN,GAAA,IAAAxB,EAAAwB,EAAAO,YAAA,GAAA/B,EAAAlN,KAAA,gBAAAkN,EAAArB,IAAA6C,EAAAO,WAAA/B,EAAA,SAAAzB,EAAAN,GAAA,KAAA4D,WAAA,EAAAJ,OAAA,SAAAxD,EAAA3D,QAAAgH,EAAA,WAAAU,OAAA,YAAA5C,EAAA6C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAA/E,GAAA,GAAAgF,EAAA,OAAAA,EAAAtD,KAAAqD,GAAA,sBAAAA,EAAAb,KAAA,OAAAa,EAAA,IAAAE,MAAAF,EAAA3G,QAAA,KAAA8G,GAAA,EAAAhB,EAAA,SAAAA,IAAA,OAAAgB,EAAAH,EAAA3G,QAAA,GAAAqB,EAAAiC,KAAAqD,EAAAG,GAAA,OAAAhB,EAAAtP,MAAAmQ,EAAAG,GAAAhB,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAtP,WAAAC,EAAAqP,EAAAN,MAAA,EAAAM,GAAA,OAAAA,UAAA,OAAAA,KAAAd,GAAA,SAAAA,IAAA,OAAAxO,WAAAC,EAAA+O,MAAA,UAAAhC,EAAApC,UAAAqC,EAAAlC,EAAAwC,EAAA,eAAAvN,MAAAiN,EAAArB,cAAA,IAAAb,EAAAkC,EAAA,eAAAjN,MAAAgN,EAAApB,cAAA,IAAAoB,EAAAuD,YAAA7E,EAAAuB,EAAAzB,EAAA,qBAAApP,EAAAoU,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA1D,GAAA,uBAAA0D,EAAAH,aAAAG,EAAAhJ,QAAAtL,EAAAwU,KAAA,SAAAH,GAAA,OAAAvI,OAAA2I,eAAA3I,OAAA2I,eAAAJ,EAAAxD,IAAAwD,EAAAK,UAAA7D,EAAAvB,EAAA+E,EAAAjF,EAAA,sBAAAiF,EAAA7F,UAAA1C,OAAAqE,OAAAgB,GAAAkD,GAAArU,EAAA2U,MAAA,SAAAlE,GAAA,OAAAuB,QAAAvB,IAAAW,EAAAG,EAAA/C,WAAAc,EAAAiC,EAAA/C,UAAAU,GAAA,0BAAAlP,EAAAuR,gBAAAvR,EAAA4U,MAAA,SAAAhF,EAAAC,EAAAC,EAAAC,EAAAyB,QAAA,IAAAA,MAAAqD,SAAA,IAAAC,EAAA,IAAAvD,EAAA5B,EAAAC,EAAAC,EAAAC,EAAAC,GAAAyB,GAAA,OAAAxR,EAAAoU,oBAAAvE,GAAAiF,IAAA5B,OAAAjB,MAAA,SAAAF,GAAA,OAAAA,EAAAa,KAAAb,EAAAnO,MAAAkR,EAAA5B,WAAA9B,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAAnR,EAAA+L,KAAA,SAAAgJ,GAAA,IAAAC,EAAAlJ,OAAAiJ,GAAAhJ,EAAA,WAAAtF,KAAAuO,EAAAjJ,EAAAtJ,KAAAgE,GAAA,OAAAsF,EAAAkJ,UAAA,SAAA/B,IAAA,KAAAnH,EAAAqB,QAAA,KAAA3G,EAAAsF,EAAAmJ,MAAA,GAAAzO,KAAAuO,EAAA,OAAA9B,EAAAtP,MAAA6C,EAAAyM,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAN,MAAA,EAAAM,IAAAlT,EAAAkR,SAAAb,EAAA7B,UAAA,CAAA+F,YAAAlE,EAAAyD,MAAA,SAAAqB,GAAA,QAAAC,KAAA,OAAAlC,KAAA,OAAAV,KAAA,KAAAC,WAAA5O,EAAA,KAAA+O,MAAA,OAAAP,SAAA,UAAAhB,OAAA,YAAAZ,SAAA5M,EAAA,KAAA8P,WAAAvH,QAAAwH,IAAAuB,EAAA,QAAA7J,KAAA,WAAAA,EAAAa,OAAA,IAAAsC,EAAAiC,KAAA,KAAApF,KAAA2I,OAAA3I,EAAA+J,MAAA,WAAA/J,QAAAzH,IAAAyR,KAAA,gBAAA1C,MAAA,MAAA2C,EAAA,KAAA5B,WAAA,GAAAE,WAAA,aAAA0B,EAAA3Q,KAAA,MAAA2Q,EAAA9E,IAAA,YAAA+E,MAAA9C,kBAAA,SAAA+C,GAAA,QAAA7C,KAAA,MAAA6C,EAAA,IAAArF,EAAA,cAAAsF,EAAAC,EAAAC,GAAA,OAAA9D,EAAAlN,KAAA,QAAAkN,EAAArB,IAAAgF,EAAArF,EAAA8C,KAAAyC,EAAAC,IAAAxF,EAAAiB,OAAA,OAAAjB,EAAAK,SAAA5M,KAAA+R,EAAA,QAAA1B,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAApC,EAAAwB,EAAAO,WAAA,YAAAP,EAAAC,OAAA,OAAAmC,EAAA,UAAApC,EAAAC,QAAA,KAAA6B,KAAA,KAAAS,EAAApH,EAAAiC,KAAA4C,EAAA,YAAAwC,EAAArH,EAAAiC,KAAA4C,EAAA,iBAAAuC,GAAAC,EAAA,SAAAV,KAAA9B,EAAAE,SAAA,OAAAkC,EAAApC,EAAAE,UAAA,WAAA4B,KAAA9B,EAAAG,WAAA,OAAAiC,EAAApC,EAAAG,iBAAA,GAAAoC,GAAA,QAAAT,KAAA9B,EAAAE,SAAA,OAAAkC,EAAApC,EAAAE,UAAA,YAAAsC,EAAA,UAAA9R,MAAA,kDAAAoR,KAAA9B,EAAAG,WAAA,OAAAiC,EAAApC,EAAAG,gBAAAd,OAAA,SAAA/N,EAAA6L,GAAA,QAAAyD,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAC,QAAA,KAAA6B,MAAA3G,EAAAiC,KAAA4C,EAAA,oBAAA8B,KAAA9B,EAAAG,WAAA,KAAAsC,EAAAzC,EAAA,OAAAyC,IAAA,UAAAnR,GAAA,aAAAA,IAAAmR,EAAAxC,QAAA9C,MAAAsF,EAAAtC,aAAAsC,EAAA,UAAAjE,EAAAiE,IAAAlC,WAAA,UAAA/B,EAAAlN,OAAAkN,EAAArB,MAAAsF,GAAA,KAAA1E,OAAA,YAAA6B,KAAA6C,EAAAtC,WAAA9C,GAAA,KAAAqF,SAAAlE,IAAAkE,SAAA,SAAAlE,EAAA4B,GAAA,aAAA5B,EAAAlN,KAAA,MAAAkN,EAAArB,IAAA,gBAAAqB,EAAAlN,MAAA,aAAAkN,EAAAlN,KAAA,KAAAsO,KAAApB,EAAArB,IAAA,WAAAqB,EAAAlN,MAAA,KAAA4Q,KAAA,KAAA/E,IAAAqB,EAAArB,IAAA,KAAAY,OAAA,cAAA6B,KAAA,kBAAApB,EAAAlN,MAAA8O,IAAA,KAAAR,KAAAQ,GAAA/C,GAAAsF,OAAA,SAAAxC,GAAA,QAAAS,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAG,eAAA,YAAAuC,SAAA1C,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAA3C,IAAAuF,MAAA,SAAA3C,GAAA,QAAAW,EAAA,KAAAP,WAAAvG,OAAA,EAAA8G,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAC,WAAA,KAAAzB,EAAAwB,EAAAO,WAAA,aAAA/B,EAAAlN,KAAA,KAAAuR,EAAArE,EAAArB,IAAAmD,EAAAN,GAAA,OAAA6C,GAAA,UAAAnS,MAAA,0BAAAoS,cAAA,SAAArC,EAAAd,EAAAE,GAAA,YAAAd,SAAA,CAAApD,SAAAiC,EAAA6C,GAAAd,aAAAE,WAAA,cAAA9B,SAAA,KAAAZ,SAAA5M,GAAA8M,IAAA3Q,EAYA,IAmBe8gB,GAnBU,WACrB,IAAMte,EAAUO,cAChBge,EAA6BtT,cAArByM,EAAM6G,EAAN7G,OAAQ8G,EAAQD,EAARC,SAChBtT,EAAwBC,mBAAuB,MAAKC,EAAAzI,YAAAuI,EAAA,GAA7C8P,EAAI5P,EAAA,GAAEqT,EAAOrT,EAAA,GAapB,OAXAxD,qBAAU,WACNwM,aAAAtI,KAAAkG,MAAC,SAAAqC,IAAA,IAAAqK,EAAA,OAAA5S,KAAAqB,MAAA,SAAAmH,GAAA,cAAAA,EAAA1B,KAAA0B,EAAA5D,MAAA,cAAA4D,EAAA1B,KAAA,EAAA0B,EAAA5D,KAAA,EAEyB2H,GAAQX,EAAQ8G,GAAU,KAAD,EAArCE,EAAGpK,EAAAtE,KACTyO,EAAQC,GAAKpK,EAAA5D,KAAA,gBAAA4D,EAAA1B,KAAA,EAAA0B,EAAAqK,GAAArK,EAAA,SAEbvU,EAAQC,GAAS,yBAAAsU,EAAAxB,UAAAuB,EAAA,iBALzBD,KAQD,IAEI4G,EAAO9b,IAAA+B,cAAC6Z,GAAI,CAACpD,OAAQA,EAAQsD,KAAMA,IAAW,MCb1C4D,GATa,WAAH,OACrB1f,IAAA+B,cAACmH,IAAM,KACHlJ,IAAA+B,cAACoH,IAAK,CAACmN,OAAK,EAACrV,KAAI,GAAAR,OAAKJ,EAAW,sBAAsBgJ,OAAQ,kBAAMrJ,IAAA+B,cAACqd,GAAY,SAClFpf,IAAA+B,cAACoH,IAAK,CAACmN,OAAK,EAACrV,KAAMZ,EAAagJ,OAAQ,kBAAMrJ,IAAA+B,cAAC4W,GAAQ,SACvD3Y,IAAA+B,cAACoH,IAAK,CAAClI,KAAI,GAAAR,OAAKJ,EAAW,YAAYgJ,OAAQ,kBAAMrJ,IAAA+B,cAAC4W,GAAQ,SAC9D3Y,IAAA+B,cAACuH,IAAQ,CAACC,GAAIlJ,M,qBCkBPsf,GAhBM,WACjB,IAAQhgB,EAAUQ,IAAVR,MAER,OACIK,IAAA+B,cAAA,OAAKkC,UAAWC,IAAGC,KAAO2E,KAAIzE,YAAA,GAAKF,KAAOoI,KAAO5M,IAAUF,EAAO+M,QAC9DxM,IAAA+B,cAAC8V,GAAU,MACX7X,IAAA+B,cAACmH,IAAM,KACHlJ,IAAA+B,cAACoH,IAAK,CAAClI,KAAMZ,EAAagJ,OAAQ,kBAAMrJ,IAAA+B,cAAC2d,GAAe,SACxD1f,IAAA+B,cAACoH,IAAK,CAAClI,KAAMZ,EAAcgJ,OAAQ,kBAAMrJ,IAAA+B,cAACsU,GAAgB,SAC1DrW,IAAA+B,cAACoH,IAAK,CAAClI,KAAMZ,EAAa+I,UAAWH,KACrCjJ,IAAA+B,cAACuH,IAAQ,CAACC,GAAIlJ,O,qBCOfuf,GAnBC,WACZ,IAAQjgB,EAAUQ,IAAVR,MAER,OACIK,IAAA+B,cAAC8B,EAAqB,KAClB7D,IAAA+B,cAACsB,EAAgB,KACbrD,IAAA+B,cAACb,EAAkB,KACflB,IAAA+B,cAAA,OACIgV,GAAG,OACH9S,UAAWC,IAAGC,KAAO0b,IAAGxb,YAAA,GAAKF,KAAOoI,KAAO5M,IAAUF,EAAO+M,QAE5DxM,IAAA+B,cAAC4d,GAAQ,W,O5CnBDG,UAAUC,UAAU1U,SAAS,S6CazD2U,YAAQzhB,GAGZ,IAAM0hB,GAAc,IAAIC,cAAY,CAChCC,eAAgB,CACZC,QAAS,CACLC,sBAAsB,EACtBC,UAAW,EACXC,UAAW,EACXC,OAAO,MAKnBC,IAASpX,OACLrJ,IAAA+B,cAAC/B,IAAM0gB,WAAU,KACb1gB,IAAA+B,cAAC4e,sBAAmB,CAACC,OAAQX,IACzBjgB,IAAA+B,cAAC8e,IAAa,KACV7gB,IAAA+B,cAAC6d,GAAG,SAIhBnhB,SAASic,eAAe,S5CsFpB,kBAAmBoF,WACnBA,UAAUgB,cAAcC,MAAMxQ,MAAK,SAACyQ,GAChCA,EAAaC,iB,mB6C9HzB5iB,EAAOC,QAAU,CAAC,QAAU,uBAAuB,OAAS,sBAAsB,KAAO,oBAAoB,OAAS,sBAAsB,OAAS,sBAAsB,IAAM,mBAAmB,MAAQ,qBAAqB,gBAAgB,6BAA6B,aAAe,6BAA6B,OAAS,sBAAsB,MAAQ,uB,mBCAjWD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,QAAU,wBAAwB,OAAS,yB,mBCAzFD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,uBAAuB,SAAW,yBAAyB,YAAc,4BAA4B,MAAQ,sBAAsB,MAAQ,sBAAsB,KAAO,qBAAqB,OAAS,yB,mBCA/TD,EAAOC,QAAU,CAAC,QAAU,gCAAgC,QAAU,gCAAgC,MAAQ,8BAA8B,MAAQ,gC,mBCApJD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,KAAO,uBAAuB,QAAU,0BAA0B,KAAO,0B","file":"static/js/main.ee14f07f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"InformContainer_content__1tZQQ\",\"icon-wrapper\":\"InformContainer_icon-wrapper__3Mvh0\",\"iconWrapper\":\"InformContainer_icon-wrapper__3Mvh0\",\"icon\":\"InformContainer_icon__2KfTx\",\"header\":\"InformContainer_header__2qswt\",\"message\":\"InformContainer_message__16eRb\",\"button-block\":\"InformContainer_button-block__3iqOe\",\"buttonBlock\":\"InformContainer_button-block__3iqOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ChordList_header__2tfZf\",\"dark\":\"ChordList_dark__17Scx\",\"content\":\"ChordList_content__3xwFj\",\"text\":\"ChordList_text__2aZj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-item\":\"NavItem_nav-item__3sPMH\",\"navItem\":\"NavItem_nav-item__3sPMH\",\"sidebar-item\":\"NavItem_sidebar-item__2ufmi\",\"sidebarItem\":\"NavItem_sidebar-item__2ufmi\",\"dark\":\"NavItem_dark__32GWl\",\"light\":\"NavItem_light__2pN-C\",\"active\":\"NavItem_active__1w5A8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dot-loader\":\"DotsLoader_dot-loader__2366-\",\"dotLoader\":\"DotsLoader_dot-loader__2366-\",\"white\":\"DotsLoader_white__37Ggm\",\"black\":\"DotsLoader_black__2Yblr\",\"scale\":\"DotsLoader_scale__2n1qO\"};","module.exports = __webpack_public_path__ + \"static/media/expand-fullscreen.5756d3ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/exit-fullscreen.ad99d9ea.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"AuthorsAlphabetPanel_panel__2BcSg\",\"sign\":\"AuthorsAlphabetPanel_sign__2hmcx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"MainPage_page__3RlOB\",\"dark\":\"MainPage_dark__1Wfs2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"dark\":\"App_dark__22_2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Navbar_block__2RFkq\"};","module.exports = __webpack_public_path__ + \"static/media/moon.78843a21.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.bc8aeaa4.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-up.4c7a261b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Song_content__3-VEa\",\"header\":\"Song_header__q8I2U\",\"dark\":\"Song_dark__rbWBv\",\"author\":\"Song_author__1bojg\",\"lyrics\":\"Song_lyrics__2zlVy\",\"row\":\"Song_row__IwDnY\",\"chord\":\"Song_chord__25o1W\",\"buttons-block\":\"Song_buttons-block__2GxKD\",\"buttonsBlock\":\"Song_buttons-block__2GxKD\",\"buttons-block-wrapper\":\"Song_buttons-block-wrapper__1i5G_\",\"buttonsBlockWrapper\":\"Song_buttons-block-wrapper__1i5G_\",\"buttons-block-content\":\"Song_buttons-block-content__3AbkK\",\"buttonsBlockContent\":\"Song_buttons-block-content__3AbkK\",\"active\":\"Song_active__3udVA\",\"speed\":\"Song_speed__23zH0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__ELlQg\",\"btn-justify\":\"Button_btn-justify__1STMc\",\"btnJustify\":\"Button_btn-justify__1STMc\",\"btn-small\":\"Button_btn-small__3IQXD\",\"btnSmall\":\"Button_btn-small__3IQXD\",\"btn-icon-left\":\"Button_btn-icon-left__1P2s3\",\"btnIconLeft\":\"Button_btn-icon-left__1P2s3\",\"buttonLabel\":\"Button_button-label__3q8af\",\"btn-icon-right\":\"Button_btn-icon-right__1Otrp\",\"btnIconRight\":\"Button_btn-icon-right__1Otrp\",\"btn-icon-only\":\"Button_btn-icon-only__lujN2\",\"btnIconOnly\":\"Button_btn-icon-only__lujN2\",\"btn-middle\":\"Button_btn-middle__3XukW\",\"btnMiddle\":\"Button_btn-middle__3XukW\",\"btn-large\":\"Button_btn-large__3igOm\",\"btnLarge\":\"Button_btn-large__3igOm\",\"btn-x-large\":\"Button_btn-x-large__2U3EB\",\"btnXLarge\":\"Button_btn-x-large__2U3EB\",\"btn-icon\":\"Button_btn-icon__lVAnF\",\"btnIcon\":\"Button_btn-icon__lVAnF\",\"btn-text\":\"Button_btn-text__ZrKwy\",\"btnText\":\"Button_btn-text__ZrKwy\",\"btn-contained\":\"Button_btn-contained__BXAva\",\"btnContained\":\"Button_btn-contained__BXAva\",\"btn-withIcon\":\"Button_btn-withIcon__2oaUm\",\"btnWithIcon\":\"Button_btn-withIcon__2oaUm\",\"btn-outline\":\"Button_btn-outline__3RNCE\",\"btnOutline\":\"Button_btn-outline__3RNCE\",\"btn-green\":\"Button_btn-green__2YvA6\",\"btnGreen\":\"Button_btn-green__2YvA6\",\"hover\":\"Button_hover__1m5YH\",\"btn-skeuomorph\":\"Button_btn-skeuomorph__3BHe0\",\"btnSkeuomorph\":\"Button_btn-skeuomorph__3BHe0\",\"button-label\":\"Button_button-label__3q8af\"};","export const config = {\n    rootElement: document,\n    shadowDOM: false,\n    include: 'link[rel=stylesheet],style',\n    exclude: '',\n    variables: {},\n};\n","export function scrollToTop(smooth?: boolean) {\n    window.scrollTo({ top: 0, behavior: smooth ? 'smooth' : 'auto' });\n}\n\nexport const ieDetector = () => navigator.userAgent.includes('.NET');\n\nexport function noop() {}\n\nexport function sleep(time: number) {\n    return new Promise((resolve) => setTimeout(resolve, 1000 * time));\n}\n\nexport function getRandom(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","export enum Themes {\n    LIGHT = 'light',\n    DARK = 'dark',\n}\n","import { Themes } from '../constants/Themes';\n\nconst THEME_KEY = 'songbook-theme';\n\nexport function saveTheme(theme: Themes) {\n    window.localStorage.setItem(THEME_KEY, theme);\n}\nexport function getTheme(): Themes {\n    const theme = window.localStorage.getItem(THEME_KEY) as Themes | null;\n    return theme ? theme : Themes.LIGHT;\n}\n","import React from 'react';\n\nimport { Themes } from '../../constants/Themes';\nimport { getTheme } from '../../api/settingService';\n\nexport const CHANGE_THEME_ACTION = 'CHANGE_THEME_ACTION';\n\nexport type ThemeState = {\n    theme: Themes;\n};\n\nexport type ChangeThemeAction = {\n    type: typeof CHANGE_THEME_ACTION;\n    payload: {\n        theme: ThemeState['theme'];\n    };\n};\n\nexport interface ThemeContext extends React.Context<any> {\n    state: ThemeState;\n    dispatch: React.Dispatch<ChangeThemeAction>;\n}\n\nexport const ThemeContext = React.createContext<ThemeContext>({\n    state: { theme: getTheme() },\n} as ThemeContext);\n","import { useContext } from 'react';\n\nimport { getTheme } from '../api/settingService';\nimport { ThemeContext } from '../component/ThemeContext/ThemeContext';\n\nexport const useTheme = () => {\n    const {\n        state: { theme },\n    } = useContext(ThemeContext);\n\n    return { theme: theme || getTheme() };\n};\n","export const ROUTE = {\n    CORE: '/',\n    SONGS: '/songs',\n    CHORDS: '/chords',\n    ERROR: '/error',\n};\n\nconst { ERROR } = ROUTE;\n\nexport const ERROR_ROUTE = {\n    _404: `${ERROR}/404`,\n    _500: `${ERROR}/500`,\n    _403: `${ERROR}/403`,\n    COMMON: `${ERROR}/oops`,\n};\n","import { History } from 'history';\n\nimport { ERROR_ROUTE } from '../../constants/route';\n\nexport const goTo404 = (history: History) => {\n    history.push(ERROR_ROUTE._404);\n};\n\nexport const goTo500 = (history: History) => {\n    history.push(ERROR_ROUTE._500);\n};\n\nexport const goToCommonError = (history: History) => {\n    history.push(ERROR_ROUTE.COMMON);\n};\n\nexport const getNavFunc = (history: History, path: string) => () => history.push(path);\n","import React, { FC, useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { ERROR_ROUTE, ROUTE } from '../../constants/route';\nimport { getNavFunc } from '../../utils/navigation/navigation';\nimport { AppNavigationCtx } from '.';\n\nconst NavigationProvider: FC = ({ children }) => {\n    const history = useHistory();\n\n    const goBack = useCallback(() => {\n        history.goBack();\n    }, []);\n\n    const goRoot = useCallback(getNavFunc(history, ROUTE.SONGS), []);\n\n    const goToSongs = useCallback(getNavFunc(history, ROUTE.SONGS), []);\n\n    const goToChords = useCallback(getNavFunc(history, ROUTE.CHORDS), []);\n\n    const goTo404 = useCallback(getNavFunc(history, ERROR_ROUTE._404), []);\n\n    const goTo500 = useCallback(getNavFunc(history, ERROR_ROUTE._500), []);\n\n    const goToCommonError = useCallback(getNavFunc(history, ERROR_ROUTE.COMMON), []);\n\n    const navigation = useMemo(\n        () => ({\n            goBack,\n            goRoot,\n            goToSongs,\n            goToChords,\n            goTo404,\n            goTo500,\n            goToCommonError,\n        }),\n        []\n    );\n\n    return <AppNavigationCtx.Provider value={navigation}>{children}</AppNavigationCtx.Provider>;\n};\n\nexport default NavigationProvider;\n","import React, { useContext } from 'react';\n\nimport { INavigation } from '../../utils/navigation/types';\n\n/**\n * Navigation context\n */\nexport const AppNavigationCtx = React.createContext<INavigation | undefined>(undefined);\n\nconst useAppNavigation = () => {\n    const appNavigation = useContext(AppNavigationCtx);\n\n    if (typeof appNavigation === 'undefined') {\n        throw Error(`Use useAppNavigation() inside <NavigationProvider>`);\n    }\n\n    return appNavigation;\n};\n\nexport default useAppNavigation;\n","enum ModalTypes {\n    NONE = 0,\n    CHORDS_ROW_MODAL,\n}\n\nexport default ModalTypes;\n","import * as React from 'react';\n\nimport ModalTypes from '../constants/ModalTypes';\n\nimport { ModalContext, ModalReducerActionData, ModalState } from './types';\n\nexport const OPEN_MODAL_ACTION = 'OPEN_MODAL_ACTION';\nexport const CLOSE_MODAL_ACTION = 'CLOSE_MODAL_ACTION';\nexport const OPEN_CHORDS_ROW_MODAL_ACTION = 'OPEN_CHORDS_ROW_MODAL_ACTION';\n\nexport const ModalCtx = React.createContext<ModalContext>({} as ModalContext);\n\nexport const initialState: ModalState = {\n    modalType: ModalTypes.NONE,\n    isModalOpen: false,\n    modalTitle: '',\n    modalMessage: '',\n    chordsRow: [],\n};\n\nexport function userReducer(state: ModalState, action: ModalReducerActionData): ModalState {\n    switch (action.type) {\n        case OPEN_MODAL_ACTION:\n        case OPEN_CHORDS_ROW_MODAL_ACTION:\n            return { ...state, ...action.payload, isModalOpen: true };\n        case CLOSE_MODAL_ACTION:\n            return {\n                ...state,\n                ...initialState,\n            };\n        default:\n            return state;\n    }\n}\n","import React, { FC, useReducer } from 'react';\nimport { ModalCtx, initialState, userReducer } from '../reducer/modal';\n\nconst ContextContainer: FC = ({ children }) => {\n    const [state, dispatch] = useReducer(userReducer, initialState);\n    const contextValue = { state, dispatch } as React.ContextType<typeof ModalCtx>;\n\n    return <ModalCtx.Provider value={contextValue}>{children}</ModalCtx.Provider>;\n};\n\nexport default ContextContainer;\n","import React, { FC, useReducer } from 'react';\n\nimport { getTheme } from '../api/settingService';\nimport {\n    CHANGE_THEME_ACTION,\n    ChangeThemeAction,\n    ThemeContext,\n    ThemeState,\n} from '../component/ThemeContext/ThemeContext';\n\nexport function themeReducer(state: ThemeState, action: ChangeThemeAction): ThemeState {\n    if (action.type === CHANGE_THEME_ACTION) {\n        return { ...state, ...action.payload };\n    } else {\n        return state;\n    }\n}\n\nconst ThemeContextContainer: FC = ({ children }) => {\n    const [state, dispatch] = useReducer(themeReducer, { theme: getTheme() });\n    const contextValue = { state, dispatch } as React.ContextType<typeof ThemeContext>;\n\n    return <ThemeContext.Provider value={contextValue}>{children}</ThemeContext.Provider>;\n};\n\nexport default ThemeContextContainer;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './DotsLoader.module.css';\n\ntype Props = {\n    color?: 'white' | 'black';\n};\n\nconst DotsLoader: React.FC<Props> = ({ color = 'white' }) => (\n    <div className={cn(styles.dotLoader, { [styles[color]]: true })}>\n        <div />\n        <div />\n        <div />\n    </div>\n);\n\nexport default DotsLoader;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport DotsLoader from '../DotsLoader';\nimport { WhiteSvgLogo } from '../../utils';\n\nimport { IButton } from './types';\n\nimport styles from './Button.module.scss';\n\nclass Button extends React.PureComponent<IButton> {\n    render() {\n        const {\n            label = '',\n            color = 'green',\n            icon,\n            iconPosition = 'left',\n            type = 'outline',\n            htmlType = 'button',\n            size = 'middle',\n            className,\n            children,\n            skeuomorph = false,\n            justify = false,\n            disabled = false,\n            dataTestId = 'button',\n            loading = false,\n            ...restProps\n        } = this.props;\n        const buttonClasses = classNames([\n            styles.btn,\n            {\n                [styles[`btn-${color}`]]: type === 'contained',\n                [styles.btnIconOnly]: (!!children || !label) && !!icon,\n                [styles[`btn-icon-${iconPosition}`]]: (!!children || !!label) && !!icon,\n                [styles[`btn-${type}`]]: type,\n                [styles[`btn-${size}`]]: size,\n                [styles.btnJustify]: justify,\n                [styles.btnSkeuomorph]: type === 'contained' && skeuomorph,\n            },\n            className,\n        ]);\n\n        const iconNode =\n            icon &&\n            (typeof icon === 'string' ? (\n                <img className={styles.btnIcon} src={icon} alt=\"\" />\n            ) : (\n                <span className={styles.btnIcon}>{icon}</span>\n            ));\n\n        const labelNode = (\n            <>\n                {iconPosition === 'left' && iconNode}\n                {label && <span className={styles.buttonLabel}>{label}</span>}\n                {iconPosition === 'right' && iconNode}\n            </>\n        );\n\n        return (\n            <button\n                {...restProps}\n                type={htmlType}\n                className={buttonClasses}\n                data-test-id={dataTestId}\n                disabled={disabled || loading}\n            >\n                {loading ? (\n                    <DotsLoader color={type === 'contained' ? 'white' : 'black'} />\n                ) : (\n                    children || labelNode\n                )}\n            </button>\n        );\n    }\n}\n\nexport default Button;\n","import React, { useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { noop } from '../../utils/helper';\nimport Button from '../Button';\n\nimport { IInformContainer } from './types';\n\nimport styles from './InformContainer.module.css';\n\nconst InformContainer: React.FC<IInformContainer> = ({\n    header,\n    headerClassName,\n    message,\n    messageClassName,\n    buttonLabel,\n    buttonCancelLabel,\n    onMount = noop,\n    onClick,\n    onCancelClick,\n    contentClassName,\n    buttonClassName,\n    buttonCancelClassName,\n    buttonCancelProps,\n    buttonProps,\n    loading,\n}) => {\n    useEffect(onMount, []);\n\n    return (\n        <div className={cn(styles.content, contentClassName)}>\n            <div className={cn(styles.header, headerClassName)}>{header}</div>\n            {message && <div className={cn(styles.message, messageClassName)}>{message}</div>}\n            <div className={styles.buttonBlock}>\n                {onCancelClick && buttonCancelLabel && (\n                    <Button\n                        {...buttonCancelProps}\n                        type=\"outline\"\n                        label={buttonCancelLabel}\n                        onClick={onCancelClick}\n                        className={buttonCancelClassName ?? buttonClassName}\n                        dataTestId=\"button-cancel\"\n                        loading={loading}\n                    />\n                )}\n                {onClick && buttonLabel && (\n                    <Button\n                        {...buttonProps}\n                        label={buttonLabel}\n                        type=\"contained\"\n                        skeuomorph\n                        onClick={onClick}\n                        className={buttonClassName}\n                        dataTestId=\"button-submit\"\n                        loading={loading}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default InformContainer;\n","import React from 'react';\n\nimport { IButton } from '../../../component/Button';\nimport { useAppNavigation } from '../../../component/Navigation';\nimport InformContainer from '../../../component/InformContainer';\n\nimport styles from '../Errors.module.css';\n\nconst Page404: React.FC = () => {\n    const { goToSongs } = useAppNavigation();\n\n    const buttonProps: IButton = { size: 'x-large' };\n\n    return (\n        <div className={styles.page}>\n            <InformContainer\n                header=\"Страница не найдена\"\n                message=\"Попробуйте перейти на главную\"\n                buttonLabel=\"На главную\"\n                onClick={goToSongs}\n                contentClassName={styles.content}\n                buttonClassName={styles.button}\n                buttonProps={buttonProps}\n            />\n        </div>\n    );\n};\n\nexport default Page404;\n","import React from 'react';\n\nimport { useAppNavigation } from '../../../component/Navigation';\nimport { IButton } from '../../../component/Button';\nimport InformContainer from '../../../component/InformContainer/InformContainer';\n\nimport styles from '../Errors.module.css';\n\nconst CommonError: React.FC = () => {\n    const { goBack } = useAppNavigation();\n    const buttonProps: IButton = { size: 'x-large' };\n\n    return (\n        <div className={styles.page}>\n            <InformContainer\n                header=\"Что-то пошло не так\"\n                buttonLabel=\"Вернуться\"\n                onClick={() => goBack()}\n                contentClassName={styles.content}\n                buttonClassName={styles.button}\n                buttonProps={buttonProps}\n            />\n        </div>\n    );\n};\n\nexport default CommonError;\n","import React, { FC } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { ERROR_ROUTE, ROUTE } from '../../constants/route';\nimport Page404 from '../../containers/Errors/Page404';\nimport CommonError from '../../containers/Errors/CommonError/CommonError';\n\nconst ErrorPage: FC = () => (\n    <Switch>\n        <Route path={ERROR_ROUTE._404} component={Page404} />\n        <Route path={ERROR_ROUTE.COMMON} component={CommonError} />\n        <Route path={ROUTE.ERROR} render={() => <Redirect to={ERROR_ROUTE._404} />} />\n    </Switch>\n);\n\nexport default ErrorPage;\n","/**\n * Оригинальная регулярка:\n * /\\b[A-G][b#]?(maj|min|m|M|\\+|-|dim|aug)?\\d*(sus)?\\d*(\\/[A-G][b#]?)?\\b/g\n * Убран блок 'M' (так как в оригинальной отлавливалось в тексте 'FM') и добавлен блок для определения Cadd9\n * Как не отлавливать артикль и форму глагола to be (\"Am I\")?\n */\nexport const CHORD_REGEX_PATTERN =\n    /\\b[A-H][b#]?(maj|min|m|\\+|-|dim|aug|add)?\\d*(sus)?\\d*(\\/[A-G][b#]?)?\\b/g;\n\nexport interface IChord {\n    chord: string;\n    name: string;\n    src: string;\n}\n\nexport type IChordsList = Record<string, IChord[]>;\n\n/**\n * Для передачи в url некоторые символы в названии аккорда заменены:\n * - символ '/' заменен на '-'.\n * - символ '#' заменен на '_'.\n */\nexport const ChordsList: IChordsList = {\n    A: [\n        { chord: 'A', name: 'Ля мажор', src: 'A.png' },\n        { chord: 'Am', name: 'Ля минор', src: 'Am.png' },\n        { chord: 'A+', name: 'Ля мажор увеличенный', src: 'A+.png' },\n        { chord: 'A#', name: 'Ля-диез мажор', src: 'A_.png' },\n        {\n            chord: 'Amaj7',\n            name: 'Большой мажорный септаккорд от ноты Ля',\n            src: 'Amaj7.png',\n        },\n        {\n            chord: 'Asus4',\n            name: 'Ля мажор с квартой вместо терции',\n            src: 'Asus4.png',\n        },\n        {\n            chord: 'A6',\n            name: 'Мажорный секстаккорд от ноты Ля',\n            src: 'A6.png',\n        },\n        {\n            chord: 'Am6',\n            name: 'Минорный секстаккорд от ноты Ля',\n            src: 'Am6.png',\n        },\n        {\n            chord: 'A7',\n            name: 'Доминантсептаккорд (мажорный септаккорд) от ноты Ля',\n            src: 'A7.png',\n        },\n        {\n            chord: 'Am7',\n            name: 'Минорный септаккорд от ноты Ля',\n            src: 'Am7.png',\n        },\n        {\n            chord: 'A#7',\n            name: 'Доминантсептаккорд (мажорный септаккорд) от ноты Ля-диез',\n            src: 'A_7.png',\n        },\n        {\n            chord: 'Adim7',\n            name: 'Уменьшенный септаккорд от ноты Ля',\n            src: 'Adim7.png',\n        },\n        {\n            chord: 'A7sus4',\n            name: 'Мажорный септаккорд с квартой от ноты Ля',\n            src: 'A7sus4.png',\n        },\n        {\n            chord: 'A7/6',\n            name: 'Мажорный септаккорд с секстой от ноты Ля',\n            src: 'A7-6.png',\n        },\n        {\n            chord: 'A9',\n            name: 'Мажорный нонаккорд от ноты Ля',\n            src: 'A9.png',\n        },\n        {\n            chord: 'Am9',\n            name: 'Минорный нонаккорд от ноты Ля',\n            src: 'Am9.png',\n        },\n    ],\n    C: [\n        { chord: 'C', name: 'До мажор', src: 'C.png' },\n        { chord: 'C+', name: 'До мажор увеличенный', src: 'C+.png' },\n        { chord: 'Cm', name: 'До минор', src: 'Cm.png' },\n        { chord: 'C#', name: 'До-диез мажор', src: 'C_.png' },\n        { chord: 'C#m', name: 'До-диез минор', src: 'C_m.png' },\n        { chord: 'C#+', name: 'До-диез мажор увеличенный', src: 'C_+.png' },\n        { chord: 'Cmaj7', name: 'Большой мажорный септаккорд от ноты До', src: 'Cmaj7.png' },\n        { chord: 'C#maj7', name: 'Большой мажорный септаккорд от ноты До-диез', src: 'C_maj7.png' },\n        { chord: 'Csus4', name: 'До мажор с квартой вместо терции', src: 'Csus4.png' },\n        { chord: 'C#sus4', name: 'До-диез мажор с квартой вместо терции', src: 'C_sus4.png' },\n        { chord: 'C6', name: 'Мажорный секстаккорд от ноты До', src: 'C6.png' },\n        { chord: 'Cm6', name: 'Минорный секстаккорд от ноты До', src: 'Cm6.png' },\n        { chord: 'C#6', name: 'Мажорный секстаккорд от ноты До-диез', src: 'C_6.png' },\n        { chord: 'C#m6', name: 'Минорный секстаккорд от ноты До-диез', src: 'C_m6.png' },\n        { chord: 'C7', name: 'Мажорный септаккорд (доминантсептаккорд) от ноты До', src: 'C7.png' },\n        { chord: 'Cm7', name: 'Минорный септаккорд от ноты До', src: 'Cm7.png' },\n        {\n            chord: 'C#7',\n            name: 'Мажорный септаккорд (доминантсептаккорд) от ноты До-диез',\n            src: 'C_7.png',\n        },\n        { chord: 'C#m7', name: 'Минорный септаккорд от ноты До-диез', src: 'C_m7.png' },\n        { chord: 'Cdim7', name: 'Уменьшенный септаккорд от ноты До', src: 'Cdim7.png' },\n        { chord: 'C#dim7', name: 'Уменьшенный септаккорд от ноты До-диез', src: 'C_dim7.png' },\n        { chord: 'C7sus4', name: 'Мажорный септаккорд с квартой от ноты До', src: 'C7sus4.png' },\n        {\n            chord: 'C#7sus4',\n            name: 'Мажорный септаккорд с квартой от ноты До-диез',\n            src: 'C_7sus4.png',\n        },\n        { chord: 'C7/6', name: 'Мажорный септаккорд с секстой от ноты До', src: 'C7-6.png' },\n        { chord: 'C#7/6', name: 'Мажорный септаккорд с секстой от ноты До-диез', src: 'C_7-6.png' },\n        { chord: 'C9', name: 'Мажорный нонаккорд от ноты До', src: 'C9.png' },\n        { chord: 'Cm9', name: 'Минорный нонаккорд от ноты До', src: 'Cm9.png' },\n        { chord: 'C#9', name: 'Мажорный нонаккорд от ноты До-диез', src: 'C_9.png' },\n        { chord: 'C#m9', name: 'Минорный нонаккорд от ноты До-диез', src: 'C_m9.png' },\n    ],\n    D: [\n        { chord: 'D', name: 'Ре мажор', src: 'D.png' },\n        { chord: 'Dm', name: 'Ре минор', src: 'Dm.png' },\n        { chord: 'D+', name: 'Ре мажор увеличенный', src: 'D+.png' },\n        { chord: 'D#', name: 'Ре-диез мажор', src: 'D_.png' },\n        { chord: 'D#m', name: 'Ре-диез минор', src: 'D_m.png' },\n        { chord: 'D#+', name: 'Ре-диез мажор увеличенный', src: 'D_+.png' },\n        { chord: 'Dmaj7', name: 'Большой мажорный септаккорд от ноты Ре', src: 'Dmaj7.png' },\n        { chord: 'D#maj7', name: 'Большой мажорный септаккорд от ноты Ре-диез', src: 'D_maj7.png' },\n        { chord: 'Ddim', name: 'Уменьшенный аккорд от ноты Ре', src: 'Ddim.png' },\n        { chord: 'D#dim', name: 'Уменьшенный аккорд от ноты Ре-диез', src: 'D_dim.png' },\n        { chord: 'Dsus4', name: 'Ре мажор с квартой вместо терции', src: 'Dsus4.png' },\n        { chord: 'D#sus4', name: 'Ре-диез мажор с квартой вместо терции', src: 'D_sus4.png' },\n        { chord: 'D6', name: 'Мажорный секстаккорд от ноты Ре', src: 'D6.png' },\n        { chord: 'Dm6', name: 'Минорный секстаккорд от ноты Ре', src: 'Dm6.png' },\n        { chord: 'D#6', name: 'Мажорный секстаккорд от ноты Ре-диез', src: 'D_6.png' },\n        { chord: 'D#m6', name: 'Минорный секстаккорд от ноты Ре-диез', src: 'D_m6.png' },\n        { chord: 'D7', name: 'Мажорный септаккорд (Доминантсептаккорд) от ноты Ре', src: 'D7.png' },\n        { chord: 'Dm7', name: 'Минорный септаккорд от ноты Ре', src: 'Dm7.png' },\n        {\n            chord: 'D#7',\n            name: 'Мажорный септаккорд (Доминантсептаккорд) от ноты Ре-диез',\n            src: 'D_7.png',\n        },\n        { chord: 'D#m7', name: 'Минорный септаккорд от ноты Ре-диез', src: 'D_m7.png' },\n        { chord: 'Ddim7', name: 'Уменьшенный септаккорд от ноты Ре', src: 'Ddim7.png' },\n        { chord: 'D#dim7', name: 'Уменьшенный септаккорд от ноты Ре-диез', src: 'D_dim7.png' },\n        { chord: 'D7sus4', name: 'Мажорный септаккорд с квартой от ноты Ре', src: 'D7sus4.png' },\n        {\n            chord: 'D#7sus4',\n            name: 'Мажорный септаккорд с квартой от ноты Ре-диез',\n            src: 'D_7sus4.png',\n        },\n        { chord: 'D7/6', name: 'Мажорный септаккорд с секстой от ноты Ре', src: 'D7-6.png' },\n        { chord: 'D#7/6', name: 'Мажорный септаккорд с секстой от ноты Ре-диез', src: 'D_7-6.png' },\n        { chord: 'D9', name: 'Мажорный нонаккорд от ноты Ре', src: 'D9.png' },\n        { chord: 'Dm9', name: 'Минорный нонаккорд от ноты Ре', src: 'Dm9.png' },\n        { chord: 'D#9', name: 'Мажорный нонаккорд от ноты Ре-диез', src: 'D_9.png' },\n        { chord: 'D#m9', name: 'Минорный нонаккорд от ноты Ре-диез', src: 'D_m9.png' },\n    ],\n    E: [\n        { chord: 'E', name: 'Ми мажор', src: 'E.png' },\n        { chord: 'Em', name: 'Ми минор', src: 'Em.png' },\n        { chord: 'E+', name: 'Ми мажор увеличенный', src: 'E+.png' },\n        { chord: 'Emaj7', name: 'Большой мажорный септаккорд от ноты Ми', src: 'Emaj7.png' },\n        { chord: 'Edim', name: 'Уменьшенный аккорд от ноты Ми', src: 'Edim.png' },\n        { chord: 'Esus4', name: 'Ми мажор с квартой вместо терции', src: 'Esus4.png' },\n        { chord: 'E6', name: 'Мажорный секстаккорд от ноты Ми', src: 'E6.png' },\n        { chord: 'Em6', name: 'Минорный секстаккорд от ноты Ми', src: 'Em6.png' },\n        { chord: 'E7', name: 'Мажорный септаккорд (Доминантсептаккорд) от ноты Ми', src: 'E7.png' },\n        { chord: 'Em7', name: 'Минорный септаккорд от ноты Ми', src: 'Em7.png' },\n        { chord: 'Edim7', name: 'Уменьшенный септаккорд от ноты Ми', src: 'Edim7.png' },\n        { chord: 'E7sus4', name: 'Мажорный септаккорд с квартой от ноты Ми', src: 'E7sus4.png' },\n    ],\n    F: [{ chord: 'F', name: 'Фа мажор', src: 'F.png' }],\n    G: [\n        { chord: 'Gm', name: 'Соль минор', src: 'Gm.png' },\n        { chord: 'G#', name: 'Соль-диез мажор', src: 'G_.png' },\n    ],\n    H: [],\n};\n\nexport const Chords: Record<string, IChord> = Object.keys(ChordsList).reduce<any>(\n    (chords, note) => {\n        ChordsList[note.charAt(0)].forEach((elem) => {\n            chords[elem.chord] = elem;\n        });\n        return chords;\n    },\n    {}\n);\n\nexport const ChordsKeys = Object.keys(Chords);\n","import { CHORD_REGEX_PATTERN, ChordsKeys } from '../constants/chords';\n\n/*\n ** Обозначение боя:\n ** ↧/↥ - обычный удар\n ** ⇓/⇑ - сильный удар\n ** ⇂/↾ - заглушка\n ** ⇣/⇡ - пустой удар (не касаясь струн)\n */\nexport function getChordsFromString(line: string) {\n    return Array.from(\n        new Set(line.split(/\\b/).filter((word) => word.match(CHORD_REGEX_PATTERN)))\n    ).filter((chord) => ChordsKeys.includes(chord));\n}\n\nexport function encodeChord(chord: string) {\n    return chord.replaceAll('#', '_').replaceAll('/', '-');\n}\n\nexport function decodeChord(chord: string) {\n    return chord.replaceAll('_', '#').replaceAll('-', '/');\n}\n\nexport function isChordsRow(line: string): string[] {\n    if (line.length) {\n        const pattern = new RegExp(CHORD_REGEX_PATTERN);\n        return line.match(pattern) ? ['chords_row'] : [];\n    }\n    return [];\n}\n","import React, { FC, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Chords } from '../../../constants/chords';\nimport { ROUTE } from '../../../constants/route';\nimport { Themes } from '../../../constants/Themes';\nimport { useAppNavigation } from '../../../component/Navigation';\nimport { useTheme } from '../../../hooks/useTheme';\nimport { encodeChord } from '../../../utils/stringHelper';\nimport { scrollToTop } from '../../../utils/helper';\n\nimport styles from './ChordList.module.scss';\n\ntype Params = {\n    note?: string;\n};\n\nconst ChordList: FC = () => {\n    const history = useHistory();\n    const { theme } = useTheme();\n    const { note = '' } = useParams<Params>();\n    const { goToChords } = useAppNavigation();\n    const [list, setList] = useState<string[]>([]);\n    const hasNote = !!Chords[note.charAt(0)];\n\n    if (note.length && !hasNote) {\n        goToChords();\n    }\n\n    useEffect(() => {\n        scrollToTop();\n        setList(\n            hasNote\n                ? Object.keys(Chords).filter((value) => value.charAt(0) === note.charAt(0))\n                : Object.keys(Chords)\n        );\n    }, [note, hasNote]);\n\n    function withThemeClassName(classNames: string) {\n        return cn(classNames, { [styles.dark]: theme === Themes.DARK });\n    }\n\n    function onChordClick(value: string) {\n        history.push(`${ROUTE.CHORDS}/${encodeChord(value)}`);\n    }\n\n    return (\n        <>\n            {hasNote && <p className={withThemeClassName(styles.header)}>{note.charAt(0)}</p>}\n            <div className={styles.content}>\n                {list.map((name, index) => (\n                    <div\n                        key={`chord-${index}`}\n                        onClick={() => onChordClick(name)}\n                        className={withThemeClassName(styles.text)}\n                    >\n                        {name}\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n};\n\nexport default ChordList;\n","import React, { FC, useState } from 'react';\n\nimport Button from '../Button';\nimport expandFullscreen from '../../static/svgs/expand-fullscreen.svg';\nimport exitFullscreen from '../../static/svgs/exit-fullscreen.svg';\n\nconst FULL_SCREEN_BUTTON_DATA_TEST_ID = 'full-screen-button';\n\nconst FullScreenButton: FC = () => {\n    const [fullScreenBtnIcon, setFullScreenBtnIcon] = useState<string>(() =>\n        !document.fullscreenElement ? expandFullscreen : exitFullscreen\n    );\n\n    async function toggleFullScreen() {\n        if (!document.fullscreenElement) {\n            await document.documentElement.requestFullscreen();\n            setFullScreenBtnIcon(exitFullscreen);\n        } else {\n            if (document.exitFullscreen) {\n                await document.exitFullscreen();\n                setFullScreenBtnIcon(expandFullscreen);\n            }\n        }\n    }\n\n    return (\n        <Button\n            icon={fullScreenBtnIcon}\n            onClick={toggleFullScreen}\n            size=\"small\"\n            dataTestId={FULL_SCREEN_BUTTON_DATA_TEST_ID}\n        />\n    );\n};\n\nexport default FullScreenButton;\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { useTheme } from '../../../hooks/useTheme';\nimport { encodeChord } from '../../../utils/stringHelper';\nimport { scrollToTop } from '../../../utils/helper';\nimport { Chords, IChord } from '../../../constants/chords';\nimport { ROUTE } from '../../../constants/route';\nimport { Themes } from '../../../constants/Themes';\nimport FullScreenButton from '../../../component/FullScreenButton';\n\nimport styles from './Chord.module.scss';\n\ntype ChordProps = {\n    chord: IChord;\n};\n\nconst { DARK } = Themes;\n\nconst Chord: FC<ChordProps> = ({ chord: { chord, name, src } }) => {\n    const history = useHistory();\n    const { theme } = useTheme();\n    const [chordsSameNote, setChordsSameNote] = useState<string[]>([]);\n    const note = chord.charAt(0);\n\n    useEffect(() => {\n        scrollToTop();\n        setChordsSameNote(Object.keys(Chords).filter((value) => value.charAt(0) === note));\n    }, []);\n\n    function withThemeClassName(className: string) {\n        return cn(className, { [styles.dark]: theme === DARK });\n    }\n\n    const onChordClick = useCallback(\n        (value: string) => history.push(`${ROUTE.CHORDS}/${encodeChord(value)}`),\n        []\n    );\n\n    const onNoteClick = useCallback(() => onChordClick(note), [note]);\n\n    return (\n        <>\n            <div className={styles.content}>\n                <p className={withThemeClassName(styles.header)}>{chord}</p>\n                <p className={withThemeClassName(styles.description)}>{name}</p>\n                <img className={styles.chordImage} src={`/chords/${note}/${src}`} alt={name} />\n                <div className={styles.note} onClick={onNoteClick}>\n                    {note}\n                </div>\n                <div className={styles.chordsSameNoteBlock}>\n                    {chordsSameNote.map((value, index) => (\n                        <div\n                            key={`same-note-chord-${index}`}\n                            className={styles.chord}\n                            onClick={() => onChordClick(value)}\n                        >\n                            {value}\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className={styles.buttonsBlock}>\n                <FullScreenButton />\n            </div>\n        </>\n    );\n};\n\nexport default Chord;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { Chords, IChord } from '../../../constants/chords';\nimport { goTo404 } from '../../../utils/navigation/navigation';\nimport { decodeChord } from '../../../utils/stringHelper';\nimport Chord from '../Chord';\n\ntype Params = {\n    chordName?: string;\n};\n\nconst ChordProvider: FC = () => {\n    const history = useHistory();\n    const { chordName = '' } = useParams<Params>();\n    const [chord, setChord] = useState<IChord | null>(null);\n\n    useEffect(() => {\n        (async () => {\n            const chord = decodeChord(chordName);\n            if (Object.keys(Chords).includes(chord)) {\n                setChord(Chords[chord]);\n            } else {\n                goTo404(history);\n            }\n        })();\n    }, [chordName]);\n\n    return chord ? <Chord chord={chord} /> : null;\n};\n\nexport default ChordProvider;\n","import React, { FC } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { ROUTE } from '../../constants/route';\nimport ChordList from './ChordList/ChordList';\nimport ChordProvider from './ChordProvider';\n\nconst ChordsPageRouter: FC = () => (\n    <Switch>\n        <Route exact path={`${ROUTE.CHORDS}/:chordName`} render={() => <ChordProvider />} />\n        <Route exact path={ROUTE.CHORDS} render={() => <ChordList />} />\n        <Redirect to={ROUTE.CHORDS} />\n    </Switch>\n);\n\nexport default ChordsPageRouter;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { HeaderProps } from './types';\n\nimport styles from './Header.module.scss';\n\nconst Header: React.FC<HeaderProps> = ({\n    renderLeft,\n    renderCenter,\n    renderRight,\n    position = 'relative',\n    backgroundColor = 'transparent',\n    className,\n}) => (\n    <div\n        id=\"header\"\n        className={cn(styles.header, styles[position], styles[backgroundColor], className)}\n    >\n        <div className={styles.slots}>\n            <div className={styles.slot}>{renderLeft && renderLeft()}</div>\n            <div className={styles.slot}>{renderCenter && renderCenter()}</div>\n            <div className={styles.slot}>{renderRight && renderRight()}</div>\n        </div>\n    </div>\n);\n\nexport default Header;\n","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { NavItemProps } from './types';\n\nimport styles from './NavItem.module.scss';\nimport { useTheme } from '../../hooks/useTheme';\n\nconst NavItem: FC<NavItemProps> = ({\n    active = false,\n    onClick,\n    dataTestId = 'nav-item',\n    children,\n}) => {\n    const { theme } = useTheme();\n\n    return (\n        <div\n            className={cn(styles.navItem, styles[theme], {\n                [styles.active]: active,\n            })}\n            onClick={onClick}\n            data-test-id={dataTestId}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default NavItem;\n","import React, { FC, useCallback } from 'react';\nimport { useRouteMatch } from 'react-router';\nimport { useHistory } from 'react-router-dom';\n\nimport NavItem from './NavItem';\nimport { NavItemRouteProps } from './types';\n\nconst NavItemRoute: FC<NavItemRouteProps> = ({ to, children, onClick, ...rest }) => {\n    const history = useHistory();\n    const match = useRouteMatch(to);\n\n    const onNavClick = useCallback(() => {\n        if (onClick) {\n            onClick();\n        }\n\n        history.push(to);\n    }, [to, onClick]);\n\n    return (\n        <NavItem {...rest} active={!!match} onClick={onNavClick}>\n            {children}\n        </NavItem>\n    );\n};\n\nexport default NavItemRoute;\n","import React, { FC } from 'react';\n\nimport NavItemRoute from '../NavItemRoute/NavItemRoute';\nimport { ROUTE } from '../../constants/route';\n\nimport styles from './Navbar.module.css';\n\nconst Navbar: FC = () => (\n    <div className={styles.block}>\n        <NavItemRoute to={ROUTE.SONGS} dataTestId=\"nav-item-songs\">\n            Lyrics\n        </NavItemRoute>\n        <NavItemRoute to={ROUTE.CHORDS} dataTestId=\"nav-item-chords\">\n            Chords\n        </NavItemRoute>\n    </div>\n);\n\nexport default Navbar;\n","import React, { FC, useContext } from 'react';\nimport { Themes } from '../../constants/Themes';\nimport Button from '../../component/Button';\nimport Header from '../../component/Header';\nimport Navbar from '../../component/Navbar';\nimport moon from '../../static/svgs/moon.svg';\nimport sun from '../../static/svgs/sun.svg';\nimport { CHANGE_THEME_ACTION, ThemeContext } from '../../component/ThemeContext/ThemeContext';\nimport { saveTheme } from '../../api/settingService';\n\nconst { DARK, LIGHT } = Themes;\n\nconst MainHeader: FC = () => {\n    const {\n        state: { theme },\n        dispatch,\n    } = useContext(ThemeContext);\n\n    function toggleTheme() {\n        if (theme === LIGHT) {\n            changeTheme(DARK);\n        } else {\n            changeTheme(LIGHT);\n        }\n    }\n\n    const changeTheme = (theme: Themes) => {\n        saveTheme(theme);\n        dispatch({\n            type: CHANGE_THEME_ACTION,\n            payload: { theme },\n        });\n    };\n\n    return (\n        <Header\n            renderCenter={() => <Navbar />}\n            renderRight={() => (\n                <Button icon={theme === LIGHT ? moon : sun} onClick={toggleTheme} size=\"small\" />\n            )}\n        />\n    );\n};\n\nexport default MainHeader;\n","import songsJsonData from './songs.json';\n\ntype ISongRow = string[];\n\nexport interface ISong {\n    name: string;\n    lyrics: ISongRow[];\n    speed?: number;\n}\n\nexport interface IStoredSong {\n    path: string;\n    speed?: number;\n}\n\ntype ISongList = Record<string, IStoredSong>;\n\ntype IStoredSongs = Record<string, ISongList>;\n\nexport const SongsData: IStoredSongs = songsJsonData;\n","import React, { FC } from 'react';\n\nimport { SongsData } from '../../constants/SongsData';\n\nimport styles from './AuthorsAlphabetPanel.module.scss';\n\ntype Props = {\n    onClick: (sign: string) => void;\n};\n\nconst AuthorsAlphabetPanel: FC<Props> = ({ onClick }) => {\n    const alphabet = Array.from(new Set(Object.keys(SongsData).map((author) => author.charAt(0))));\n    return (\n        <div className={styles.panel}>\n            {alphabet.map((sign) => (\n                <div key={`sign-${sign}`} className={styles.sign} onClick={() => onClick(sign)}>\n                    {sign}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default AuthorsAlphabetPanel;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { SongsData } from '../../../constants/SongsData';\nimport { ROUTE } from '../../../constants/route';\nimport { useTheme } from '../../../hooks/useTheme';\nimport { scrollToTop } from '../../../utils/helper';\nimport { Themes } from '../../../constants/Themes';\n\nimport styles from './SongList.module.scss';\nimport { useAppNavigation } from '../../../component/Navigation';\nimport AuthorsAlphabetPanel from '../../../component/AuthorsAlphabetPanel';\n\ntype Params = {\n    author?: string;\n};\n\nconst SongList: FC = () => {\n    const history = useHistory();\n    const { theme } = useTheme();\n    const { author = '' } = useParams<Params>();\n    const { goToSongs } = useAppNavigation();\n    const hasAuthor = !!SongsData[author];\n    const [filteredAuthors, setFilteredAuthors] = useState<string[]>(Object.keys(SongsData));\n\n    if (author.length && !hasAuthor) {\n        goToSongs();\n    }\n\n    if (author.length && hasAuthor && Object.keys(SongsData[author]).length === 1) {\n        onSongClick(Object.keys(SongsData[author])[0]);\n    }\n\n    useEffect(scrollToTop, []);\n\n    function withThemeClassName(classNames: string) {\n        return cn(classNames, { [styles.dark]: theme === Themes.DARK });\n    }\n\n    function onSongClick(name: string) {\n        history.push(`${ROUTE.SONGS}/${author}/${name}`);\n    }\n\n    function onSignClick(sign: string) {\n        setFilteredAuthors(Object.keys(SongsData).filter((author) => author.startsWith(sign)));\n    }\n\n    function onAuthorClick(value: string) {\n        history.push(`${ROUTE.SONGS}/${value}`);\n    }\n\n    return (\n        <>\n            <AuthorsAlphabetPanel onClick={onSignClick} />\n            {hasAuthor && <p className={withThemeClassName(styles.header)}>{author}</p>}\n            <div className={styles.content}>\n                {hasAuthor\n                    ? Object.keys(SongsData[author]).map((name, index) => (\n                          <div\n                              key={`song-${index}`}\n                              onClick={() => onSongClick(name)}\n                              className={withThemeClassName(styles.text)}\n                          >\n                              {name}\n                          </div>\n                      ))\n                    : filteredAuthors.map((value, index) => (\n                          <div\n                              key={`song-${index}`}\n                              onClick={() => onAuthorClick(value)}\n                              className={withThemeClassName(styles.text)}\n                          >\n                              {value}\n                          </div>\n                      ))}\n            </div>\n        </>\n    );\n};\n\nexport default SongList;\n","import { ISong, SongsData } from '../constants/SongsData';\nimport { isChordsRow } from '../utils/stringHelper';\n\nexport async function getSong(author: string, name: string): Promise<ISong> {\n    if (!SongsData[author]?.[name]) {\n        return Promise.reject();\n    }\n\n    const path = `/songs/${SongsData[author][name].path}`;\n\n    const file = await fetch(path);\n    const text = await file.text();\n    const lines = text.split('\\n');\n\n    return {\n        name,\n        lyrics: lines.map((line) => {\n            if (line === `${author} - ${name}`) {\n                return [];\n            }\n            return [!line.length ? '\\n' : line, ...isChordsRow(line)];\n        }),\n    };\n}\n","export function printTextWithWrap(\n    context: CanvasRenderingContext2D,\n    text: string,\n    x: number,\n    y: number,\n    lineHeight: number,\n    fitWidth: number\n) {\n    const words = text.split(' ');\n    let line = '';\n\n    words.forEach((word, i) => {\n        const tmpLine = line + (i > 0 ? ' ' : '') + word;\n        const currWidth = context.measureText(tmpLine).width;\n\n        if (currWidth > fitWidth && i > 0) {\n            context.fillText(line, x, y);\n            line = word;\n            y += lineHeight;\n        } else {\n            line = tmpLine;\n        }\n    });\n\n    context.fillText(line, x, y);\n}\n\nexport function printChord() {\n    const cnv = document.createElement('canvas');\n    cnv.width = 400;\n    cnv.height = 350;\n    const ctx = cnv.getContext('2d');\n    if (!ctx) {\n        return;\n    }\n    ctx.strokeStyle = 'red';\n    const w = cnv.width - 1;\n    const h = cnv.height - 1;\n    const deltaX = 80;\n    const deltaY = 50;\n    for (let x = -0.5; x < w; x += deltaX) {\n        ctx.strokeRect(x, 0, 0.1, h);\n    }\n    for (let y = -0.5; y < h; y += deltaY) {\n        ctx.strokeRect(0, y, w, 0.1);\n    }\n    document.getElementById('cimg')?.setAttribute('src', cnv.toDataURL());\n    // document.getElementById('cdiv')?.clas('src', cnv.toDataURL());\n    // сохрнить в рисунок\n    // $('#cimg').attr('src', cnv.toDataURL());\n    // добавить как фон для div\n    // $('#cdiv').css('background-image', \"url('\" + cnv.toDataURL() + \"')\");\n}\n","import React, { FC, useEffect } from 'react';\nimport { printChord } from '../../utils/canvasHelper';\n\nexport type ChordItemProps = {\n    chord?: string;\n};\n\nconst ChordItem: FC<ChordItemProps> = ({ chord }) => {\n    useEffect(printChord, []);\n\n    return <img id=\"cimg\" alt={chord} />;\n};\n\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst json = [\n    {\n        id: '404',\n        name: 'Cb',\n        intervals: '',\n        positions: [\n            {\n                id: '1226',\n                position: 'x,2,4,4,4,2',\n                fingerings: '13331;12341',\n                picture: '',\n                chord_id: '404',\n                instrument_id: '1',\n            },\n            {\n                id: '1231',\n                position: '7,9,9,8,7,7',\n                fingerings: '134211',\n                picture: '',\n                chord_id: '404',\n                instrument_id: '1',\n            },\n            {\n                id: '1251',\n                position: '7,6,4,4,4,7',\n                fingerings: '321114',\n                picture: '',\n                chord_id: '404',\n                instrument_id: '1',\n            },\n        ],\n    },\n];\n//\n// function print() {\n//     for (let j = 0; j < json[0].positions.length; j++) {\n//         const position = json[0].positions[j].position.replace('x', '').split(',');\n//         const min = Math.min.apply(null, position);\n//         const displacement = min < 1 ? 1 : min;\n//         const svg = drawSVGElement('svg', { viewBox: '0 0 70 60' }, wrap);\n//         drawGrid();\n//\n//         for (let i = 0; i < position.length; i++) {\n//             if (parseInt(position[i]) > 0) {\n//                 const cp = {\n//                     // circle position\n//                     x: 10 + parseInt(i) * 10,\n//                     y: 15 + (position[i] - displacement) * 10,\n//                 };\n//                 drawSVGElement('circle', { cx: cp.x, cy: cp.y, r: 4 }, svg);\n//             }\n//         }\n//     }\n// }\n//\n// function drawGrid() {\n//     let d = '';\n//     for (let i = 1; i < 6; i++) {\n//         d += `M10,${i * 10}H60`;\n//     }\n//     for (let i = 1; i < 7; i++) {\n//         d += `M${i * 10},10V50`;\n//     }\n//     const path = drawSVGElement('path', { d: d }, svg);\n// }\n//\n// function drawSVGElement(tag, o, parent) {\n//     const svgElement = document.createElementNS(SVG_NS, tag);\n//     for (const name in o) {\n//         if (o.hasOwnProperty(name)) {\n//             svgElement.setAttributeNS(null, name, o[name]);\n//         }\n//     }\n//     parent.appendChild(svgElement);\n//     return svgElement;\n// }\nexport default ChordItem;\n","import React from 'react';\nimport Modal from 'react-modal';\nimport cn from 'classnames';\n\nimport { Chords } from '../../constants/chords';\nimport { noop } from '../../utils/helper';\nimport ChordItem from '../ChordItem';\n\nimport styles from './ChordsRowPopUp.module.scss';\n\nexport type ChordsRowPopUp = {\n    isOpen?: boolean;\n    chords?: string[];\n    onClose?: () => void;\n};\n\nconst ChordsRowPopUp: React.FC<ChordsRowPopUp> = ({\n    isOpen = false,\n    chords = [],\n    onClose = noop,\n}) => (\n    <>\n        {isOpen && !!chords.length && (\n            <Modal\n                onRequestClose={onClose}\n                isOpen={isOpen}\n                className={styles.content}\n                overlayClassName={cn(styles.overlay)}\n                bodyOpenClassName={styles.body}\n                ariaHideApp={false}\n            >\n                <div className={styles.content} onClick={onClose}>\n                    {chords.map((value, index) => (\n                        <div className={styles.block} key={`chord-${index}`}>\n                            <p className={styles.title}>{value}</p>\n                            <img\n                                src={`/chords/${value.charAt(0)}/${Chords[value].src}`}\n                                alt={value}\n                            />\n                            <ChordItem />\n                        </div>\n                    ))}\n                </div>\n            </Modal>\n        )}\n    </>\n);\n\nexport default ChordsRowPopUp;\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { useInterval } from '../../../hooks/useInterval';\nimport { useTheme } from '../../../hooks/useTheme';\nimport { getChordsFromString } from '../../../utils/stringHelper';\nimport { scrollToTop } from '../../../utils/helper';\nimport { ROUTE } from '../../../constants/route';\nimport { Themes } from '../../../constants/Themes';\nimport { ISong } from '../../../constants/SongsData';\nimport Button from '../../../component/Button';\nimport ChordsRowPopUp from '../../../component/ChordsRowPopUp';\nimport FullScreenButton from '../../../component/FullScreenButton';\nimport arrowUp from '../../../static/svgs/arrow-up.svg';\n\nimport styles from './Song.module.scss';\n\ntype SongProps = {\n    author: string;\n    song: ISong;\n};\n\ntype ChordsModalState = {\n    activeRowChords?: string[];\n    isModalOpen?: boolean;\n};\n\nconst { DARK } = Themes;\nconst DEFAULT_SPEED = 70;\nconst SPEED_DELTA = 10;\nconst TIMEOUT = 5;\n\nconst Song: FC<SongProps> = ({ author, song: { name, lyrics, speed: defaultSpeed = 0 } }) => {\n    const history = useHistory();\n    const { theme } = useTheme();\n    const [speed, setSpeed] = useState<number>(0);\n    const [scrollBtnLabel, setScrollBtnLabel] = useState<string>('!');\n    const [scrollable, setScrollable] = useState<boolean>(false);\n    const [{ isModalOpen, activeRowChords }, setIsModalState] = useState<ChordsModalState>({});\n    const [time, setTime] = useState<number>(-1);\n    const [chords, setChords] = useState<string[]>([]);\n\n    useEffect(() => {\n        scrollToTop();\n        setSpeed(defaultSpeed);\n        let allChords = new Set<string>();\n        lyrics.forEach(([line, isChordsRow]) => {\n            if (isChordsRow) {\n                allChords = new Set([...Array.from(allChords), ...getChordsFromString(line)]);\n            }\n        });\n        setChords(Array.from(allChords));\n    }, []);\n\n    useEffect(() => {\n        let timeout: number;\n        if (time > 0) {\n            timeout = window.setTimeout(() => {\n                setScrollBtnLabel(String(time - 1));\n                setTime((prevState) => prevState - 1);\n            }, 500);\n        } else if (time === 0) {\n            setScrollBtnLabel(String(speed));\n            setScrollable(true);\n        }\n        return () => window.clearTimeout(timeout);\n    }, [time]);\n\n    const autoscroll = useCallback(\n        () => scrollable && window.scrollBy({ top: 0.5, behavior: 'smooth' }),\n        [scrollable]\n    );\n\n    const onScrollToTopClick = useCallback(() => {\n        setScrollable(false);\n        scrollToTop();\n    }, []);\n\n    useInterval(autoscroll, DEFAULT_SPEED - speed * SPEED_DELTA);\n\n    const toggleScrollable = async () => {\n        if (scrollable) {\n            setScrollable(false);\n        } else {\n            setScrollBtnLabel(String(TIMEOUT));\n            setTime(TIMEOUT);\n        }\n    };\n\n    const increaseSpeed = () => setSpeed((prevValue) => prevValue + 1);\n\n    const decreaseSpeed = () => setSpeed((prevValue) => prevValue - 1);\n\n    const onAuthorClick = () => history.push(`${ROUTE.SONGS}/${author}`);\n\n    function withThemeClassName(className: string) {\n        return cn(className, { [styles.dark]: theme === DARK });\n    }\n\n    function onChordClick(chordsRow: string) {\n        const chords = getChordsFromString(chordsRow);\n        setIsModalState({ isModalOpen: true, activeRowChords: chords });\n    }\n\n    const onCloseModal = useCallback(() => setIsModalState({}), []);\n\n    return (\n        <>\n            <div className={styles.content}>\n                <p className={withThemeClassName(styles.header)}>\n                    <span className={withThemeClassName(styles.author)} onClick={onAuthorClick}>\n                        {author}\n                    </span>\n                    {` - ${name}`}\n                </p>\n                <div className={styles.lyrics}>\n                    {lyrics.map(([text, isChordsRow], index) =>\n                        isChordsRow ? (\n                            <p\n                                key={`row-${index}`}\n                                className={withThemeClassName(cn(styles.row, styles.chord))}\n                                // onClick={() => onChordClick(String(text))}\n                            >\n                                {text}\n                            </p>\n                        ) : (\n                            <p key={`row-${index}`} className={withThemeClassName(styles.row)}>\n                                {text}\n                            </p>\n                        )\n                    )}\n                </div>\n            </div>\n            <div className={styles.buttonsBlockWrapper}>\n                <div className={styles.buttonsBlock}>\n                    <div className={styles.buttonsBlockContent}>\n                        {scrollable && (\n                            <>\n                                <Button\n                                    label=\"-\"\n                                    onClick={decreaseSpeed}\n                                    size=\"small\"\n                                    disabled={speed <= -5}\n                                    className={styles.speed}\n                                />\n                                <Button\n                                    label=\"+\"\n                                    onClick={increaseSpeed}\n                                    size=\"small\"\n                                    disabled={speed >= 5}\n                                    className={styles.speed}\n                                />\n                            </>\n                        )}\n                        <Button\n                            label={scrollable ? String(speed) : scrollBtnLabel}\n                            onClick={toggleScrollable}\n                            size=\"small\"\n                            className={scrollable ? styles.active : ''}\n                        />\n                        <Button onClick={onScrollToTopClick} size=\"small\" icon={arrowUp} />\n                        <FullScreenButton />\n                    </div>\n                </div>\n            </div>\n            <ChordsRowPopUp\n                isOpen={isModalOpen}\n                chords={activeRowChords ?? chords}\n                onClose={onCloseModal}\n            />\n        </>\n    );\n};\n\nexport default Song;\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback: () => void, delay: number | null) {\n    const savedCallback = useRef(callback);\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n\n        if (delay !== null) {\n            const id = setInterval(tick, delay);\n\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n","import React, { FC, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { getSong } from '../../../api/songService';\nimport { goTo404 } from '../../../utils/navigation/navigation';\nimport { ISong } from '../../../constants/SongsData';\nimport Song from '../Song';\n\ntype Params = {\n    author: string;\n    songName: string;\n};\n\nconst SongProvider: FC = () => {\n    const history = useHistory();\n    const { author, songName } = useParams<Params>();\n    const [song, setSong] = useState<ISong | null>(null);\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const res = await getSong(author, songName);\n                setSong(res);\n            } catch (e) {\n                goTo404(history);\n            }\n        })();\n    }, []);\n\n    return song ? <Song author={author} song={song} /> : null;\n};\n\nexport default SongProvider;\n","import React, { FC } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { ROUTE } from '../../constants/route';\nimport SongList from './SongList/SongList';\nimport SongProvider from './SongProvider/SongProvider';\n\nconst SongsPageRouter: FC = () => (\n    <Switch>\n        <Route exact path={`${ROUTE.SONGS}/:author/:songName`} render={() => <SongProvider />} />\n        <Route exact path={ROUTE.SONGS} render={() => <SongList />} />\n        <Route path={`${ROUTE.SONGS}/:author`} render={() => <SongList />} />\n        <Redirect to={ROUTE.SONGS} />\n    </Switch>\n);\n\nexport default SongsPageRouter;\n","import React, { FC } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { ROUTE } from '../../constants/route';\nimport { Themes } from '../../constants/Themes';\nimport { useTheme } from '../../hooks/useTheme';\nimport ErrorPage from '../ErrorPage';\nimport ChordsPageRouter from '../../containers/ChordsPageRouter';\nimport MainHeader from '../../containers/MainHeader';\nimport SongsPageRouter from '../../containers/SongsPageRouter';\n\nimport styles from './MainPage.module.scss';\n\nconst MainPage: FC = () => {\n    const { theme } = useTheme();\n\n    return (\n        <div className={cn(styles.page, { [styles.dark]: theme === Themes.DARK })}>\n            <MainHeader />\n            <Switch>\n                <Route path={ROUTE.SONGS} render={() => <SongsPageRouter />} />\n                <Route path={ROUTE.CHORDS} render={() => <ChordsPageRouter />} />\n                <Route path={ROUTE.ERROR} component={ErrorPage} />\n                <Redirect to={ROUTE.SONGS} />\n            </Switch>\n        </div>\n    );\n};\n\nexport default MainPage;\n","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Themes } from './constants/Themes';\nimport { useTheme } from './hooks/useTheme';\nimport { NavigationProvider } from './component/Navigation';\nimport ContextContainer from './containers/ContextContainer';\nimport ThemeContextContainer from './containers/ThemeContextContainer';\nimport MainPage from './pages/MainPage';\n\nimport styles from './App.module.scss';\n\nconst App: FC = () => {\n    const { theme } = useTheme();\n\n    return (\n        <ThemeContextContainer>\n            <ContextContainer>\n                <NavigationProvider>\n                    <div\n                        id=\"base\"\n                        className={cn(styles.app, { [styles.dark]: theme === Themes.DARK })}\n                    >\n                        <MainPage />\n                    </div>\n                </NavigationProvider>\n            </ContextContainer>\n        </ThemeContextContainer>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'swiper/swiper-bundle.css';\nimport cssVars from 'css-vars-ponyfill';\n\nimport { config } from './constants/cssVarsConfig';\nimport { ieDetector } from './utils/helper';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nimport './index.css';\n\nif (ieDetector()) {\n    cssVars(config);\n}\n\nconst queryClient = new QueryClient({\n    defaultOptions: {\n        queries: {\n            refetchOnWindowFocus: false,\n            cacheTime: 0,\n            staleTime: 0,\n            retry: false,\n        },\n    },\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <QueryClientProvider client={queryClient}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </QueryClientProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Chord_content__1hJWx\",\"header\":\"Chord_header__1sL4H\",\"dark\":\"Chord_dark__22tQb\",\"author\":\"Chord_author__29HCY\",\"lyrics\":\"Chord_lyrics__14VL9\",\"row\":\"Chord_row__3u4sU\",\"chord\":\"Chord_chord__2hjHh\",\"buttons-block\":\"Chord_buttons-block__17mmC\",\"buttonsBlock\":\"Chord_buttons-block__17mmC\",\"active\":\"Chord_active__1jaHk\",\"speed\":\"Chord_speed__2d_6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Errors_page__TcEmQ\",\"content\":\"Errors_content__2YII3\",\"button\":\"Errors_button__28MBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3CPQR\",\"static\":\"Header_static__239ug\",\"fixed\":\"Header_fixed__2Zkn3\",\"sticky\":\"Header_sticky__2wJQt\",\"relative\":\"Header_relative__nOdJn\",\"transparent\":\"Header_transparent__2kUyn\",\"white\":\"Header_white__22CGI\",\"slots\":\"Header_slots__PiHjm\",\"slot\":\"Header_slot__3uxbj\",\"scaled\":\"Header_scaled__D93kP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"ChordsRowPopUp_overlay__wLeJB\",\"content\":\"ChordsRowPopUp_content__1d_OA\",\"block\":\"ChordsRowPopUp_block__1--DO\",\"title\":\"ChordsRowPopUp_title__3G9Q5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"SongList_header__3lKdj\",\"dark\":\"SongList_dark__3p4pZ\",\"content\":\"SongList_content__1INZN\",\"text\":\"SongList_text__6tC7m\"};"],"sourceRoot":""}